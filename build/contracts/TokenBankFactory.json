{
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "token_contract",
          "type": "address"
        },
        {
          "name": "tlist",
          "type": "address"
        }
      ],
      "name": "newTokenBank",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "CreateTokenBank",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "16": "contracts/erc20/IERC20.sol",
    "21": "contracts/utils/Ownable.sol",
    "24": "contracts/utils/TokenClaimer.sol",
    "3": "contracts/TrustListTools.sol",
    "4": "contracts/assets/ToKenBank.sol"
  },
  "ast": {
    "absolutePath": "contracts/assets/ToKenBank.sol",
    "exportedSymbols": {
      "TokenBank": [
        657
      ],
      "TokenBankFactory": [
        701
      ]
    },
    "id": 702,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 422,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:4"
      },
      {
        "absolutePath": "contracts/utils/Ownable.sol",
        "file": "../utils/Ownable.sol",
        "id": 423,
        "nodeType": "ImportDirective",
        "scope": 702,
        "sourceUnit": 6526,
        "src": "34:30:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TrustListTools.sol",
        "file": "../TrustListTools.sol",
        "id": 424,
        "nodeType": "ImportDirective",
        "scope": 702,
        "sourceUnit": 421,
        "src": "65:31:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/utils/TokenClaimer.sol",
        "file": "../utils/TokenClaimer.sol",
        "id": 425,
        "nodeType": "ImportDirective",
        "scope": 702,
        "sourceUnit": 6788,
        "src": "97:35:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/erc20/IERC20.sol",
        "file": "../erc20/IERC20.sol",
        "id": 426,
        "nodeType": "ImportDirective",
        "scope": 702,
        "sourceUnit": 5785,
        "src": "133:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 427,
              "name": "TokenClaimer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6787,
              "src": "229:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenClaimer_$6787",
                "typeString": "contract TokenClaimer"
              }
            },
            "id": 428,
            "nodeType": "InheritanceSpecifier",
            "src": "229:12:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 429,
              "name": "TrustListTools",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 420,
              "src": "243:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TrustListTools_$420",
                "typeString": "contract TrustListTools"
              }
            },
            "id": 430,
            "nodeType": "InheritanceSpecifier",
            "src": "243:14:4"
          }
        ],
        "contractDependencies": [
          420,
          6525,
          6787
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 657,
        "linearizedBaseContracts": [
          657,
          420,
          6525,
          6787
        ],
        "name": "TokenBank",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 432,
            "name": "token_name",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "262:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 431,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "262:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 434,
            "name": "erc20_token_addr",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "290:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 433,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "290:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 440,
            "name": "withdraw_token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "347:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "359:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "346:28:4"
            },
            "src": "326:49:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 446,
            "name": "issue_token",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "396:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "396:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 444,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 446,
                  "src": "408:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "395:28:4"
            },
            "src": "378:46:4"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 450,
            "name": "RecvETH",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 448,
                  "indexed": false,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "442:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "441:11:4"
            },
            "src": "428:25:4"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "536:67:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 459,
                      "name": "token_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "542:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 460,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 452,
                      "src": "555:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "542:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "542:17:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 463,
                      "name": "erc20_token_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "565:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 464,
                      "name": "token_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 454,
                      "src": "584:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "565:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "565:33:4"
                }
              ]
            },
            "documentation": null,
            "id": 468,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 452,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "470:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 454,
                  "name": "token_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "490:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 456,
                  "name": "_tlist",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "514:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 455,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:60:4"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "536:0:4"
            },
            "scope": 657,
            "src": "458:145:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 482,
              "nodeType": "Block",
              "src": "688:40:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 478,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 470,
                        "src": "712:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 479,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 472,
                        "src": "720:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 477,
                      "name": "_claimStdTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6786,
                      "src": "696:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$returns$__$",
                        "typeString": "function (address,address payable)"
                      }
                    },
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "696:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "696:27:4"
                }
              ]
            },
            "documentation": null,
            "id": 483,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 475,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 474,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6488,
                  "src": "679:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "679:9:4"
              }
            ],
            "name": "claimStdTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "632:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 472,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "648:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "631:36:4"
            },
            "returnParameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "688:0:4"
            },
            "scope": 657,
            "src": "608:120:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 513,
              "nodeType": "Block",
              "src": "776:189:4",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 488,
                      "name": "erc20_token_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "785:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "813:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "805:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "805:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "785:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 499,
                  "nodeType": "IfStatement",
                  "src": "782:79:4",
                  "trueBody": {
                    "id": 498,
                    "nodeType": "Block",
                    "src": "818:43:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 494,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7330,
                                "src": "841:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenBank_$657",
                                  "typeString": "contract TokenBank"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenBank_$657",
                                  "typeString": "contract TokenBank"
                                }
                              ],
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "833:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "833:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "833:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 487,
                        "id": 497,
                        "nodeType": "Return",
                        "src": "826:28:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 501,
                      "name": "erc20_token",
                      "nodeType": "VariableDeclaration",
                      "scope": 513,
                      "src": "866:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5784",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 500,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5784,
                        "src": "866:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5784",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 505,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 503,
                        "name": "erc20_token_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "894:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 502,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5784,
                      "src": "887:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5784_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "887:24:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5784",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "866:45:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 509,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7330,
                            "src": "954:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenBank_$657",
                              "typeString": "contract TokenBank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenBank_$657",
                              "typeString": "contract TokenBank"
                            }
                          ],
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "946:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "946:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 506,
                        "name": "erc20_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "924:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5784",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5729,
                      "src": "924:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 487,
                  "id": 512,
                  "nodeType": "Return",
                  "src": "917:43:4"
                }
              ]
            },
            "documentation": null,
            "id": 514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:2:4"
            },
            "returnParameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 486,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 514,
                  "src": "771:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 485,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "770:6:4"
            },
            "scope": 657,
            "src": "732:233:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 525,
              "nodeType": "Block",
              "src": "1029:48:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "erc20_token_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "1043:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 522,
                        "name": "token_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 432,
                        "src": "1061:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 523,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1042:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$",
                      "typeString": "tuple(address,string storage ref)"
                    }
                  },
                  "functionReturnParameters": 520,
                  "id": 524,
                  "nodeType": "Return",
                  "src": "1035:37:4"
                }
              ]
            },
            "documentation": null,
            "id": 526,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:2:4"
            },
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 517,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "1006:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 519,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 526,
                  "src": "1015:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:24:4"
            },
            "scope": 657,
            "src": "969:108:4",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 589,
              "nodeType": "Block",
              "src": "1183:408:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 538,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 530,
                          "src": "1197:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 539,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "1207:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1207:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1197:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820746f6b656e73",
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:19:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        },
                        "value": "not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        }
                      ],
                      "id": 537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7298,
                      "src": "1189:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "1189:49:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 545,
                      "name": "erc20_token_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "1247:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1275:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1267:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1267:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1247:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 564,
                  "nodeType": "IfStatement",
                  "src": "1244:128:4",
                  "trueBody": {
                    "id": 563,
                    "nodeType": "Block",
                    "src": "1280:92:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 553,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "1300:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 550,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 528,
                              "src": "1288:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1288:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1288:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 555,
                        "nodeType": "ExpressionStatement",
                        "src": "1288:19:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 557,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 528,
                              "src": "1335:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 558,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "1339:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 556,
                            "name": "withdraw_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 440,
                            "src": "1320:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1320:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 560,
                        "nodeType": "EmitStatement",
                        "src": "1315:31:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1361:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 536,
                        "id": 562,
                        "nodeType": "Return",
                        "src": "1354:11:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    566,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 566,
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 589,
                      "src": "1378:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 565,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1378:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 576,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "7472616e7366657228616464726573732c75696e7432353629",
                            "id": 571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1440:27:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
                              "typeString": "literal_string \"transfer(address,uint256)\""
                            },
                            "value": "transfer(address,uint256)"
                          },
                          {
                            "argumentTypes": null,
                            "id": 572,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 528,
                            "src": "1469:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 573,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "1473:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
                              "typeString": "literal_string \"transfer(address,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 569,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7281,
                            "src": "1416:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1416:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1416:64:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "erc20_token_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "1394:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1394:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1394:87:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1377:104:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 566,
                        "src": "1495:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616c6c206572633230207472616e73666572206661696c6564",
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1503:28:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57741ad6d04c0d465ef97397c28f3d744ff6986fe017f2b82cb75cb40034c047",
                          "typeString": "literal_string \"call erc20 transfer failed\""
                        },
                        "value": "call erc20 transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57741ad6d04c0d465ef97397c28f3d744ff6986fe017f2b82cb75cb40034c047",
                          "typeString": "literal_string \"call erc20 transfer failed\""
                        }
                      ],
                      "id": 577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7298,
                      "src": "1487:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:45:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 583,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 528,
                        "src": "1558:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 584,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 530,
                        "src": "1562:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 582,
                      "name": "withdraw_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 440,
                      "src": "1543:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1543:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 586,
                  "nodeType": "EmitStatement",
                  "src": "1538:31:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1582:4:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 536,
                  "id": 588,
                  "nodeType": "Return",
                  "src": "1575:11:4"
                }
              ]
            },
            "documentation": null,
            "id": 590,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 533,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 532,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6488,
                  "src": "1147:9:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1147:9:4"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 528,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "1099:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 530,
                  "name": "tokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "1119:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1119:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1098:33:4"
            },
            "returnParameters": {
              "id": 536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 535,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 590,
                  "src": "1170:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 534,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1170:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1169:14:4"
            },
            "scope": 657,
            "src": "1081:510:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "1709:433:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 604,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "1725:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 605,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "1736:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1736:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1725:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f75676820746f6b656e73",
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1747:19:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        },
                        "value": "not enough tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_73949bcdc07934e9395e82489bb22c4742e057960a2c090d38e53d68d3caf52a",
                          "typeString": "literal_string \"not enough tokens\""
                        }
                      ],
                      "id": 603,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7298,
                      "src": "1717:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1717:50:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "1717:50:4"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 611,
                      "name": "erc20_token_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 434,
                      "src": "1778:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307830",
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1806:3:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0x0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1798:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1798:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1778:32:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 630,
                  "nodeType": "IfStatement",
                  "src": "1775:137:4",
                  "trueBody": {
                    "id": 629,
                    "nodeType": "Block",
                    "src": "1811:101:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 619,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "1834:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 616,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "1821:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1821:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1821:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "1821:21:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 623,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "1869:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 624,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "1874:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 622,
                            "name": "issue_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 446,
                            "src": "1857:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1857:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 626,
                        "nodeType": "EmitStatement",
                        "src": "1852:30:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1899:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 602,
                        "id": 628,
                        "nodeType": "Return",
                        "src": "1892:11:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    632,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 632,
                      "name": "status",
                      "nodeType": "VariableDeclaration",
                      "scope": 655,
                      "src": "1920:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 631,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1920:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 642,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "7472616e7366657228616464726573732c75696e7432353629",
                            "id": 637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1982:27:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
                              "typeString": "literal_string \"transfer(address,uint256)\""
                            },
                            "value": "transfer(address,uint256)"
                          },
                          {
                            "argumentTypes": null,
                            "id": 638,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "2011:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 639,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "2016:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b",
                              "typeString": "literal_string \"transfer(address,uint256)\""
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 635,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7281,
                            "src": "1958:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1958:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1958:66:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "erc20_token_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "1936:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1936:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1936:89:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1919:106:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 644,
                        "name": "status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 632,
                        "src": "2041:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616c6c206572633230207472616e73666572206661696c6564",
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:28:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57741ad6d04c0d465ef97397c28f3d744ff6986fe017f2b82cb75cb40034c047",
                          "typeString": "literal_string \"call erc20 transfer failed\""
                        },
                        "value": "call erc20 transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57741ad6d04c0d465ef97397c28f3d744ff6986fe017f2b82cb75cb40034c047",
                          "typeString": "literal_string \"call erc20 transfer failed\""
                        }
                      ],
                      "id": 643,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7298,
                      "src": "2033:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2033:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "2033:45:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "2103:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 594,
                        "src": "2108:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 648,
                      "name": "issue_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "2091:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2091:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "EmitStatement",
                  "src": "2086:30:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2131:4:4",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 602,
                  "id": 654,
                  "nodeType": "Return",
                  "src": "2124:11:4"
                }
              ]
            },
            "documentation": null,
            "id": 656,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 597,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7294,
                      "src": "1671:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1671:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 599,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 596,
                  "name": "is_trusted",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 388,
                  "src": "1660:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1660:22:4"
              }
            ],
            "name": "issue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "1610:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 594,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "1631:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1609:35:4"
            },
            "returnParameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 601,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 656,
                  "src": "1696:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:14:4"
            },
            "scope": 657,
            "src": "1595:547:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 702,
        "src": "207:1937:4"
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          657
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 701,
        "linearizedBaseContracts": [
          701
        ],
        "name": "TokenBankFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 663,
            "name": "CreateTokenBank",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "indexed": true,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "2199:19:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 658,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 661,
                  "indexed": false,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 663,
                  "src": "2220:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2220:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2198:35:4"
            },
            "src": "2177:57:4"
          },
          {
            "body": {
              "id": 699,
              "nodeType": "Block",
              "src": "2344:174:4",
              "statements": [
                {
                  "assignments": [
                    675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 675,
                      "name": "addr",
                      "nodeType": "VariableDeclaration",
                      "scope": 699,
                      "src": "2350:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenBank_$657",
                        "typeString": "contract TokenBank"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 674,
                        "name": "TokenBank",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 657,
                        "src": "2350:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenBank_$657",
                          "typeString": "contract TokenBank"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 682,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 678,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "2381:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 679,
                        "name": "token_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "2387:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 680,
                        "name": "tlist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "2403:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2367:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$_t_contract$_TokenBank_$657_$",
                        "typeString": "function (string memory,address,address) returns (contract TokenBank)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 676,
                        "name": "TokenBank",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 657,
                        "src": "2371:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenBank_$657",
                          "typeString": "contract TokenBank"
                        }
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2367:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenBank_$657",
                      "typeString": "contract TokenBank"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2350:59:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 684,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 665,
                        "src": "2436:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 686,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 675,
                            "src": "2450:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenBank_$657",
                              "typeString": "contract TokenBank"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenBank_$657",
                              "typeString": "contract TokenBank"
                            }
                          ],
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2442:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2442:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 683,
                      "name": "CreateTokenBank",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 663,
                      "src": "2420:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2420:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 689,
                  "nodeType": "EmitStatement",
                  "src": "2415:41:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 693,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7294,
                          "src": "2485:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2485:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 690,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 675,
                        "src": "2462:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenBank_$657",
                          "typeString": "contract TokenBank"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6500,
                      "src": "2462:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2462:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 696,
                  "nodeType": "ExpressionStatement",
                  "src": "2462:34:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 697,
                    "name": "addr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 675,
                    "src": "2509:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenBank_$657",
                      "typeString": "contract TokenBank"
                    }
                  },
                  "functionReturnParameters": 673,
                  "id": 698,
                  "nodeType": "Return",
                  "src": "2502:11:4"
                }
              ]
            },
            "documentation": null,
            "id": 700,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newTokenBank",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 665,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "2260:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 667,
                  "name": "token_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "2280:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2280:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 669,
                  "name": "tlist",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "2304:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2259:59:4"
            },
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 672,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 700,
                  "src": "2334:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenBank_$657",
                    "typeString": "contract TokenBank"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 671,
                    "name": "TokenBank",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 657,
                    "src": "2334:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenBank_$657",
                      "typeString": "contract TokenBank"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2333:11:4"
            },
            "scope": 701,
            "src": "2238:280:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 702,
        "src": "2147:373:4"
      }
    ],
    "src": "0:2521:4"
  },
  "bytecode": "608060405234801561001057600080fd5b5061159a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a48b9c614610030575b600080fd5b6100ec6004803603606081101561004657600080fd5b81019060208101813564010000000081111561006157600080fd5b82018360208201111561007357600080fd5b8035906020019184600183028401116401000000008311171561009557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b0383358116945060209093013590921691506101089050565b604080516001600160a01b039092168252519081900360200190f35b60008084848460405161011a906102bb565b6001600160a01b03808416602080840191909152908316604083015260608083528551908301528451829160808301919087019080838360005b8381101561016c578181015183820152602001610154565b50505050905090810190601f1680156101995780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f0801580156101bc573d6000803e3d6000fd5b509050846040518082805190602001908083835b602083106101ef5780518252601f1990920191602091820191016101d0565b51815160209384036101000a6000190180199092169116179052604080519290940182900382206001600160a01b038816835293519395507ff1ab280d86b4c71b0590b0f5eb0db903b146049d8deb40ef694064b2c51fe20194509083900301919050a26040805163f2fde38b60e01b815233600482015290516001600160a01b0383169163f2fde38b91602480830192600092919082900301818387803b15801561029a57600080fd5b505af11580156102ae573d6000803e3d6000fd5b5092979650505050505050565b61129d806102c98339019056fe60806040523480156200001157600080fd5b506040516200129d3803806200129d833981810160405260608110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b50506020820151604092830151600080546001600160a01b031916339081178255945193965091945092918291907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508251620000e890600290602086019062000111565b5050600380546001600160a01b0319166001600160a01b039290921691909117905550620001b6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200015457805160ff191683800117855562000184565b8280016001018555821562000184579182015b828111156200018457825182559160200191906001019062000167565b506200019292915062000196565b5090565b620001b391905b808211156200019257600081556001016200019d565b90565b6110d780620001c66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063947a316811610071578063947a316814610170578063a21efbda146101ed578063a9059cbb146101f5578063b69ef8a814610221578063f2fde38b1461023b578063fc0c546a14610261576100a9565b8063128873dd146100ae57806364b576a0146100de57806373cb542f14610102578063867904b4146101285780638da5cb5b14610168575b600080fd5b6100dc600480360360408110156100c457600080fd5b506001600160a01b03813581169160200135166102fa565b005b6100e6610355565b604080516001600160a01b039092168252519081900360200190f35b6100dc6004803603602081101561011857600080fd5b50356001600160a01b0316610364565b6101546004803603604081101561013e57600080fd5b506001600160a01b038135169060200135610414565b604080519115158252519081900360200190f35b6100e661079c565b6101786107ac565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b257818101518382015260200161019a565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100e6610837565b6101546004803603604081101561020b57600080fd5b506001600160a01b038135169060200135610846565b610229610b02565b60408051918252519081900360200190f35b6100dc6004803603602081101561025157600080fd5b50356001600160a01b0316610b9b565b610269610bf4565b60405180836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102be5781810151838201526020016102a6565b50505050905090810190601f1680156102eb5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6000546001600160a01b03163314610347576040805162461bcd60e51b81526020600482018190526024820152600080516020611083833981519152604482015290519081900360640190fd5b6103518282610c9d565b5050565b6003546001600160a01b031681565b6000546001600160a01b031633146103b1576040805162461bcd60e51b81526020600482018190526024820152600080516020611083833981519152604482015290519081900360640190fd5b600180546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935281517fe19afe89fcee2a079df148700e97f00ef22536af2f5d98861ab7186c6c271070929181900390910190a15050565b60015460009033906001600160a01b0316610469576040805162461bcd60e51b815260206004820152601060248201526f074727573746c697374206973203078360841b604482015290519081900360640190fd5b60015460408051632153522560e11b81526001600160a01b038481166004830152915191909216916342a6a44a9160248083019260209291908290030181600087803b1580156104b857600080fd5b505af11580156104cc573d6000803e3d6000fd5b505050506040513d60208110156104e257600080fd5b505161052c576040805162461bcd60e51b81526020600482015260146024820152733737ba1030903a393ab9ba32b21034b9b9bab2b960611b604482015290519081900360640190fd5b610534610b02565b83111561057c576040805162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f75676820746f6b656e7360781b604482015290519081900360640190fd5b6003546001600160a01b0316610610576040516001600160a01b0385169084156108fc029085906000818181858888f193505050501580156105c2573d6000803e3d6000fd5b50604080516001600160a01b03861681526020810185905281517f63aeba1fd3b9a29ae092b880643d4df9733fca8fdfa47d04a84a720c55f63de5929181900390910190a160019150610795565b600354604080516001600160a01b038781166024830152604480830188905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17815292518251600095929092169390918291908083835b6020831061068e5780518252601f19909201916020918201910161066f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146106f0576040519150601f19603f3d011682016040523d82523d6000602084013e6106f5565b606091505b505090508061074b576040805162461bcd60e51b815260206004820152601a60248201527f63616c6c206572633230207472616e73666572206661696c6564000000000000604482015290519081900360640190fd5b604080516001600160a01b03871681526020810186905281517f63aeba1fd3b9a29ae092b880643d4df9733fca8fdfa47d04a84a720c55f63de5929181900390910190a160019250505b5092915050565b6000546001600160a01b03165b90565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561082f5780601f106108045761010080835404028352916020019161082f565b820191906000526020600020905b81548152906001019060200180831161081257829003601f168201915b505050505081565b6001546001600160a01b031681565b600080546001600160a01b03163314610894576040805162461bcd60e51b81526020600482018190526024820152600080516020611083833981519152604482015290519081900360640190fd5b61089c610b02565b8211156108e4576040805162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f75676820746f6b656e7360781b604482015290519081900360640190fd5b6003546001600160a01b0316610977576040516001600160a01b0384169083156108fc029084906000818181858888f1935050505015801561092a573d6000803e3d6000fd5b50604080516001600160a01b03851681526020810184905281517fea9329542b4fe92037acc8279a8e1f2aa830d522f7f6362175193b816f15e4ff929181900390910190a1506001610afc565b600354604080516001600160a01b038681166024830152604480830187905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17815292518251600095929092169390918291908083835b602083106109f55780518252601f1990920191602091820191016109d6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610a57576040519150601f19603f3d011682016040523d82523d6000602084013e610a5c565b606091505b5050905080610ab2576040805162461bcd60e51b815260206004820152601a60248201527f63616c6c206572633230207472616e73666572206661696c6564000000000000604482015290519081900360640190fd5b604080516001600160a01b03861681526020810185905281517fea9329542b4fe92037acc8279a8e1f2aa830d522f7f6362175193b816f15e4ff929181900390910190a160019150505b92915050565b6003546000906001600160a01b0316610b1d575030316107a9565b600354604080516370a0823160e01b815230600482015290516001600160a01b039092169182916370a08231916024808301926020929190829003018186803b158015610b6957600080fd5b505afa158015610b7d573d6000803e3d6000fd5b505050506040513d6020811015610b9357600080fd5b505191505090565b6000546001600160a01b03163314610be8576040805162461bcd60e51b81526020600482018190526024820152600080516020611083833981519152604482015290519081900360640190fd5b610bf181610fbc565b50565b6003546002805460408051602061010060018516150260001901909316849004601f81018490048402820184019092528181526000946060946001600160a01b039091169390928391830182828015610c8e5780601f10610c6357610100808354040283529160200191610c8e565b820191906000526020600020905b815481529060010190602001808311610c7157829003601f168201915b50505050509050915091509091565b6001600160a01b038216610d58576040516000906001600160a01b038316903031908381818185875af1925050503d8060008114610cf7576040519150601f19603f3d011682016040523d82523d6000602084013e610cfc565b606091505b5050905080610d52576040805162461bcd60e51b815260206004820152601d60248201527f546f6b656e42616e6b207472616e7366657220657468206661696c6564000000604482015290519081900360640190fd5b50610351565b604080516370a0823160e01b8152306004820152905183916000916001600160a01b038416916370a0823191602480830192602092919082900301818787803b158015610da457600080fd5b505af1158015610db8573d6000803e3d6000fd5b505050506040513d6020811015610dce57600080fd5b5051604080516001600160a01b038681166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17815292518251949550600094606094928a16939282918083835b60208310610e4e5780518252601f199092019160209182019101610e2f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610eb0576040519150601f19603f3d011682016040523d82523d6000602084013e610eb5565b606091505b509150915081610efa576040805162461bcd60e51b815260206004820152600b60248201526a18d85b1b0819985a5b195960aa1b604482015290519081900360640190fd5b805115610f6957808060200190516020811015610f1657600080fd5b5051610f69576040805162461bcd60e51b815260206004820152601f60248201527f4552433230206f7065726174696f6e20646964206e6f74207375636365656400604482015290519081900360640190fd5b846001600160a01b0316866001600160a01b03167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c856040518082815260200191505060405180910390a3505050505050565b6001600160a01b0381166110015760405162461bcd60e51b815260040180806020018281038252602681526020018061105d6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a72305820c7f1db93381768bfe74ef25dd24ed57c77f336ac6e97ef86cf0422917533b38c64736f6c634300050a0032a265627a7a7230582068c9bdf42f661c841812db649e390714c54ae6d625de0d8293411c5fc1a04da464736f6c634300050a0032",
  "bytecodeSha1": "defebf62a9a03e85700458bc7c2c23b344b4a260",
  "compiler": {
    "evm_version": "petersburg",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.10+commit.5a6ea5b1"
  },
  "contractName": "TokenBankFactory",
  "coverageMap": {
    "branches": {
      "16": {},
      "21": {},
      "24": {},
      "3": {},
      "4": {}
    },
    "statements": {
      "16": {},
      "21": {},
      "24": {},
      "3": {},
      "4": {
        "TokenBankFactory.newTokenBank": {
          "0": [
            2415,
            2456
          ],
          "1": [
            2462,
            2496
          ],
          "2": [
            2502,
            2513
          ]
        }
      }
    }
  },
  "dependencies": [
    "IERC20",
    "Ownable",
    "TokenBank",
    "TokenClaimer",
    "TransferableToken",
    "TrustListInterface",
    "TrustListTools"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a48b9c614610030575b600080fd5b6100ec6004803603606081101561004657600080fd5b81019060208101813564010000000081111561006157600080fd5b82018360208201111561007357600080fd5b8035906020019184600183028401116401000000008311171561009557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550506001600160a01b0383358116945060209093013590921691506101089050565b604080516001600160a01b039092168252519081900360200190f35b60008084848460405161011a906102bb565b6001600160a01b03808416602080840191909152908316604083015260608083528551908301528451829160808301919087019080838360005b8381101561016c578181015183820152602001610154565b50505050905090810190601f1680156101995780820380516001836020036101000a031916815260200191505b50945050505050604051809103906000f0801580156101bc573d6000803e3d6000fd5b509050846040518082805190602001908083835b602083106101ef5780518252601f1990920191602091820191016101d0565b51815160209384036101000a6000190180199092169116179052604080519290940182900382206001600160a01b038816835293519395507ff1ab280d86b4c71b0590b0f5eb0db903b146049d8deb40ef694064b2c51fe20194509083900301919050a26040805163f2fde38b60e01b815233600482015290516001600160a01b0383169163f2fde38b91602480830192600092919082900301818387803b15801561029a57600080fd5b505af11580156102ae573d6000803e3d6000fd5b5092979650505050505050565b61129d806102c98339019056fe60806040523480156200001157600080fd5b506040516200129d3803806200129d833981810160405260608110156200003757600080fd5b8101908080516401000000008111156200005057600080fd5b820160208101848111156200006457600080fd5b81516401000000008111828201871017156200007f57600080fd5b50506020820151604092830151600080546001600160a01b031916339081178255945193965091945092918291907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508251620000e890600290602086019062000111565b5050600380546001600160a01b0319166001600160a01b039290921691909117905550620001b6565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200015457805160ff191683800117855562000184565b8280016001018555821562000184579182015b828111156200018457825182559160200191906001019062000167565b506200019292915062000196565b5090565b620001b391905b808211156200019257600081556001016200019d565b90565b6110d780620001c66000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063947a316811610071578063947a316814610170578063a21efbda146101ed578063a9059cbb146101f5578063b69ef8a814610221578063f2fde38b1461023b578063fc0c546a14610261576100a9565b8063128873dd146100ae57806364b576a0146100de57806373cb542f14610102578063867904b4146101285780638da5cb5b14610168575b600080fd5b6100dc600480360360408110156100c457600080fd5b506001600160a01b03813581169160200135166102fa565b005b6100e6610355565b604080516001600160a01b039092168252519081900360200190f35b6100dc6004803603602081101561011857600080fd5b50356001600160a01b0316610364565b6101546004803603604081101561013e57600080fd5b506001600160a01b038135169060200135610414565b604080519115158252519081900360200190f35b6100e661079c565b6101786107ac565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b257818101518382015260200161019a565b50505050905090810190601f1680156101df5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100e6610837565b6101546004803603604081101561020b57600080fd5b506001600160a01b038135169060200135610846565b610229610b02565b60408051918252519081900360200190f35b6100dc6004803603602081101561025157600080fd5b50356001600160a01b0316610b9b565b610269610bf4565b60405180836001600160a01b03166001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102be5781810151838201526020016102a6565b50505050905090810190601f1680156102eb5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6000546001600160a01b03163314610347576040805162461bcd60e51b81526020600482018190526024820152600080516020611083833981519152604482015290519081900360640190fd5b6103518282610c9d565b5050565b6003546001600160a01b031681565b6000546001600160a01b031633146103b1576040805162461bcd60e51b81526020600482018190526024820152600080516020611083833981519152604482015290519081900360640190fd5b600180546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935281517fe19afe89fcee2a079df148700e97f00ef22536af2f5d98861ab7186c6c271070929181900390910190a15050565b60015460009033906001600160a01b0316610469576040805162461bcd60e51b815260206004820152601060248201526f074727573746c697374206973203078360841b604482015290519081900360640190fd5b60015460408051632153522560e11b81526001600160a01b038481166004830152915191909216916342a6a44a9160248083019260209291908290030181600087803b1580156104b857600080fd5b505af11580156104cc573d6000803e3d6000fd5b505050506040513d60208110156104e257600080fd5b505161052c576040805162461bcd60e51b81526020600482015260146024820152733737ba1030903a393ab9ba32b21034b9b9bab2b960611b604482015290519081900360640190fd5b610534610b02565b83111561057c576040805162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f75676820746f6b656e7360781b604482015290519081900360640190fd5b6003546001600160a01b0316610610576040516001600160a01b0385169084156108fc029085906000818181858888f193505050501580156105c2573d6000803e3d6000fd5b50604080516001600160a01b03861681526020810185905281517f63aeba1fd3b9a29ae092b880643d4df9733fca8fdfa47d04a84a720c55f63de5929181900390910190a160019150610795565b600354604080516001600160a01b038781166024830152604480830188905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17815292518251600095929092169390918291908083835b6020831061068e5780518252601f19909201916020918201910161066f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146106f0576040519150601f19603f3d011682016040523d82523d6000602084013e6106f5565b606091505b505090508061074b576040805162461bcd60e51b815260206004820152601a60248201527f63616c6c206572633230207472616e73666572206661696c6564000000000000604482015290519081900360640190fd5b604080516001600160a01b03871681526020810186905281517f63aeba1fd3b9a29ae092b880643d4df9733fca8fdfa47d04a84a720c55f63de5929181900390910190a160019250505b5092915050565b6000546001600160a01b03165b90565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561082f5780601f106108045761010080835404028352916020019161082f565b820191906000526020600020905b81548152906001019060200180831161081257829003601f168201915b505050505081565b6001546001600160a01b031681565b600080546001600160a01b03163314610894576040805162461bcd60e51b81526020600482018190526024820152600080516020611083833981519152604482015290519081900360640190fd5b61089c610b02565b8211156108e4576040805162461bcd60e51b81526020600482015260116024820152706e6f7420656e6f75676820746f6b656e7360781b604482015290519081900360640190fd5b6003546001600160a01b0316610977576040516001600160a01b0384169083156108fc029084906000818181858888f1935050505015801561092a573d6000803e3d6000fd5b50604080516001600160a01b03851681526020810184905281517fea9329542b4fe92037acc8279a8e1f2aa830d522f7f6362175193b816f15e4ff929181900390910190a1506001610afc565b600354604080516001600160a01b038681166024830152604480830187905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17815292518251600095929092169390918291908083835b602083106109f55780518252601f1990920191602091820191016109d6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610a57576040519150601f19603f3d011682016040523d82523d6000602084013e610a5c565b606091505b5050905080610ab2576040805162461bcd60e51b815260206004820152601a60248201527f63616c6c206572633230207472616e73666572206661696c6564000000000000604482015290519081900360640190fd5b604080516001600160a01b03861681526020810185905281517fea9329542b4fe92037acc8279a8e1f2aa830d522f7f6362175193b816f15e4ff929181900390910190a160019150505b92915050565b6003546000906001600160a01b0316610b1d575030316107a9565b600354604080516370a0823160e01b815230600482015290516001600160a01b039092169182916370a08231916024808301926020929190829003018186803b158015610b6957600080fd5b505afa158015610b7d573d6000803e3d6000fd5b505050506040513d6020811015610b9357600080fd5b505191505090565b6000546001600160a01b03163314610be8576040805162461bcd60e51b81526020600482018190526024820152600080516020611083833981519152604482015290519081900360640190fd5b610bf181610fbc565b50565b6003546002805460408051602061010060018516150260001901909316849004601f81018490048402820184019092528181526000946060946001600160a01b039091169390928391830182828015610c8e5780601f10610c6357610100808354040283529160200191610c8e565b820191906000526020600020905b815481529060010190602001808311610c7157829003601f168201915b50505050509050915091509091565b6001600160a01b038216610d58576040516000906001600160a01b038316903031908381818185875af1925050503d8060008114610cf7576040519150601f19603f3d011682016040523d82523d6000602084013e610cfc565b606091505b5050905080610d52576040805162461bcd60e51b815260206004820152601d60248201527f546f6b656e42616e6b207472616e7366657220657468206661696c6564000000604482015290519081900360640190fd5b50610351565b604080516370a0823160e01b8152306004820152905183916000916001600160a01b038416916370a0823191602480830192602092919082900301818787803b158015610da457600080fd5b505af1158015610db8573d6000803e3d6000fd5b505050506040513d6020811015610dce57600080fd5b5051604080516001600160a01b038681166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17815292518251949550600094606094928a16939282918083835b60208310610e4e5780518252601f199092019160209182019101610e2f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610eb0576040519150601f19603f3d011682016040523d82523d6000602084013e610eb5565b606091505b509150915081610efa576040805162461bcd60e51b815260206004820152600b60248201526a18d85b1b0819985a5b195960aa1b604482015290519081900360640190fd5b805115610f6957808060200190516020811015610f1657600080fd5b5051610f69576040805162461bcd60e51b815260206004820152601f60248201527f4552433230206f7065726174696f6e20646964206e6f74207375636365656400604482015290519081900360640190fd5b846001600160a01b0316866001600160a01b03167ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c856040518082815260200191505060405180910390a3505050505050565b6001600160a01b0381166110015760405162461bcd60e51b815260040180806020018281038252602681526020018061105d6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a72305820c7f1db93381768bfe74ef25dd24ed57c77f336ac6e97ef86cf0422917533b38c64736f6c634300050a0032a265627a7a7230582068c9bdf42f661c841812db649e390714c54ae6d625de0d8293411c5fc1a04da464736f6c634300050a0032",
  "deployedSourceMap": "2147:373:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2147:373:4;;;;;;;;;;;;;;;;;;;2238:280;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2238:280:4;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2238:280:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2238:280:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2238:280:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2238:280:4;;-1:-1:-1;;;;;;;2238:280:4;;;;;-1:-1:-1;2238:280:4;;;;;;;;;-1:-1:-1;2238:280:4;;-1:-1:-1;2238:280:4:i;:::-;;;;-1:-1:-1;;;;;2238:280:4;;;;;;;;;;;;;;;2334:9;2350:14;2381:4;2387:14;2403:5;2367:42;;;;;:::i;:::-;-1:-1:-1;;;;;2367:42:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2367:42:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2367:42:4;2350:59;;2436:4;2420:36;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;2420:36:4;;;;;;;;;;;;-1:-1:-1;;;;;2420:36:4;;;;;;;;-1:-1:-1;2420:36:4;;-1:-1:-1;2420:36:4;;;;;;;-1:-1:-1;2420:36:4;2462:34;;;-1:-1:-1;;;2462:34:4;;2485:10;2462:34;;;;;;-1:-1:-1;;;;;2462:22:4;;;;;:34;;;;;-1:-1:-1;;2462:34:4;;;;;;;-1:-1:-1;2462:22:4;:34;;;5:2:-1;;;;30:1;27;20:12;5:2;2462:34:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;2509:4:4;;2238:280;-1:-1:-1;;;;;;;2238:280:4:o;2147:373::-;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    2147,
    2520
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2A48B9C6 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 CALLDATALOAD DUP2 AND SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 POP PUSH2 0x108 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11A SWAP1 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 DUP4 AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP4 MSTORE DUP6 MLOAD SWAP1 DUP4 ADD MSTORE DUP5 MLOAD DUP3 SWAP2 PUSH1 0x80 DUP4 ADD SWAP2 SWAP1 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x154 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x199 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1EF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1D0 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 SWAP5 ADD DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP4 MSTORE SWAP4 MLOAD SWAP4 SWAP6 POP PUSH32 0xF1AB280D86B4C71B0590B0F5EB0DB903B146049D8DEB40EF694064B2C51FE201 SWAP5 POP SWAP1 DUP4 SWAP1 SUB ADD SWAP2 SWAP1 POP LOG2 PUSH1 0x40 DUP1 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0xF2FDE38B SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x129D DUP1 PUSH2 0x2C9 DUP4 CODECOPY ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x129D CODESIZE SUB DUP1 PUSH3 0x129D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH3 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x20 DUP2 ADD DUP5 DUP2 GT ISZERO PUSH3 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP8 LT OR ISZERO PUSH3 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 SWAP3 DUP4 ADD MLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE SWAP5 MLOAD SWAP4 SWAP7 POP SWAP2 SWAP5 POP SWAP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP DUP3 MLOAD PUSH3 0xE8 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x111 JUMP JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x1B6 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x154 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x184 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x184 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x184 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x167 JUMP JUMPDEST POP PUSH3 0x192 SWAP3 SWAP2 POP PUSH3 0x196 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x1B3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x192 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x19D JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x10D7 DUP1 PUSH3 0x1C6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x947A3168 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x947A3168 EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0xA21EFBDA EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x261 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x128873DD EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x64B576A0 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x73CB542F EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x867904B4 EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x168 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x2FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE6 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x364 JUMP JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x79C JUMP JUMPDEST PUSH2 0x178 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x19A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1DF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH2 0x837 JUMP JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x846 JUMP JUMPDEST PUSH2 0x229 PUSH2 0xB02 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x269 PUSH2 0xBF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2EB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x347 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1083 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x351 DUP3 DUP3 PUSH2 0xC9D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1083 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP2 MLOAD PUSH32 0xE19AFE89FCEE2A079DF148700E97F00EF22536AF2F5D98861AB7186C6C271070 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x469 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x74727573746C6973742069732030783 PUSH1 0x84 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x21535225 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x42A6A44A SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4CC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x52C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x3737BA1030903A393AB9BA32B21034B9B9BAB2B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x534 PUSH2 0xB02 JUMP JUMPDEST DUP4 GT ISZERO PUSH2 0x57C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x6E6F7420656E6F75676820746F6B656E73 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x610 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x63AEBA1FD3B9A29AE092B880643D4DF9733FCA8FDFA47D04A84A720C55F63DE5 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x1 SWAP2 POP PUSH2 0x795 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP9 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP6 SWAP3 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x68E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x66F JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x74B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206572633230207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE DUP2 MLOAD PUSH32 0x63AEBA1FD3B9A29AE092B880643D4DF9733FCA8FDFA47D04A84A720C55F63DE5 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x1 SWAP3 POP POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND DUP5 SWAP1 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x82F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x804 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x82F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x812 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x894 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1083 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x89C PUSH2 0xB02 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x8E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x6E6F7420656E6F75676820746F6B656E73 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x977 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x92A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE DUP2 MLOAD PUSH32 0xEA9329542B4FE92037ACC8279A8E1F2AA830D522F7F6362175193B816F15E4FF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP PUSH1 0x1 PUSH2 0xAFC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP8 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD PUSH1 0x0 SWAP6 SWAP3 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x9F5 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x9D6 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA5C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xAB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C206572633230207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 MLOAD PUSH32 0xEA9329542B4FE92037ACC8279A8E1F2AA830D522F7F6362175193B816F15E4FF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB1D JUMPI POP ADDRESS BALANCE PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB7D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1083 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xBF1 DUP2 PUSH2 0xFBC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH2 0x100 PUSH1 0x1 DUP6 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND DUP5 SWAP1 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 SWAP1 SWAP3 DUP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC8E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC63 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC8E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC71 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD58 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 ADDRESS BALANCE SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xCF7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xD52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E42616E6B207472616E7366657220657468206661696C6564000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR DUP2 MSTORE SWAP3 MLOAD DUP3 MLOAD SWAP5 SWAP6 POP PUSH1 0x0 SWAP5 PUSH1 0x60 SWAP5 SWAP3 DUP11 AND SWAP4 SWAP3 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xE4E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEB0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEB5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0xEFA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x18D85B1B0819985A5B1959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xF69 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xF69 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433230206F7065726174696F6E20646964206E6F74207375636365656400 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xF931EDB47C50B4B4104C187B5814A9AEF5F709E17E2ECF9617E860CACADE929C DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x105D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E6572A265627A7A72305820C7F1DB SWAP4 CODESIZE OR PUSH9 0xBFE74EF25DD24ED57C PUSH24 0xF336AC6E97EF86CF0422917533B38C64736F6C634300050A STOP ORIGIN LOG2 PUSH6 0x627A7A723058 KECCAK256 PUSH9 0xC9BDF42F661C841812 0xdb PUSH5 0x9E390714C5 0x4a 0xe6 0xd6 0x25 0xde 0xd DUP3 SWAP4 COINBASE SHR 0x5f 0xc1 LOG0 0x4d LOG4 PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        2147,
        2520
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2A48B9C6"
    },
    "38": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "EQ",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "DUP1",
      "path": "4"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2147,
        2520
      ],
      "op": "REVERT",
      "path": "4"
    },
    "48": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "49": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC"
    },
    "52": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "54": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "56": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SUB",
      "path": "4"
    },
    "57": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "59": {
      "op": "DUP2"
    },
    "60": {
      "op": "LT"
    },
    "61": {
      "op": "ISZERO"
    },
    "62": {
      "op": "PUSH2",
      "value": "0x46"
    },
    "65": {
      "op": "JUMPI"
    },
    "66": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "68": {
      "op": "DUP1"
    },
    "69": {
      "op": "REVERT"
    },
    "70": {
      "op": "JUMPDEST"
    },
    "71": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "72": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "73": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "74": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "76": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "77": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "78": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "79": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "80": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "86": {
      "op": "DUP2"
    },
    "87": {
      "op": "GT"
    },
    "88": {
      "op": "ISZERO"
    },
    "89": {
      "op": "PUSH2",
      "value": "0x61"
    },
    "92": {
      "op": "JUMPI"
    },
    "93": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "95": {
      "op": "DUP1"
    },
    "96": {
      "op": "REVERT"
    },
    "97": {
      "op": "JUMPDEST"
    },
    "98": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP3",
      "path": "4"
    },
    "99": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "100": {
      "op": "DUP4"
    },
    "101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "103": {
      "op": "DUP3"
    },
    "104": {
      "op": "ADD"
    },
    "105": {
      "op": "GT"
    },
    "106": {
      "op": "ISZERO"
    },
    "107": {
      "op": "PUSH2",
      "value": "0x73"
    },
    "110": {
      "op": "JUMPI"
    },
    "111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "113": {
      "op": "DUP1"
    },
    "114": {
      "op": "REVERT"
    },
    "115": {
      "op": "JUMPDEST"
    },
    "116": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP1",
      "path": "4"
    },
    "117": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "118": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "119": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "121": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "122": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "123": {
      "op": "DUP5"
    },
    "124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "126": {
      "op": "DUP4"
    },
    "127": {
      "op": "MUL"
    },
    "128": {
      "op": "DUP5"
    },
    "129": {
      "op": "ADD"
    },
    "130": {
      "op": "GT"
    },
    "131": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "137": {
      "op": "DUP4"
    },
    "138": {
      "op": "GT"
    },
    "139": {
      "op": "OR"
    },
    "140": {
      "op": "ISZERO"
    },
    "141": {
      "op": "PUSH2",
      "value": "0x95"
    },
    "144": {
      "op": "JUMPI"
    },
    "145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "147": {
      "op": "DUP1"
    },
    "148": {
      "op": "REVERT"
    },
    "149": {
      "op": "JUMPDEST"
    },
    "150": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "151": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "152": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP1",
      "path": "4"
    },
    "153": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP1",
      "path": "4"
    },
    "154": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "156": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "157": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "159": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP1",
      "path": "4"
    },
    "160": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "161": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DIV",
      "path": "4"
    },
    "162": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "MUL",
      "path": "4"
    },
    "163": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "165": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "166": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "168": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "169": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "170": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "171": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "172": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "174": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "175": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP1",
      "path": "4"
    },
    "176": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "177": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "178": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "179": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "180": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "181": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "182": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "183": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "185": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "186": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP4",
      "path": "4"
    },
    "187": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP4",
      "path": "4"
    },
    "188": {
      "op": "DUP1"
    },
    "189": {
      "op": "DUP3"
    },
    "190": {
      "op": "DUP5"
    },
    "191": {
      "op": "CALLDATACOPY"
    },
    "192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "194": {
      "op": "SWAP3"
    },
    "195": {
      "op": "ADD"
    },
    "196": {
      "op": "SWAP2"
    },
    "197": {
      "op": "SWAP1"
    },
    "198": {
      "op": "SWAP2"
    },
    "199": {
      "op": "MSTORE"
    },
    "200": {
      "op": "POP"
    },
    "201": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "202": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "203": {
      "op": "POP"
    },
    "204": {
      "op": "POP"
    },
    "205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "211": {
      "op": "SHL"
    },
    "212": {
      "op": "SUB"
    },
    "213": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP4",
      "path": "4"
    },
    "214": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "215": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "216": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "AND",
      "path": "4"
    },
    "217": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "218": {
      "op": "POP"
    },
    "219": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "221": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "222": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "223": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "224": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "225": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "226": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "227": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "AND",
      "path": "4"
    },
    "228": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "229": {
      "op": "POP"
    },
    "230": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x108"
    },
    "233": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "234": {
      "op": "POP"
    },
    "235": {
      "fn": "TokenBankFactory.newTokenBank",
      "jump": "i",
      "offset": [
        2238,
        2518
      ],
      "op": "JUMP",
      "path": "4"
    },
    "236": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "237": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "239": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP1",
      "path": "4"
    },
    "240": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "op": "SUB"
    },
    "249": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "250": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "251": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "AND",
      "path": "4"
    },
    "252": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP3",
      "path": "4"
    },
    "253": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "254": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "255": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "256": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "DUP2",
      "path": "4"
    },
    "257": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "258": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SUB",
      "path": "4"
    },
    "259": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "261": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "ADD",
      "path": "4"
    },
    "262": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "263": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "RETURN",
      "path": "4"
    },
    "264": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "265": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2334,
        2343
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "267": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2350,
        2364
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2381,
        2385
      ],
      "op": "DUP5",
      "path": "4"
    },
    "269": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2387,
        2401
      ],
      "op": "DUP5",
      "path": "4"
    },
    "270": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2403,
        2408
      ],
      "op": "DUP5",
      "path": "4"
    },
    "271": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "273": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "274": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11A"
    },
    "277": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "278": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BB"
    },
    "281": {
      "fn": "TokenBankFactory.newTokenBank",
      "jump": "i",
      "offset": [
        2367,
        2409
      ],
      "op": "JUMP",
      "path": "4"
    },
    "282": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "289": {
      "op": "SHL"
    },
    "290": {
      "op": "SUB"
    },
    "291": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP1",
      "path": "4"
    },
    "292": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP5",
      "path": "4"
    },
    "293": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "AND",
      "path": "4"
    },
    "294": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "296": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP1",
      "path": "4"
    },
    "297": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP5",
      "path": "4"
    },
    "298": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "ADD",
      "path": "4"
    },
    "299": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "300": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "301": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "302": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "303": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "304": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP4",
      "path": "4"
    },
    "305": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "AND",
      "path": "4"
    },
    "306": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "308": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP4",
      "path": "4"
    },
    "309": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "ADD",
      "path": "4"
    },
    "310": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "311": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "313": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP1",
      "path": "4"
    },
    "314": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP4",
      "path": "4"
    },
    "315": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "316": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP6",
      "path": "4"
    },
    "317": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "318": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "319": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP4",
      "path": "4"
    },
    "320": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "ADD",
      "path": "4"
    },
    "321": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "322": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP5",
      "path": "4"
    },
    "323": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "324": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP3",
      "path": "4"
    },
    "325": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "326": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "328": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP4",
      "path": "4"
    },
    "329": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "ADD",
      "path": "4"
    },
    "330": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "331": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "332": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP8",
      "path": "4"
    },
    "333": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "ADD",
      "path": "4"
    },
    "334": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "335": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP1",
      "path": "4"
    },
    "336": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP4",
      "path": "4"
    },
    "337": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP4",
      "path": "4"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "340": {
      "op": "JUMPDEST"
    },
    "341": {
      "op": "DUP4"
    },
    "342": {
      "op": "DUP2"
    },
    "343": {
      "op": "LT"
    },
    "344": {
      "op": "ISZERO"
    },
    "345": {
      "op": "PUSH2",
      "value": "0x16C"
    },
    "348": {
      "op": "JUMPI"
    },
    "349": {
      "op": "DUP2"
    },
    "350": {
      "op": "DUP2"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "op": "MLOAD"
    },
    "353": {
      "op": "DUP4"
    },
    "354": {
      "op": "DUP3"
    },
    "355": {
      "op": "ADD"
    },
    "356": {
      "op": "MSTORE"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "359": {
      "op": "ADD"
    },
    "360": {
      "op": "PUSH2",
      "value": "0x154"
    },
    "363": {
      "op": "JUMP"
    },
    "364": {
      "op": "JUMPDEST"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "367": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "368": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "369": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "370": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "371": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "372": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP2",
      "path": "4"
    },
    "373": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "ADD",
      "path": "4"
    },
    "374": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "375": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "377": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "AND",
      "path": "4"
    },
    "378": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP1",
      "path": "4"
    },
    "379": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "380": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x199"
    },
    "383": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "384": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP1",
      "path": "4"
    },
    "385": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP3",
      "path": "4"
    },
    "386": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SUB",
      "path": "4"
    },
    "387": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP1",
      "path": "4"
    },
    "388": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "389": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "391": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP4",
      "path": "4"
    },
    "392": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "394": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SUB",
      "path": "4"
    },
    "395": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "398": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "EXP",
      "path": "4"
    },
    "399": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SUB",
      "path": "4"
    },
    "400": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "NOT",
      "path": "4"
    },
    "401": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "AND",
      "path": "4"
    },
    "402": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP2",
      "path": "4"
    },
    "403": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "404": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "406": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "ADD",
      "path": "4"
    },
    "407": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "408": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "409": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "410": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "411": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "412": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "413": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "414": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "415": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "416": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "417": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "419": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "420": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP1",
      "path": "4"
    },
    "421": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "422": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SUB",
      "path": "4"
    },
    "423": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "424": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "426": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "CREATE",
      "path": "4"
    },
    "427": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "DUP1",
      "path": "4"
    },
    "428": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "429": {
      "op": "DUP1"
    },
    "430": {
      "op": "ISZERO"
    },
    "431": {
      "op": "PUSH2",
      "value": "0x1BC"
    },
    "434": {
      "op": "JUMPI"
    },
    "435": {
      "op": "RETURNDATASIZE"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "438": {
      "op": "DUP1"
    },
    "439": {
      "op": "RETURNDATACOPY"
    },
    "440": {
      "op": "RETURNDATASIZE"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "443": {
      "op": "REVERT"
    },
    "444": {
      "op": "JUMPDEST"
    },
    "445": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2367,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "446": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2350,
        2409
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "447": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2350,
        2409
      ],
      "op": "POP",
      "path": "4"
    },
    "448": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2436,
        2440
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 0
    },
    "449": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "451": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "452": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP1",
      "path": "4"
    },
    "453": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP3",
      "path": "4"
    },
    "454": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP1",
      "path": "4"
    },
    "455": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "456": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "457": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "459": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "ADD",
      "path": "4"
    },
    "460": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "461": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP1",
      "path": "4"
    },
    "462": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP4",
      "path": "4"
    },
    "463": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP4",
      "path": "4"
    },
    "464": {
      "op": "JUMPDEST"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "467": {
      "op": "DUP4"
    },
    "468": {
      "op": "LT"
    },
    "469": {
      "op": "PUSH2",
      "value": "0x1EF"
    },
    "472": {
      "op": "JUMPI"
    },
    "473": {
      "op": "DUP1"
    },
    "474": {
      "op": "MLOAD"
    },
    "475": {
      "op": "DUP3"
    },
    "476": {
      "op": "MSTORE"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "479": {
      "op": "NOT"
    },
    "480": {
      "op": "SWAP1"
    },
    "481": {
      "op": "SWAP3"
    },
    "482": {
      "op": "ADD"
    },
    "483": {
      "op": "SWAP2"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "486": {
      "op": "SWAP2"
    },
    "487": {
      "op": "DUP3"
    },
    "488": {
      "op": "ADD"
    },
    "489": {
      "op": "SWAP2"
    },
    "490": {
      "op": "ADD"
    },
    "491": {
      "op": "PUSH2",
      "value": "0x1D0"
    },
    "494": {
      "op": "JUMP"
    },
    "495": {
      "op": "JUMPDEST"
    },
    "496": {
      "op": "MLOAD"
    },
    "497": {
      "op": "DUP2"
    },
    "498": {
      "op": "MLOAD"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "501": {
      "op": "SWAP4"
    },
    "502": {
      "op": "DUP5"
    },
    "503": {
      "op": "SUB"
    },
    "504": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "507": {
      "op": "EXP"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "510": {
      "op": "NOT"
    },
    "511": {
      "op": "ADD"
    },
    "512": {
      "op": "DUP1"
    },
    "513": {
      "op": "NOT"
    },
    "514": {
      "op": "SWAP1"
    },
    "515": {
      "op": "SWAP3"
    },
    "516": {
      "op": "AND"
    },
    "517": {
      "op": "SWAP2"
    },
    "518": {
      "op": "AND"
    },
    "519": {
      "op": "OR"
    },
    "520": {
      "op": "SWAP1"
    },
    "521": {
      "op": "MSTORE"
    },
    "522": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "524": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP1",
      "path": "4"
    },
    "525": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "526": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "527": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "528": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "529": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "ADD",
      "path": "4"
    },
    "530": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP3",
      "path": "4"
    },
    "531": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "532": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SUB",
      "path": "4"
    },
    "533": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP3",
      "path": "4"
    },
    "534": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "541": {
      "op": "SHL"
    },
    "542": {
      "op": "SUB"
    },
    "543": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP9",
      "path": "4"
    },
    "544": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "AND",
      "path": "4"
    },
    "545": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP4",
      "path": "4"
    },
    "546": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "547": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "548": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "549": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "550": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "551": {
      "op": "POP"
    },
    "552": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF1AB280D86B4C71B0590B0F5EB0DB903B146049D8DEB40EF694064B2C51FE201"
    },
    "585": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "588": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "DUP4",
      "path": "4"
    },
    "589": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "590": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SUB",
      "path": "4"
    },
    "591": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "ADD",
      "path": "4"
    },
    "592": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "593": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "594": {
      "op": "POP"
    },
    "595": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2420,
        2456
      ],
      "op": "LOG2",
      "path": "4"
    },
    "596": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x40"
    },
    "598": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "DUP1",
      "path": "4"
    },
    "599": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "600": {
      "op": "PUSH4",
      "value": "0xF2FDE38B"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "DUP2",
      "path": "4"
    },
    "609": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "610": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2485,
        2495
      ],
      "op": "CALLER",
      "path": "4"
    },
    "611": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "613": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "614": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "ADD",
      "path": "4"
    },
    "615": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "616": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "617": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2484
      ],
      "op": "DUP4",
      "path": "4"
    },
    "627": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2484
      ],
      "op": "AND",
      "path": "4"
    },
    "628": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2484
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "629": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2484
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "634": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2484
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "635": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "637": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "DUP1",
      "path": "4"
    },
    "638": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "DUP4",
      "path": "4"
    },
    "639": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "ADD",
      "path": "4"
    },
    "640": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "643": {
      "op": "SWAP3"
    },
    "644": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "645": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "646": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "DUP3",
      "path": "4"
    },
    "647": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "648": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "SUB",
      "path": "4"
    },
    "649": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "ADD",
      "path": "4"
    },
    "650": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "DUP2",
      "path": "4"
    },
    "651": {
      "op": "DUP4"
    },
    "652": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2484
      ],
      "op": "DUP8",
      "path": "4"
    },
    "653": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "DUP1",
      "path": "4"
    },
    "654": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "655": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "656": {
      "op": "DUP1"
    },
    "657": {
      "op": "ISZERO"
    },
    "658": {
      "op": "PUSH2",
      "value": "0x29A"
    },
    "661": {
      "op": "JUMPI"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "664": {
      "op": "DUP1"
    },
    "665": {
      "op": "REVERT"
    },
    "666": {
      "op": "JUMPDEST"
    },
    "667": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "POP",
      "path": "4"
    },
    "668": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "GAS",
      "path": "4"
    },
    "669": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "CALL",
      "path": "4"
    },
    "670": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2462,
        2496
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "671": {
      "op": "DUP1"
    },
    "672": {
      "op": "ISZERO"
    },
    "673": {
      "op": "PUSH2",
      "value": "0x2AE"
    },
    "676": {
      "op": "JUMPI"
    },
    "677": {
      "op": "RETURNDATASIZE"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "680": {
      "op": "DUP1"
    },
    "681": {
      "op": "RETURNDATACOPY"
    },
    "682": {
      "op": "RETURNDATASIZE"
    },
    "683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "685": {
      "op": "REVERT"
    },
    "686": {
      "op": "JUMPDEST"
    },
    "687": {
      "op": "POP"
    },
    "688": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2509,
        2513
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 2
    },
    "689": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2509,
        2513
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "690": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2238,
        2518
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "691": {
      "op": "POP"
    },
    "692": {
      "op": "POP"
    },
    "693": {
      "op": "POP"
    },
    "694": {
      "op": "POP"
    },
    "695": {
      "op": "POP"
    },
    "696": {
      "op": "POP"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "TokenBankFactory.newTokenBank",
      "jump": "o",
      "offset": [
        2238,
        2518
      ],
      "op": "JUMP",
      "path": "4"
    },
    "699": {
      "offset": [
        2147,
        2520
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "700": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x129D"
    },
    "703": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2147,
        2520
      ],
      "op": "DUP1",
      "path": "4"
    },
    "704": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2147,
        2520
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C9"
    },
    "707": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2147,
        2520
      ],
      "op": "DUP4",
      "path": "4"
    },
    "708": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2147,
        2520
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "709": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2147,
        2520
      ],
      "op": "ADD",
      "path": "4"
    },
    "710": {
      "fn": "TokenBankFactory.newTokenBank",
      "offset": [
        2147,
        2520
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "711": {
      "fn": "TokenBankFactory.newTokenBank",
      "jump": "o",
      "offset": [
        2147,
        2520
      ],
      "op": "JUMP",
      "path": "4"
    }
  },
  "sha1": "4eaa0ae6f85e7d942a6c450f3315a844cbaea0ee",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"../utils/Ownable.sol\";\nimport \"../TrustListTools.sol\";\nimport \"../utils/TokenClaimer.sol\";\nimport \"../erc20/IERC20.sol\";\n\n//This support both native and erc20 token\ncontract TokenBank is TokenClaimer, TrustListTools{\n\n  string public token_name;\n  address public erc20_token_addr;\n\n  event withdraw_token(address to, uint256 amount);\n  event issue_token(address to, uint256 amount);\n\n  event RecvETH(uint256 v);\n\n\n  constructor(string memory name, address token_contract, address _tlist) public{\n    token_name = name;\n    erc20_token_addr = token_contract;\n  }\n\n\n  function claimStdTokens(address _token, address payable to)\n    public onlyOwner{\n      _claimStdTokens(_token, to);\n  }\n\n  function balance() public view returns(uint){\n    if(erc20_token_addr == address(0x0)){\n      return address(this).balance;\n    }\n    IERC20 erc20_token = IERC20(erc20_token_addr);\n    return erc20_token.balanceOf(address(this));\n  }\n\n  function token() public view returns(address, string memory){\n    return (erc20_token_addr, token_name);\n  }\n\n  function transfer(address payable to, uint tokens)\n    public\n    onlyOwner\n    returns (bool success){\n    require(tokens <= balance(), \"not enough tokens\");\n    if(erc20_token_addr == address(0x0)){\n      to.transfer(tokens);\n      emit withdraw_token(to, tokens);\n      return true;\n    }\n    (bool status,) = erc20_token_addr.call(abi.encodeWithSignature(\"transfer(address,uint256)\", to, tokens));\n    require(status, \"call erc20 transfer failed\");\n    emit withdraw_token(to, tokens);\n    return true;\n  }\n\n  function issue(address payable _to, uint _amount)\n    public\n    is_trusted(msg.sender)\n    returns (bool success){\n      require(_amount <= balance(), \"not enough tokens\");\n      if(erc20_token_addr == address(0x0)){\n        _to.transfer(_amount);\n        emit issue_token(_to, _amount);\n        return true;\n      }\n      (bool status,) = erc20_token_addr.call(abi.encodeWithSignature(\"transfer(address,uint256)\", _to, _amount));\n      require(status, \"call erc20 transfer failed\");\n      emit issue_token(_to, _amount);\n      return true;\n    }\n}\n\n\ncontract TokenBankFactory {\n  event CreateTokenBank(string indexed name, address addr);\n\n  function newTokenBank(string memory name, address token_contract, address tlist) public returns(TokenBank){\n    TokenBank addr = new TokenBank(name, token_contract, tlist);\n    emit CreateTokenBank(name, address(addr));\n    addr.transferOwnership(msg.sender);\n    return addr;\n  }\n}\n",
  "sourceMap": "2147:373:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2147:373:4;;;;;;;",
  "sourcePath": "contracts/assets/ToKenBank.sol",
  "type": "contract"
}