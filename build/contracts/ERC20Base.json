{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "creationBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferListeners",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentSnapShotBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_parentToken",
          "type": "address"
        },
        {
          "name": "_parentSnapShotBlock",
          "type": "uint256"
        },
        {
          "name": "_tokenName",
          "type": "string"
        },
        {
          "name": "_decimalUnits",
          "type": "uint8"
        },
        {
          "name": "_tokenSymbol",
          "type": "string"
        },
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "NewTransferListener",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "RemoveTransferListener",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "14": "contracts/erc20/ERC20Impl.sol",
    "19": "contracts/utils/AddressArray.sol"
  },
  "ast": {
    "absolutePath": "contracts/erc20/ERC20Impl.sol",
    "exportedSymbols": {
      "ApproveAndCallFallBack": [
        4546
      ],
      "ERC20Base": [
        5472
      ],
      "TransferEventCallBack": [
        4556
      ]
    },
    "id": 5473,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4533,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:14"
      },
      {
        "absolutePath": "contracts/utils/AddressArray.sol",
        "file": "../utils/AddressArray.sol",
        "id": 4534,
        "nodeType": "ImportDirective",
        "scope": 5473,
        "sourceUnit": 6199,
        "src": "33:35:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 4546,
        "linearizedBaseContracts": [
          4546
        ],
        "name": "ApproveAndCallFallBack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 4545,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4536,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4545,
                  "src": "142:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "142:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4538,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4545,
                  "src": "164:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "164:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4540,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 4545,
                  "src": "189:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "189:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4542,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 4545,
                  "src": "213:18:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4541,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "132:105:14"
            },
            "returnParameters": {
              "id": 4544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "244:0:14"
            },
            "scope": 4546,
            "src": "108:137:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5473,
        "src": "70:177:14"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 4556,
        "linearizedBaseContracts": [
          4556
        ],
        "name": "TransferEventCallBack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 4555,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4548,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "302:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4550,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "317:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4552,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4555,
                  "src": "330:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "301:45:14"
            },
            "returnParameters": {
              "id": 4554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:14"
            },
            "scope": 4556,
            "src": "282:72:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 5473,
        "src": "248:108:14"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5472,
        "linearizedBaseContracts": [
          5472
        ],
        "name": "ERC20Base",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4558,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "383:18:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4557,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "383:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4560,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "455:21:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 4559,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "455:5:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4562,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "536:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4561,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "536:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4565,
            "name": "version",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "601:33:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4563,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "601:6:14",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4754545f302e31",
              "id": 4564,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "625:9:14",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ddd048b0bb333eaea7fdb3571e732d3326da7c70068d52acbb1fdb2a6fe331bc",
                "typeString": "literal_string \"GTT_0.1\""
              },
              "value": "GTT_0.1"
            },
            "visibility": "public"
          },
          {
            "id": 4569,
            "libraryName": {
              "contractScope": null,
              "id": 4566,
              "name": "AddressArray",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6198,
              "src": "680:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressArray_$6198",
                "typeString": "library AddressArray"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "674:33:14",
            "typeName": {
              "baseType": {
                "id": 4567,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "697:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 4568,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "697:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            }
          },
          {
            "constant": false,
            "id": 4572,
            "name": "transferListeners",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "712:34:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4570,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "712:7:14",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 4571,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "712:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "/////////////",
            "id": 4580,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4574,
                  "indexed": true,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4580,
                  "src": "812:21:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4576,
                  "indexed": true,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4580,
                  "src": "835:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "835:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4578,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4580,
                  "src": "856:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "811:61:14"
            },
            "src": "797:76:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4588,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4582,
                  "indexed": true,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4588,
                  "src": "902:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4584,
                  "indexed": true,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4588,
                  "src": "934:24:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4586,
                  "indexed": false,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4588,
                  "src": "968:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "892:101:14"
            },
            "src": "878:116:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4592,
            "name": "NewTransferListener",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4590,
                  "indexed": false,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 4592,
                  "src": "1026:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1025:15:14"
            },
            "src": "1000:41:14"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4596,
            "name": "RemoveTransferListener",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4594,
                  "indexed": false,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 4596,
                  "src": "1075:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1074:15:14"
            },
            "src": "1046:44:14"
          },
          {
            "canonicalName": "ERC20Base.Checkpoint",
            "id": 4601,
            "members": [
              {
                "constant": false,
                "id": 4598,
                "name": "fromBlock",
                "nodeType": "VariableDeclaration",
                "scope": 4601,
                "src": "1374:17:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 4597,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1374:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4600,
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 4601,
                "src": "1471:13:14",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 4599,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1471:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Checkpoint",
            "nodeType": "StructDefinition",
            "scope": 5472,
            "src": "1269:222:14",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4603,
            "name": "parentToken",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "1633:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Base_$5472",
              "typeString": "contract ERC20Base"
            },
            "typeName": {
              "contractScope": null,
              "id": 4602,
              "name": "ERC20Base",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5472,
              "src": "1633:9:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Base_$5472",
                "typeString": "contract ERC20Base"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4605,
            "name": "parentSnapShotBlock",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "1818:31:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4604,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1818:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4607,
            "name": "creationBlock",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "1932:25:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4606,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1932:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4612,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "2162:42:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct ERC20Base.Checkpoint[])"
            },
            "typeName": {
              "id": 4611,
              "keyType": {
                "id": 4608,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2171:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2162:33:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct ERC20Base.Checkpoint[])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 4609,
                  "name": "Checkpoint",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 4601,
                  "src": "2182:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                    "typeString": "struct ERC20Base.Checkpoint"
                  }
                },
                "id": 4610,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "2182:12:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                  "typeString": "struct ERC20Base.Checkpoint[]"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4618,
            "name": "allowed",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "2284:57:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 4617,
              "keyType": {
                "id": 4613,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2293:7:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2284:49:14",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 4616,
                "keyType": {
                  "id": 4614,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2313:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2304:28:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 4615,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2324:7:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4621,
            "name": "totalSupplyHistory",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "2408:31:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
              "typeString": "struct ERC20Base.Checkpoint[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 4619,
                "name": "Checkpoint",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4601,
                "src": "2408:10:14",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                  "typeString": "struct ERC20Base.Checkpoint"
                }
              },
              "id": 4620,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "2408:12:14",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                "typeString": "struct ERC20Base.Checkpoint[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 4623,
            "name": "transfersEnabled",
            "nodeType": "VariableDeclaration",
            "scope": 5472,
            "src": "2511:28:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4622,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2511:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4667,
              "nodeType": "Block",
              "src": "3399:410:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4638,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4558,
                      "src": "3409:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4639,
                      "name": "_tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4629,
                      "src": "3416:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3409:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4641,
                  "nodeType": "ExpressionStatement",
                  "src": "3409:17:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4642,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4560,
                      "src": "3484:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4643,
                      "name": "_decimalUnits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4631,
                      "src": "3495:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "3484:24:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 4645,
                  "nodeType": "ExpressionStatement",
                  "src": "3484:24:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4646,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4562,
                      "src": "3563:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4647,
                      "name": "_tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4633,
                      "src": "3572:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3563:21:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4649,
                  "nodeType": "ExpressionStatement",
                  "src": "3563:21:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4650,
                      "name": "parentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4603,
                      "src": "3640:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Base_$5472",
                        "typeString": "contract ERC20Base"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4651,
                      "name": "_parentToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4625,
                      "src": "3654:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Base_$5472",
                        "typeString": "contract ERC20Base"
                      }
                    },
                    "src": "3640:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Base_$5472",
                      "typeString": "contract ERC20Base"
                    }
                  },
                  "id": 4653,
                  "nodeType": "ExpressionStatement",
                  "src": "3640:26:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4654,
                      "name": "parentSnapShotBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4605,
                      "src": "3676:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4655,
                      "name": "_parentSnapShotBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4627,
                      "src": "3698:20:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3676:42:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4657,
                  "nodeType": "ExpressionStatement",
                  "src": "3676:42:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4658,
                      "name": "transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4623,
                      "src": "3728:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4659,
                      "name": "_transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4635,
                      "src": "3747:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3728:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4661,
                  "nodeType": "ExpressionStatement",
                  "src": "3728:36:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4662,
                      "name": "creationBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4607,
                      "src": "3774:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4663,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7284,
                        "src": "3790:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3790:12:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3774:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4666,
                  "nodeType": "ExpressionStatement",
                  "src": "3774:28:14"
                }
              ]
            },
            "documentation": "/////////////\n @notice Constructor to create a ERC20Base\n @param _parentToken Address of the parent token, set to 0x0 if it is a\n  new token\n @param _parentSnapShotBlock Block of the parent token that will\n  determine the initial distribution of the clone token, set to 0 if it\n  is a new token\n @param _tokenName Name of the new token\n @param _decimalUnits Number of decimals of the new token\n @param _tokenSymbol Token Symbol for the new token\n @param _transfersEnabled If true, tokens will be able to be transferred",
            "id": 4668,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4625,
                  "name": "_parentToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 4668,
                  "src": "3192:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Base_$5472",
                    "typeString": "contract ERC20Base"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4624,
                    "name": "ERC20Base",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5472,
                    "src": "3192:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Base_$5472",
                      "typeString": "contract ERC20Base"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4627,
                  "name": "_parentSnapShotBlock",
                  "nodeType": "VariableDeclaration",
                  "scope": 4668,
                  "src": "3224:25:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4626,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3224:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4629,
                  "name": "_tokenName",
                  "nodeType": "VariableDeclaration",
                  "scope": 4668,
                  "src": "3259:24:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4628,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3259:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4631,
                  "name": "_decimalUnits",
                  "nodeType": "VariableDeclaration",
                  "scope": 4668,
                  "src": "3293:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4630,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4633,
                  "name": "_tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 4668,
                  "src": "3322:26:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4632,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3322:6:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4635,
                  "name": "_transfersEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 4668,
                  "src": "3358:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4634,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3182:204:14"
            },
            "returnParameters": {
              "id": 4637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3399:0:14"
            },
            "scope": 5472,
            "src": "3171:638:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4688,
              "nodeType": "Block",
              "src": "4186:95:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4678,
                        "name": "transfersEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4623,
                        "src": "4204:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "4196:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4196:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4680,
                  "nodeType": "ExpressionStatement",
                  "src": "4196:25:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7294,
                          "src": "4249:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4249:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4684,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4670,
                        "src": "4261:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4685,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4672,
                        "src": "4266:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4681,
                      "name": "doTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4836,
                      "src": "4238:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4238:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4676,
                  "id": 4687,
                  "nodeType": "Return",
                  "src": "4231:43:14"
                }
              ]
            },
            "documentation": "////////////////\n @notice Send `_amount` tokens to `_to` from `msg.sender`\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return Whether the transfer was successful or not",
            "id": 4689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4670,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4689,
                  "src": "4126:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4126:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4672,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4689,
                  "src": "4139:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4139:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4125:30:14"
            },
            "returnParameters": {
              "id": 4676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4675,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 4689,
                  "src": "4172:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4674,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4172:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4171:14:14"
            },
            "scope": 5472,
            "src": "4108:173:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4730,
              "nodeType": "Block",
              "src": "4728:272:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4701,
                        "name": "transfersEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4623,
                        "src": "4746:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4700,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "4738:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4738:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4703,
                  "nodeType": "ExpressionStatement",
                  "src": "4738:25:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4704,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4618,
                          "src": "4836:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 4706,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4705,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4691,
                          "src": "4844:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4836:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4709,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4707,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7294,
                          "src": "4851:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4851:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4836:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4710,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4695,
                      "src": "4865:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4836:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4714,
                  "nodeType": "IfStatement",
                  "src": "4832:66:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 4712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4893:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "functionReturnParameters": 4699,
                    "id": 4713,
                    "nodeType": "Return",
                    "src": "4886:12:14"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4715,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4618,
                          "src": "4908:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 4719,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4716,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4691,
                          "src": "4916:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4908:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4720,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4717,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7294,
                          "src": "4923:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4923:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4908:26:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4721,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4695,
                      "src": "4938:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4908:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4723,
                  "nodeType": "ExpressionStatement",
                  "src": "4908:37:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4725,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4691,
                        "src": "4973:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4726,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4693,
                        "src": "4980:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4727,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4695,
                        "src": "4985:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4724,
                      "name": "doTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4836,
                      "src": "4962:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 4728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4699,
                  "id": 4729,
                  "nodeType": "Return",
                  "src": "4955:38:14"
                }
              ]
            },
            "documentation": "@notice Send `_amount` tokens to `_to` from `_from` on the condition it\n  is approved by `_from`\n @param _from The address holding the tokens being transferred\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return True if the transfer was successful",
            "id": 4731,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4691,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4731,
                  "src": "4653:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4653:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4693,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4731,
                  "src": "4668:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4668:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4695,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4731,
                  "src": "4681:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4681:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4652:45:14"
            },
            "returnParameters": {
              "id": 4699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4698,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 4731,
                  "src": "4714:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4697,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4714:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4713:14:14"
            },
            "scope": 5472,
            "src": "4631:369:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4835,
              "nodeType": "Block",
              "src": "5464:1239:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4742,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4737,
                      "src": "5478:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 4743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5489:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5478:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4748,
                  "nodeType": "IfStatement",
                  "src": "5474:54:14",
                  "trueBody": {
                    "id": 4747,
                    "nodeType": "Block",
                    "src": "5492:36:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 4745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5513:4:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 4741,
                        "id": 4746,
                        "nodeType": "Return",
                        "src": "5506:11:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4750,
                          "name": "parentSnapShotBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4605,
                          "src": "5545:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4751,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7284,
                            "src": "5567:5:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 4752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5567:12:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5545:34:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4749,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "5537:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5537:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4755,
                  "nodeType": "ExpressionStatement",
                  "src": "5537:43:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 4757,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4735,
                                "src": "5668:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 4759,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5683:1:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 4758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5675:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 4760,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5675:10:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5668:17:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 4762,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5667:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 4763,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4735,
                                "src": "5691:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4765,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7354,
                                    "src": "5706:4:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Base_$5472",
                                      "typeString": "contract ERC20Base"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20Base_$5472",
                                      "typeString": "contract ERC20Base"
                                    }
                                  ],
                                  "id": 4764,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5698:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 4766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5698:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5691:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 4768,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5690:22:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5667:45:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "5659:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5659:54:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4771,
                  "nodeType": "ExpressionStatement",
                  "src": "5659:54:14"
                },
                {
                  "assignments": [
                    4773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4773,
                      "name": "previousBalanceFrom",
                      "nodeType": "VariableDeclaration",
                      "scope": 4835,
                      "src": "5844:27:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4772,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5844:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4779,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4775,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4733,
                        "src": "5886:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4776,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7284,
                          "src": "5893:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5893:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4774,
                      "name": "balanceOfAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5019,
                      "src": "5874:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 4778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5874:32:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5844:62:14"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4780,
                      "name": "previousBalanceFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4773,
                      "src": "5920:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4781,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4737,
                      "src": "5942:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5920:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4786,
                  "nodeType": "IfStatement",
                  "src": "5916:72:14",
                  "trueBody": {
                    "id": 4785,
                    "nodeType": "Block",
                    "src": "5951:37:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 4783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5972:5:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 4741,
                        "id": 4784,
                        "nodeType": "Return",
                        "src": "5965:12:14"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4788,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4612,
                          "src": "6122:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ERC20Base.Checkpoint storage ref[] storage ref)"
                          }
                        },
                        "id": 4790,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4789,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4733,
                          "src": "6131:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6122:15:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4791,
                          "name": "previousBalanceFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4773,
                          "src": "6139:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4792,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4737,
                          "src": "6161:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6139:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4787,
                      "name": "updateValueAtNow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5383,
                      "src": "6105:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct ERC20Base.Checkpoint storage ref[] storage pointer,uint256)"
                      }
                    },
                    "id": 4794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6105:64:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4795,
                  "nodeType": "ExpressionStatement",
                  "src": "6105:64:14"
                },
                {
                  "assignments": [
                    4797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4797,
                      "name": "previousBalanceTo",
                      "nodeType": "VariableDeclaration",
                      "scope": 4835,
                      "src": "6288:25:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4796,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6288:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4803,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4799,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4735,
                        "src": "6328:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4800,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7284,
                          "src": "6333:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6333:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4798,
                      "name": "balanceOfAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5019,
                      "src": "6316:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 4802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6316:30:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6288:58:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 4805,
                            "name": "previousBalanceTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4797,
                            "src": "6364:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4806,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4737,
                            "src": "6384:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6364:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4808,
                          "name": "previousBalanceTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4797,
                          "src": "6395:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6364:48:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "6356:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6356:57:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4811,
                  "nodeType": "ExpressionStatement",
                  "src": "6356:57:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4813,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4612,
                          "src": "6462:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ERC20Base.Checkpoint storage ref[] storage ref)"
                          }
                        },
                        "id": 4815,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 4814,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4735,
                          "src": "6471:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6462:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4816,
                          "name": "previousBalanceTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4797,
                          "src": "6477:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 4817,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4737,
                          "src": "6497:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6477:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4812,
                      "name": "updateValueAtNow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5383,
                      "src": "6445:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct ERC20Base.Checkpoint storage ref[] storage pointer,uint256)"
                      }
                    },
                    "id": 4819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6445:60:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4820,
                  "nodeType": "ExpressionStatement",
                  "src": "6445:60:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4822,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4733,
                        "src": "6610:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4823,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4735,
                        "src": "6617:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4824,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4737,
                        "src": "6622:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4821,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4580,
                      "src": "6601:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6601:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4826,
                  "nodeType": "EmitStatement",
                  "src": "6596:34:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4828,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4733,
                        "src": "6655:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4829,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4735,
                        "src": "6662:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4830,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4737,
                        "src": "6667:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4827,
                      "name": "onTransferDone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "6640:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6640:35:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4832,
                  "nodeType": "ExpressionStatement",
                  "src": "6640:35:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6692:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4741,
                  "id": 4834,
                  "nodeType": "Return",
                  "src": "6685:11:14"
                }
              ]
            },
            "documentation": "@dev This is the actual transfer function in the token contract, it can\n  only be called by other functions in this contract.\n @param _from The address holding the tokens being transferred\n @param _to The address of the recipient\n @param _amount The amount of tokens to be transferred\n @return True if the transfer was successful",
            "id": 4836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4733,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "5399:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5399:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4735,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "5414:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5414:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4737,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "5427:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4736,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5427:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5398:42:14"
            },
            "returnParameters": {
              "id": 4741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4740,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4836,
                  "src": "5458:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5458:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5457:6:14"
            },
            "scope": 5472,
            "src": "5379:1324:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4849,
              "nodeType": "Block",
              "src": "6911:57:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4844,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4838,
                        "src": "6940:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4845,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7284,
                          "src": "6948:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6948:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4843,
                      "name": "balanceOfAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5019,
                      "src": "6928:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 4847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6928:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4842,
                  "id": 4848,
                  "nodeType": "Return",
                  "src": "6921:40:14"
                }
              ]
            },
            "documentation": "@param _owner The address that's balance is being requested\n @return The balance of `_owner` at the current block",
            "id": 4850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4838,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4850,
                  "src": "6857:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4837,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6857:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6856:16:14"
            },
            "returnParameters": {
              "id": 4842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4841,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 4850,
                  "src": "6894:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6894:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6893:17:14"
            },
            "scope": 5472,
            "src": "6838:130:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4898,
              "nodeType": "Block",
              "src": "7449:544:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4860,
                        "name": "transfersEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4623,
                        "src": "7467:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4859,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "7459:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7459:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4862,
                  "nodeType": "ExpressionStatement",
                  "src": "7459:25:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 4877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 4864,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4854,
                                "src": "7807:7:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7818:1:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7807:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 4867,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7806:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 4868,
                                    "name": "allowed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4618,
                                    "src": "7825:7:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 4871,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4869,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 7294,
                                      "src": "7833:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4870,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "7833:10:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7825:19:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 4873,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 4872,
                                  "name": "_spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4852,
                                  "src": "7845:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7825:29:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7858:1:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7825:34:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 4876,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7824:36:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7806:54:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "7798:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7798:63:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4879,
                  "nodeType": "ExpressionStatement",
                  "src": "7798:63:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 4880,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4618,
                          "src": "7872:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 4884,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 4881,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7294,
                            "src": "7880:3:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "7880:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7872:19:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4885,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4883,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4852,
                        "src": "7892:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7872:29:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4886,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4854,
                      "src": "7904:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7872:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4888,
                  "nodeType": "ExpressionStatement",
                  "src": "7872:39:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4890,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7294,
                          "src": "7935:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7935:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4892,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4852,
                        "src": "7947:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4893,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4854,
                        "src": "7957:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4889,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4588,
                      "src": "7926:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7926:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4895,
                  "nodeType": "EmitStatement",
                  "src": "7921:44:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7982:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4858,
                  "id": 4897,
                  "nodeType": "Return",
                  "src": "7975:11:14"
                }
              ]
            },
            "documentation": "@notice `msg.sender` approves `_spender` to spend `_amount` tokens on\n  its behalf. This is a modified version of the ERC20 approve function\n  to be a little bit safer\n @param _spender The address of the account able to transfer the tokens\n @param _amount The amount of tokens to be approved for transfer\n @return True if the approval was successful",
            "id": 4899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4852,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "7384:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7384:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4854,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "7402:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7402:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7383:35:14"
            },
            "returnParameters": {
              "id": 4858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4857,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 4899,
                  "src": "7435:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4856,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7435:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7434:14:14"
            },
            "scope": 5472,
            "src": "7367:626:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4914,
              "nodeType": "Block",
              "src": "8405:49:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 4908,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4618,
                        "src": "8422:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4910,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 4909,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4901,
                        "src": "8430:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8422:15:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4912,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4911,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4903,
                      "src": "8438:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8422:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4907,
                  "id": 4913,
                  "nodeType": "Return",
                  "src": "8415:32:14"
                }
              ]
            },
            "documentation": "@dev This function makes it easy to read the `allowed[]` map\n @param _owner The address of the account that owns the token\n @param _spender The address of the account able to transfer the tokens\n @return Amount of remaining tokens of _owner that _spender is allowed\n  to spend",
            "id": 4915,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4901,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 4915,
                  "src": "8331:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8331:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4903,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4915,
                  "src": "8347:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8347:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8330:34:14"
            },
            "returnParameters": {
              "id": 4907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4906,
                  "name": "remaining",
                  "nodeType": "VariableDeclaration",
                  "scope": 4915,
                  "src": "8386:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8386:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8385:19:14"
            },
            "scope": 5472,
            "src": "8312:142:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4949,
              "nodeType": "Block",
              "src": "9100:224:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4929,
                                "name": "_spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4917,
                                "src": "9134:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ApproveAndCallFallBack_$4546",
                                  "typeString": "contract ApproveAndCallFallBack"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ApproveAndCallFallBack_$4546",
                                  "typeString": "contract ApproveAndCallFallBack"
                                }
                              ],
                              "id": 4928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9126:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9126:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 4931,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4919,
                            "src": "9145:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4927,
                          "name": "approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4899,
                          "src": "9118:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 4932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9118:35:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "9110:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9110:44:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4934,
                  "nodeType": "ExpressionStatement",
                  "src": "9110:44:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4938,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7294,
                          "src": "9203:3:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9203:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4940,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4919,
                        "src": "9227:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 4942,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7354,
                            "src": "9256:4:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Base_$5472",
                              "typeString": "contract ERC20Base"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Base_$5472",
                              "typeString": "contract ERC20Base"
                            }
                          ],
                          "id": 4941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9248:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 4943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9248:13:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4944,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4921,
                        "src": "9275:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4935,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4917,
                        "src": "9165:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ApproveAndCallFallBack_$4546",
                          "typeString": "contract ApproveAndCallFallBack"
                        }
                      },
                      "id": 4937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "receiveApproval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4545,
                      "src": "9165:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,address,bytes memory) external"
                      }
                    },
                    "id": 4945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9165:130:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4946,
                  "nodeType": "ExpressionStatement",
                  "src": "9165:130:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9313:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4925,
                  "id": 4948,
                  "nodeType": "Return",
                  "src": "9306:11:14"
                }
              ]
            },
            "documentation": "@notice `msg.sender` approves `_spender` to send `_amount` tokens on\n  its behalf, and then a function is triggered in the contract that is\n  being approved, `_spender`. This allows users to use their tokens to\n  interact with contracts in one function call instead of two\n @param _spender The address of the contract able to transfer the tokens\n @param _amount The amount of tokens to be approved for transfer\n @return True if the function call was successful",
            "id": 4950,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4917,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "8995:31:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ApproveAndCallFallBack_$4546",
                    "typeString": "contract ApproveAndCallFallBack"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4916,
                    "name": "ApproveAndCallFallBack",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4546,
                    "src": "8995:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ApproveAndCallFallBack_$4546",
                      "typeString": "contract ApproveAndCallFallBack"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4919,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "9028:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4918,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9028:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4921,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "9045:23:14",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4920,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9045:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8994:75:14"
            },
            "returnParameters": {
              "id": 4925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4924,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 4950,
                  "src": "9086:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4923,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9086:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9085:14:14"
            },
            "scope": 5472,
            "src": "8971:353:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4960,
              "nodeType": "Block",
              "src": "9498:51:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4956,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7284,
                          "src": "9529:5:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9529:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4955,
                      "name": "totalSupplyAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5068,
                      "src": "9515:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 4958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9515:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4954,
                  "id": 4959,
                  "nodeType": "Return",
                  "src": "9508:34:14"
                }
              ]
            },
            "documentation": "@dev This function makes it easy to get the total number of tokens\n @return The total number of tokens",
            "id": 4961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9468:2:14"
            },
            "returnParameters": {
              "id": 4954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4953,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4961,
                  "src": "9492:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4952,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9492:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9491:6:14"
            },
            "scope": 5472,
            "src": "9448:101:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5018,
              "nodeType": "Block",
              "src": "9986:840:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 4970,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4612,
                                "src": "10329:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ERC20Base.Checkpoint storage ref[] storage ref)"
                                }
                              },
                              "id": 4972,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 4971,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4963,
                                "src": "10338:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10329:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                              }
                            },
                            "id": 4973,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10329:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 4974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10356:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10329:28:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 4976,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10328:30:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 4977,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4612,
                                  "src": "10363:8:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct ERC20Base.Checkpoint storage ref[] storage ref)"
                                  }
                                },
                                "id": 4979,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 4978,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4963,
                                  "src": "10372:6:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10363:16:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                                  "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                                }
                              },
                              "id": 4981,
                              "indexExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10380:1:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10363:19:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref"
                              }
                            },
                            "id": 4982,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4598,
                            "src": "10363:29:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 4983,
                            "name": "_blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4965,
                            "src": "10395:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10363:44:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 4985,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10362:46:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10328:80:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5016,
                    "nodeType": "Block",
                    "src": "10746:74:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5010,
                                "name": "balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4612,
                                "src": "10778:8:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct ERC20Base.Checkpoint storage ref[] storage ref)"
                                }
                              },
                              "id": 5012,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5011,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4963,
                                "src": "10787:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10778:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5013,
                              "name": "_blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4965,
                              "src": "10796:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5009,
                            "name": "getValueAt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5312,
                            "src": "10767:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (struct ERC20Base.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"
                            }
                          },
                          "id": 5014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10767:42:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4969,
                        "id": 5015,
                        "nodeType": "Return",
                        "src": "10760:49:14"
                      }
                    ]
                  },
                  "id": 5017,
                  "nodeType": "IfStatement",
                  "src": "10324:496:14",
                  "trueBody": {
                    "id": 5008,
                    "nodeType": "Block",
                    "src": "10410:330:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4988,
                                "name": "parentToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4603,
                                "src": "10436:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Base_$5472",
                                  "typeString": "contract ERC20Base"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Base_$5472",
                                  "typeString": "contract ERC20Base"
                                }
                              ],
                              "id": 4987,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10428:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10428:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 4991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10460:1:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10452:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 4992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10452:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "10428:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 5006,
                          "nodeType": "Block",
                          "src": "10581:74:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 5004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10639:1:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 4969,
                              "id": 5005,
                              "nodeType": "Return",
                              "src": "10632:8:14"
                            }
                          ]
                        },
                        "id": 5007,
                        "nodeType": "IfStatement",
                        "src": "10424:231:14",
                        "trueBody": {
                          "id": 5003,
                          "nodeType": "Block",
                          "src": "10464:111:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4996,
                                    "name": "_owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4963,
                                    "src": "10513:6:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 4998,
                                        "name": "_blockNumber",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4965,
                                        "src": "10525:12:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 4999,
                                        "name": "parentSnapShotBlock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4605,
                                        "src": "10539:19:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 4997,
                                      "name": "min",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5471,
                                      "src": "10521:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 5000,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10521:38:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 4994,
                                    "name": "parentToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4603,
                                    "src": "10489:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Base_$5472",
                                      "typeString": "contract ERC20Base"
                                    }
                                  },
                                  "id": 4995,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOfAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5019,
                                  "src": "10489:23:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (address,uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 5001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10489:71:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 4969,
                              "id": 5002,
                              "nodeType": "Return",
                              "src": "10482:78:14"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "/////////////\n @dev Queries the balance of `_owner` at a specific `_blockNumber`\n @param _owner The address from which the balance will be retrieved\n @param _blockNumber The block number when the balance is queried\n @return The balance at `_blockNumber`",
            "id": 5019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfAt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4963,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 5019,
                  "src": "9924:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9924:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4965,
                  "name": "_blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 5019,
                  "src": "9940:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4964,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9940:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9923:35:14"
            },
            "returnParameters": {
              "id": 4969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4968,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5019,
                  "src": "9980:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4967,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9980:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9979:6:14"
            },
            "scope": 5472,
            "src": "9903:923:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5067,
              "nodeType": "Block",
              "src": "11107:835:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5026,
                              "name": "totalSupplyHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4621,
                              "src": "11474:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                              }
                            },
                            "id": 5027,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "11474:25:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11503:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11474:30:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 5030,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11473:32:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5031,
                                "name": "totalSupplyHistory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4621,
                                "src": "11510:18:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                                  "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                                }
                              },
                              "id": 5033,
                              "indexExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 5032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11529:1:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11510:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref"
                              }
                            },
                            "id": 5034,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4598,
                            "src": "11510:31:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 5035,
                            "name": "_blockNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5021,
                            "src": "11544:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11510:46:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 5037,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11509:48:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11473:84:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5065,
                    "nodeType": "Block",
                    "src": "11860:76:14",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5061,
                              "name": "totalSupplyHistory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4621,
                              "src": "11892:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5062,
                              "name": "_blockNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5021,
                              "src": "11912:12:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5060,
                            "name": "getValueAt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5312,
                            "src": "11881:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (struct ERC20Base.Checkpoint storage ref[] storage pointer,uint256) view returns (uint256)"
                            }
                          },
                          "id": 5063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11881:44:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 5025,
                        "id": 5064,
                        "nodeType": "Return",
                        "src": "11874:51:14"
                      }
                    ]
                  },
                  "id": 5066,
                  "nodeType": "IfStatement",
                  "src": "11469:467:14",
                  "trueBody": {
                    "id": 5059,
                    "nodeType": "Block",
                    "src": "11559:295:14",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5040,
                                "name": "parentToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4603,
                                "src": "11585:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Base_$5472",
                                  "typeString": "contract ERC20Base"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Base_$5472",
                                  "typeString": "contract ERC20Base"
                                }
                              ],
                              "id": 5039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11577:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 5041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11577:20:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 5043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11609:1:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 5042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11601:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 5044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11601:10:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "11577:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 5057,
                          "nodeType": "Block",
                          "src": "11724:41:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 5055,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11749:1:14",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 5025,
                              "id": 5056,
                              "nodeType": "Return",
                              "src": "11742:8:14"
                            }
                          ]
                        },
                        "id": 5058,
                        "nodeType": "IfStatement",
                        "src": "11573:192:14",
                        "trueBody": {
                          "id": 5054,
                          "nodeType": "Block",
                          "src": "11613:105:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 5049,
                                        "name": "_blockNumber",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5021,
                                        "src": "11668:12:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 5050,
                                        "name": "parentSnapShotBlock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4605,
                                        "src": "11682:19:14",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 5048,
                                      "name": "min",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5471,
                                      "src": "11664:3:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 5051,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11664:38:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5046,
                                    "name": "parentToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4603,
                                    "src": "11638:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20Base_$5472",
                                      "typeString": "contract ERC20Base"
                                    }
                                  },
                                  "id": 5047,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalSupplyAt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5068,
                                  "src": "11638:25:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 5052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11638:65:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 5025,
                              "id": 5053,
                              "nodeType": "Return",
                              "src": "11631:72:14"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@notice Total amount of tokens at a specific `_blockNumber`.\n @param _blockNumber The block number when the totalSupply is queried\n @return The total amount of tokens at `_blockNumber`",
            "id": 5068,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupplyAt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5021,
                  "name": "_blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 5068,
                  "src": "11062:17:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5020,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11062:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11061:19:14"
            },
            "returnParameters": {
              "id": 5025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5024,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5068,
                  "src": "11101:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5023,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11101:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11100:6:14"
            },
            "scope": 5472,
            "src": "11039:903:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5138,
              "nodeType": "Block",
              "src": "12352:547:14",
              "statements": [
                {
                  "assignments": [
                    5078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5078,
                      "name": "curTotalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 5138,
                      "src": "12362:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5077,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12362:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5081,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5079,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4961,
                      "src": "12384:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 5080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12384:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12362:35:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 5083,
                            "name": "curTotalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5078,
                            "src": "12415:14:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 5084,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5072,
                            "src": "12432:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12415:24:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5086,
                          "name": "curTotalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5078,
                          "src": "12443:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12415:42:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "12407:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12407:51:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5089,
                  "nodeType": "ExpressionStatement",
                  "src": "12407:51:14"
                },
                {
                  "assignments": [
                    5091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5091,
                      "name": "previousBalanceTo",
                      "nodeType": "VariableDeclaration",
                      "scope": 5138,
                      "src": "12490:22:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5090,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12490:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5095,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5093,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5070,
                        "src": "12525:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5092,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4850,
                      "src": "12515:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 5094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12515:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12490:42:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 5097,
                            "name": "previousBalanceTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5091,
                            "src": "12550:17:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 5098,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5072,
                            "src": "12570:7:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12550:27:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5100,
                          "name": "previousBalanceTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5091,
                          "src": "12581:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12550:48:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "12542:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12542:57:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5103,
                  "nodeType": "ExpressionStatement",
                  "src": "12542:57:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5105,
                        "name": "totalSupplyHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4621,
                        "src": "12648:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5106,
                          "name": "curTotalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5078,
                          "src": "12668:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5107,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5072,
                          "src": "12685:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12668:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5104,
                      "name": "updateValueAtNow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5383,
                      "src": "12631:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct ERC20Base.Checkpoint storage ref[] storage pointer,uint256)"
                      }
                    },
                    "id": 5109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12631:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5110,
                  "nodeType": "ExpressionStatement",
                  "src": "12631:62:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5112,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4612,
                          "src": "12720:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ERC20Base.Checkpoint storage ref[] storage ref)"
                          }
                        },
                        "id": 5114,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5113,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5070,
                          "src": "12729:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12720:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5115,
                          "name": "previousBalanceTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5091,
                          "src": "12738:17:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5116,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5072,
                          "src": "12758:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12738:27:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5111,
                      "name": "updateValueAtNow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5383,
                      "src": "12703:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct ERC20Base.Checkpoint storage ref[] storage pointer,uint256)"
                      }
                    },
                    "id": 5118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12703:63:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5119,
                  "nodeType": "ExpressionStatement",
                  "src": "12703:63:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12798:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12790:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12790:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5124,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5070,
                        "src": "12802:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5125,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5072,
                        "src": "12810:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5120,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4580,
                      "src": "12781:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12781:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5127,
                  "nodeType": "EmitStatement",
                  "src": "12776:42:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12851:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12843:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12843:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5132,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5070,
                        "src": "12855:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5133,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5072,
                        "src": "12863:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5128,
                      "name": "onTransferDone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "12828:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12828:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5135,
                  "nodeType": "ExpressionStatement",
                  "src": "12828:43:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 5136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12888:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5076,
                  "id": 5137,
                  "nodeType": "Return",
                  "src": "12881:11:14"
                }
              ]
            },
            "documentation": "/////////////\n @notice Generates `_amount` tokens that are assigned to `_owner`\n @param _owner The address that will be assigned the new tokens\n @param _amount The quantity of tokens generated\n @return True if the tokens are generated correctly",
            "id": 5139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generateTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5070,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 5139,
                  "src": "12298:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12298:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5072,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5139,
                  "src": "12314:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5071,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12314:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12297:30:14"
            },
            "returnParameters": {
              "id": 5076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5075,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5139,
                  "src": "12346:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5074,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12346:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12345:6:14"
            },
            "scope": 5472,
            "src": "12273:626:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5205,
              "nodeType": "Block",
              "src": "13207:472:14",
              "statements": [
                {
                  "assignments": [
                    5149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5149,
                      "name": "curTotalSupply",
                      "nodeType": "VariableDeclaration",
                      "scope": 5205,
                      "src": "13217:19:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5148,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13217:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5152,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5150,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4961,
                      "src": "13239:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 5151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13239:13:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13217:35:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5154,
                          "name": "curTotalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5149,
                          "src": "13270:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5155,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5143,
                          "src": "13288:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13270:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "13262:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13262:34:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5158,
                  "nodeType": "ExpressionStatement",
                  "src": "13262:34:14"
                },
                {
                  "assignments": [
                    5160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5160,
                      "name": "previousBalanceFrom",
                      "nodeType": "VariableDeclaration",
                      "scope": 5205,
                      "src": "13306:24:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5159,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13306:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5164,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5162,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5141,
                        "src": "13343:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5161,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4850,
                      "src": "13333:9:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 5163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13333:17:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13306:44:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5166,
                          "name": "previousBalanceFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5160,
                          "src": "13368:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5167,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5143,
                          "src": "13391:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13368:30:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7297,
                        7298
                      ],
                      "referencedDeclaration": 7297,
                      "src": "13360:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13360:39:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5170,
                  "nodeType": "ExpressionStatement",
                  "src": "13360:39:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5172,
                        "name": "totalSupplyHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4621,
                        "src": "13426:18:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5173,
                          "name": "curTotalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5149,
                          "src": "13446:14:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5174,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5143,
                          "src": "13463:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13446:24:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5171,
                      "name": "updateValueAtNow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5383,
                      "src": "13409:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct ERC20Base.Checkpoint storage ref[] storage pointer,uint256)"
                      }
                    },
                    "id": 5176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13409:62:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5177,
                  "nodeType": "ExpressionStatement",
                  "src": "13409:62:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5179,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4612,
                          "src": "13498:8:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct ERC20Base.Checkpoint storage ref[] storage ref)"
                          }
                        },
                        "id": 5181,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5180,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5141,
                          "src": "13507:6:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13498:16:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 5182,
                          "name": "previousBalanceFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5160,
                          "src": "13516:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 5183,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5143,
                          "src": "13538:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13516:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5178,
                      "name": "updateValueAtNow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5383,
                      "src": "13481:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct ERC20Base.Checkpoint storage ref[] storage pointer,uint256)"
                      }
                    },
                    "id": 5185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13481:65:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5186,
                  "nodeType": "ExpressionStatement",
                  "src": "13481:65:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5188,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5141,
                        "src": "13570:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13586:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13578:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13578:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5192,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5143,
                        "src": "13590:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5187,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4580,
                      "src": "13561:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13561:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5194,
                  "nodeType": "EmitStatement",
                  "src": "13556:42:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5196,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5141,
                        "src": "13623:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13639:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13631:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 5199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13631:10:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5200,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5143,
                        "src": "13643:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5195,
                      "name": "onTransferDone",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "13608:14:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13608:43:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5202,
                  "nodeType": "ExpressionStatement",
                  "src": "13608:43:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 5203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13668:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5147,
                  "id": 5204,
                  "nodeType": "Return",
                  "src": "13661:11:14"
                }
              ]
            },
            "documentation": "@notice Burns `_amount` tokens from `_owner`\n @param _owner The address that will lose the tokens\n @param _amount The quantity of tokens to burn\n @return True if the tokens are burned correctly",
            "id": 5206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_destroyTokens",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5141,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 5206,
                  "src": "13153:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13153:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5143,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5206,
                  "src": "13169:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13169:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13152:30:14"
            },
            "returnParameters": {
              "id": 5147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5146,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5206,
                  "src": "13201:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13201:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13200:6:14"
            },
            "scope": 5472,
            "src": "13129:550:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5215,
              "nodeType": "Block",
              "src": "13961:53:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 5211,
                      "name": "transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4623,
                      "src": "13971:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5212,
                      "name": "_transfersEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5208,
                      "src": "13990:17:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13971:36:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5214,
                  "nodeType": "ExpressionStatement",
                  "src": "13971:36:14"
                }
              ]
            },
            "documentation": "/////////////\n @notice Enables token holders to transfer their tokens freely if true\n @param _transfersEnabled True if transfers are allowed in the clone",
            "id": 5216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enableTransfers",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5208,
                  "name": "_transfersEnabled",
                  "nodeType": "VariableDeclaration",
                  "scope": 5216,
                  "src": "13928:22:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5207,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13928:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13927:24:14"
            },
            "returnParameters": {
              "id": 5210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13961:0:14"
            },
            "scope": 5472,
            "src": "13902:112:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5311,
              "nodeType": "Block",
              "src": "14484:685:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5226,
                        "name": "checkpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5219,
                        "src": "14498:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                        }
                      },
                      "id": 5227,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14498:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14520:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14498:23:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5232,
                  "nodeType": "IfStatement",
                  "src": "14494:49:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14542:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 5225,
                    "id": 5231,
                    "nodeType": "Return",
                    "src": "14535:8:14"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5233,
                      "name": "_block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5221,
                      "src": "14599:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5234,
                          "name": "checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "14609:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                            "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                          }
                        },
                        "id": 5239,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5235,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5219,
                              "src": "14621:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                                "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                              }
                            },
                            "id": 5236,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14621:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 5237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14640:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "14621:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14609:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref"
                        }
                      },
                      "id": 5240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4598,
                      "src": "14609:43:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "14599:53:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5250,
                  "nodeType": "IfStatement",
                  "src": "14595:117:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5242,
                          "name": "checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "14673:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                            "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                          }
                        },
                        "id": 5247,
                        "indexExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5243,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5219,
                              "src": "14685:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                                "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                              }
                            },
                            "id": 5244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14685:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 5245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14704:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "14685:20:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14673:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref"
                        }
                      },
                      "id": 5248,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4600,
                      "src": "14673:39:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "functionReturnParameters": 5225,
                    "id": 5249,
                    "nodeType": "Return",
                    "src": "14666:46:14"
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5251,
                      "name": "_block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5221,
                      "src": "14726:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5252,
                          "name": "checkpoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "14735:11:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                            "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                          }
                        },
                        "id": 5254,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14747:1:14",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14735:14:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                          "typeString": "struct ERC20Base.Checkpoint storage ref"
                        }
                      },
                      "id": 5255,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4598,
                      "src": "14735:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "src": "14726:33:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5259,
                  "nodeType": "IfStatement",
                  "src": "14722:59:14",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14780:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 5225,
                    "id": 5258,
                    "nodeType": "Return",
                    "src": "14773:8:14"
                  }
                },
                {
                  "assignments": [
                    5261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5261,
                      "name": "min",
                      "nodeType": "VariableDeclaration",
                      "scope": 5311,
                      "src": "14843:8:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5260,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14843:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5263,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 5262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14854:1:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14843:12:14"
                },
                {
                  "assignments": [
                    5265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5265,
                      "name": "max",
                      "nodeType": "VariableDeclaration",
                      "scope": 5311,
                      "src": "14865:8:14",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5264,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14865:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 5270,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5266,
                        "name": "checkpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5219,
                        "src": "14876:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                        }
                      },
                      "id": 5267,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14876:18:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 5268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14895:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "14876:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14865:31:14"
                },
                {
                  "body": {
                    "id": 5304,
                    "nodeType": "Block",
                    "src": "14924:200:14",
                    "statements": [
                      {
                        "assignments": [
                          5275
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5275,
                            "name": "mid",
                            "nodeType": "VariableDeclaration",
                            "scope": 5304,
                            "src": "14938:8:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5274,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14938:4:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5284,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 5276,
                                    "name": "max",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5265,
                                    "src": "14950:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 5277,
                                    "name": "min",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5261,
                                    "src": "14956:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14950:9:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 5279,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14962:1:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "14950:13:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 5281,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "14949:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 5282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14967:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "14949:19:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14938:30:14"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5285,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5219,
                                "src": "14986:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                                  "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                                }
                              },
                              "id": 5287,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5286,
                                "name": "mid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5275,
                                "src": "14998:3:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14986:16:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref"
                              }
                            },
                            "id": 5288,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4598,
                            "src": "14986:26:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 5289,
                            "name": "_block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5221,
                            "src": "15014:6:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14986:34:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 5302,
                          "nodeType": "Block",
                          "src": "15070:44:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 5296,
                                  "name": "max",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5265,
                                  "src": "15088:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 5297,
                                    "name": "mid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5275,
                                    "src": "15094:3:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 5298,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15098:1:14",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "15094:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15088:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5301,
                              "nodeType": "ExpressionStatement",
                              "src": "15088:11:14"
                            }
                          ]
                        },
                        "id": 5303,
                        "nodeType": "IfStatement",
                        "src": "14982:132:14",
                        "trueBody": {
                          "id": 5295,
                          "nodeType": "Block",
                          "src": "15022:42:14",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 5291,
                                  "name": "min",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5261,
                                  "src": "15040:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 5292,
                                  "name": "mid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5275,
                                  "src": "15046:3:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15040:9:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5294,
                              "nodeType": "ExpressionStatement",
                              "src": "15040:9:14"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5271,
                      "name": "max",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5265,
                      "src": "14913:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 5272,
                      "name": "min",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5261,
                      "src": "14919:3:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14913:9:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5305,
                  "nodeType": "WhileStatement",
                  "src": "14906:218:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 5306,
                        "name": "checkpoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5219,
                        "src": "15140:11:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                          "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                        }
                      },
                      "id": 5308,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 5307,
                        "name": "min",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5261,
                        "src": "15152:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "15140:16:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                        "typeString": "struct ERC20Base.Checkpoint storage ref"
                      }
                    },
                    "id": 5309,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4600,
                    "src": "15140:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 5225,
                  "id": 5310,
                  "nodeType": "Return",
                  "src": "15133:29:14"
                }
              ]
            },
            "documentation": "/////////////\n @dev `getValueAt` retrieves the number of tokens at a given block number\n @param checkpoints The history of values being queried\n @param _block The block number to retrieve the value at\n @return The number of tokens being queried",
            "id": 5312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValueAt",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5219,
                  "name": "checkpoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 5312,
                  "src": "14408:32:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                    "typeString": "struct ERC20Base.Checkpoint[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5217,
                      "name": "Checkpoint",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 4601,
                      "src": "14408:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                        "typeString": "struct ERC20Base.Checkpoint"
                      }
                    },
                    "id": 5218,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "14408:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20Base.Checkpoint[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5221,
                  "name": "_block",
                  "nodeType": "VariableDeclaration",
                  "scope": 5312,
                  "src": "14442:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5220,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14442:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14407:47:14"
            },
            "returnParameters": {
              "id": 5225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5224,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5312,
                  "src": "14478:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5223,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14478:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14477:6:14"
            },
            "scope": 5472,
            "src": "14388:781:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5382,
              "nodeType": "Block",
              "src": "15469:470:14",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5320,
                              "name": "checkpoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5315,
                              "src": "15484:11:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                                "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                              }
                            },
                            "id": 5321,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "15484:18:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15506:1:14",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15484:23:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 5324,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15483:25:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5325,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5315,
                                "src": "15513:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                                  "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                                }
                              },
                              "id": 5330,
                              "indexExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5326,
                                    "name": "checkpoints",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5315,
                                    "src": "15525:11:14",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                                      "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                                    }
                                  },
                                  "id": 5327,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "15525:18:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 5328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15546:1:14",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "15525:22:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15513:35:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                                "typeString": "struct ERC20Base.Checkpoint storage ref"
                              }
                            },
                            "id": 5331,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4598,
                            "src": "15513:45:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5332,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7284,
                              "src": "15561:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 5333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "15561:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15513:60:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 5335,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15512:62:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15483:91:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5380,
                    "nodeType": "Block",
                    "src": "15787:146:14",
                    "statements": [
                      {
                        "assignments": [
                          5364
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5364,
                            "name": "oldCheckPoint",
                            "nodeType": "VariableDeclaration",
                            "scope": 5380,
                            "src": "15801:32:14",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                              "typeString": "struct ERC20Base.Checkpoint"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 5363,
                              "name": "Checkpoint",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 4601,
                              "src": "15801:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                                "typeString": "struct ERC20Base.Checkpoint"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5371,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 5365,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5315,
                            "src": "15836:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                              "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                            }
                          },
                          "id": 5370,
                          "indexExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5366,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5315,
                                "src": "15848:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                                  "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                                }
                              },
                              "id": 5367,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15848:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 5368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15869:1:14",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "15848:22:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15836:35:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                            "typeString": "struct ERC20Base.Checkpoint storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15801:70:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5372,
                              "name": "oldCheckPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5364,
                              "src": "15885:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                                "typeString": "struct ERC20Base.Checkpoint storage pointer"
                              }
                            },
                            "id": 5374,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4600,
                            "src": "15885:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5376,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5317,
                                "src": "15915:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15907:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": "uint128"
                            },
                            "id": 5377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15907:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "15885:37:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 5379,
                        "nodeType": "ExpressionStatement",
                        "src": "15885:37:14"
                      }
                    ]
                  },
                  "id": 5381,
                  "nodeType": "IfStatement",
                  "src": "15479:454:14",
                  "trueBody": {
                    "id": 5362,
                    "nodeType": "Block",
                    "src": "15576:205:14",
                    "statements": [
                      {
                        "assignments": [
                          5338
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5338,
                            "name": "newCheckPoint",
                            "nodeType": "VariableDeclaration",
                            "scope": 5362,
                            "src": "15590:32:14",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                              "typeString": "struct ERC20Base.Checkpoint"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 5337,
                              "name": "Checkpoint",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 4601,
                              "src": "15590:10:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                                "typeString": "struct ERC20Base.Checkpoint"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5344,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 5339,
                            "name": "checkpoints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5315,
                            "src": "15625:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                              "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                            }
                          },
                          "id": 5343,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 5342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15637:20:14",
                            "subExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 5340,
                                "name": "checkpoints",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5315,
                                "src": "15637:11:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                                  "typeString": "struct ERC20Base.Checkpoint storage ref[] storage pointer"
                                }
                              },
                              "id": 5341,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "15637:18:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15625:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Checkpoint_$4601_storage",
                            "typeString": "struct ERC20Base.Checkpoint storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15590:68:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5345,
                              "name": "newCheckPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5338,
                              "src": "15672:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                                "typeString": "struct ERC20Base.Checkpoint storage pointer"
                              }
                            },
                            "id": 5347,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fromBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4598,
                            "src": "15672:23:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5349,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7284,
                                  "src": "15706:5:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 5350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "15706:12:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15698:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": "uint128"
                            },
                            "id": 5351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15698:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "15672:47:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 5353,
                        "nodeType": "ExpressionStatement",
                        "src": "15672:47:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5354,
                              "name": "newCheckPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5338,
                              "src": "15733:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                                "typeString": "struct ERC20Base.Checkpoint storage pointer"
                              }
                            },
                            "id": 5356,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4600,
                            "src": "15733:19:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 5358,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5317,
                                "src": "15763:6:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 5357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15755:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": "uint128"
                            },
                            "id": 5359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15755:15:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "15733:37:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "id": 5361,
                        "nodeType": "ExpressionStatement",
                        "src": "15733:37:14"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev `updateValueAtNow` used to update the `balances` map and the\n  `totalSupplyHistory`\n @param checkpoints The history of data being updated\n @param _value The new number of tokens",
            "id": 5383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateValueAtNow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5315,
                  "name": "checkpoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 5383,
                  "src": "15413:32:14",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                    "typeString": "struct ERC20Base.Checkpoint[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 5313,
                      "name": "Checkpoint",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 4601,
                      "src": "15413:10:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Checkpoint_$4601_storage_ptr",
                        "typeString": "struct ERC20Base.Checkpoint"
                      }
                    },
                    "id": 5314,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "15413:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Checkpoint_$4601_storage_$dyn_storage_ptr",
                      "typeString": "struct ERC20Base.Checkpoint[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5317,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5383,
                  "src": "15447:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5316,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15447:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15412:47:14"
            },
            "returnParameters": {
              "id": 5319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15469:0:14"
            },
            "scope": 5472,
            "src": "15387:552:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5421,
              "nodeType": "Block",
              "src": "16023:195:14",
              "statements": [
                {
                  "body": {
                    "id": 5419,
                    "nodeType": "Block",
                    "src": "16081:131:14",
                    "statements": [
                      {
                        "assignments": [
                          5404
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5404,
                            "name": "t",
                            "nodeType": "VariableDeclaration",
                            "scope": 5419,
                            "src": "16091:23:14",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TransferEventCallBack_$4556",
                              "typeString": "contract TransferEventCallBack"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 5403,
                              "name": "TransferEventCallBack",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 4556,
                              "src": "16091:21:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TransferEventCallBack_$4556",
                                "typeString": "contract TransferEventCallBack"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 5410,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5406,
                                "name": "transferListeners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4572,
                                "src": "16139:17:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 5408,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5407,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5393,
                                "src": "16157:1:14",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16139:20:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5405,
                            "name": "TransferEventCallBack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4556,
                            "src": "16117:21:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TransferEventCallBack_$4556_$",
                              "typeString": "type(contract TransferEventCallBack)"
                            }
                          },
                          "id": 5409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16117:43:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TransferEventCallBack_$4556",
                            "typeString": "contract TransferEventCallBack"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16091:69:14"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5414,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5385,
                              "src": "16183:5:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5415,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5387,
                              "src": "16190:3:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 5416,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5389,
                              "src": "16195:7:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 5411,
                              "name": "t",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5404,
                              "src": "16170:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TransferEventCallBack_$4556",
                                "typeString": "contract TransferEventCallBack"
                              }
                            },
                            "id": 5413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4555,
                            "src": "16170:12:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 5417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16170:33:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5418,
                        "nodeType": "ExpressionStatement",
                        "src": "16170:33:14"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5396,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5393,
                      "src": "16047:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 5397,
                        "name": "transferListeners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4572,
                        "src": "16051:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 5398,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16051:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16047:28:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5420,
                  "initializationExpression": {
                    "assignments": [
                      5393
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5393,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 5420,
                        "src": "16035:6:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5392,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16035:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 5395,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 5394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16044:1:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16035:10:14"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 5401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16077:3:14",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 5400,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5393,
                        "src": "16077:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5402,
                    "nodeType": "ExpressionStatement",
                    "src": "16077:3:14"
                  },
                  "nodeType": "ForStatement",
                  "src": "16031:181:14"
                }
              ]
            },
            "documentation": null,
            "id": 5422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onTransferDone",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5385,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 5422,
                  "src": "15969:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5384,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15969:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5387,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5422,
                  "src": "15984:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15984:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5389,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5422,
                  "src": "15997:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15997:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15968:45:14"
            },
            "returnParameters": {
              "id": 5391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16023:0:14"
            },
            "scope": 5472,
            "src": "15945:273:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5437,
              "nodeType": "Block",
              "src": "16278:83:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5430,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5424,
                        "src": "16309:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5427,
                        "name": "transferListeners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4572,
                        "src": "16286:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 5429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16286:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 5431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16286:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5432,
                  "nodeType": "ExpressionStatement",
                  "src": "16286:29:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5434,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5424,
                        "src": "16348:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5433,
                      "name": "NewTransferListener",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4592,
                      "src": "16328:19:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16328:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5436,
                  "nodeType": "EmitStatement",
                  "src": "16323:31:14"
                }
              ]
            },
            "documentation": null,
            "id": 5438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addTransferListener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5424,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 5438,
                  "src": "16254:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16254:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16253:15:14"
            },
            "returnParameters": {
              "id": 5426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16278:0:14"
            },
            "scope": 5472,
            "src": "16224:137:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5453,
              "nodeType": "Block",
              "src": "16422:88:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5446,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5440,
                        "src": "16455:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5443,
                        "name": "transferListeners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4572,
                        "src": "16430:17:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 5445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6197,
                      "src": "16430:24:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address) returns (bool)"
                      }
                    },
                    "id": 5447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16430:31:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5448,
                  "nodeType": "ExpressionStatement",
                  "src": "16430:31:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5450,
                        "name": "_addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5440,
                        "src": "16497:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5449,
                      "name": "RemoveTransferListener",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4596,
                      "src": "16474:22:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16474:29:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5452,
                  "nodeType": "EmitStatement",
                  "src": "16469:34:14"
                }
              ]
            },
            "documentation": null,
            "id": 5454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeTransferListener",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5440,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 5454,
                  "src": "16399:13:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16399:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16398:15:14"
            },
            "returnParameters": {
              "id": 5442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16422:0:14"
            },
            "scope": 5472,
            "src": "16366:144:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5470,
              "nodeType": "Block",
              "src": "16640:37:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 5463,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5456,
                        "src": "16657:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 5464,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5458,
                        "src": "16661:1:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16657:5:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 5467,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5458,
                      "src": "16669:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "16657:13:14",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 5466,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5456,
                      "src": "16665:1:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5462,
                  "id": 5469,
                  "nodeType": "Return",
                  "src": "16650:20:14"
                }
              ]
            },
            "documentation": "@dev Helper function to return a min betwen the two uints",
            "id": 5471,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5456,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 5471,
                  "src": "16595:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5455,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16595:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5458,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 5471,
                  "src": "16603:6:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5457,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16603:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16594:16:14"
            },
            "returnParameters": {
              "id": 5462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5461,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5471,
                  "src": "16634:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5460,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16634:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16633:6:14"
            },
            "scope": 5472,
            "src": "16582:95:14",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 5473,
        "src": "358:16435:14"
      }
    ],
    "src": "0:16794:14"
  },
  "bytecode": "60c0604052600760808190527f4754545f302e310000000000000000000000000000000000000000000000000060a0908152620000409160039190620001a8565b503480156200004e57600080fd5b506040516200116e3803806200116e833981810160405260c08110156200007457600080fd5b81516020830151604084018051929491938201926401000000008111156200009b57600080fd5b82016020810184811115620000af57600080fd5b8151640100000000811182820187101715620000ca57600080fd5b50506020820151604090920180519194929391640100000000811115620000f057600080fd5b820160208101848111156200010457600080fd5b81516401000000008111828201871017156200011f57600080fd5b505060209182015186519194509250620001409160009190870190620001a8565b506001805460ff191660ff8516179055815162000165906002906020850190620001a8565b50600580546001600160a01b0319166001600160a01b039790971696909617909555505050600655600b805460ff1916911515919091179055436007556200024d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001eb57805160ff19168380011785556200021b565b828001600101855582156200021b579182015b828111156200021b578251825591602001919060010190620001fe565b50620002299291506200022d565b5090565b6200024a91905b8082111562000229576000815560010162000234565b90565b610f11806200025d6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a9059cbb11610071578063a9059cbb1461030e578063bef97c871461033a578063c5bcc4f114610342578063cae9ca511461034a578063dd62ed3e1461040557610116565b806370a08231146102bb57806380a54001146102e157806395d89b41146102e9578063981b24d0146102f157610116565b806323b872dd116100e957806323b872dd146101fa578063313ce567146102305780634ee2cd7e1461024e57806354fd4d501461027a5780636aaa6a861461028257610116565b806306fdde031461011b578063095ea7b31461019857806317634514146101d857806318160ddd146101f2575b600080fd5b610123610433565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c4600480360360408110156101ae57600080fd5b506001600160a01b0381351690602001356104c1565b604080519115158252519081900360200190f35b6101e0610572565b60408051918252519081900360200190f35b6101e0610578565b6101c46004803603606081101561021057600080fd5b506001600160a01b03813581169160208101359091169060400135610589565b61023861060d565b6040805160ff9092168252519081900360200190f35b6101e06004803603604081101561026457600080fd5b506001600160a01b038135169060200135610616565b61012361075c565b61029f6004803603602081101561029857600080fd5b50356107b7565b604080516001600160a01b039092168252519081900360200190f35b6101e0600480360360208110156102d157600080fd5b50356001600160a01b03166107de565b61029f6107f2565b610123610801565b6101e06004803603602081101561030757600080fd5b5035610859565b6101c46004803603604081101561032457600080fd5b506001600160a01b038135169060200135610946565b6101c4610963565b6101e061096c565b6101c46004803603606081101561036057600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561039057600080fd5b8201836020820111156103a257600080fd5b803590602001918460018302840111640100000000831117156103c457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610972945050505050565b6101e06004803603604081101561041b57600080fd5b506001600160a01b0381358116916020013516610a72565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b95780601f1061048e576101008083540402835291602001916104b9565b820191906000526020600020905b81548152906001019060200180831161049c57829003601f168201915b505050505081565b600b5460009060ff166104d357600080fd5b81158061050157503360009081526009602090815260408083206001600160a01b0387168452909152902054155b61050a57600080fd5b3360008181526009602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b600061058343610859565b90505b90565b600b5460009060ff1661059b57600080fd5b6001600160a01b03841660009081526009602090815260408083203384529091529020548211156105ce57506000610606565b6001600160a01b0384166000908152600960209081526040808320338452909152902080548390039055610603848484610a9d565b90505b9392505050565b60015460ff1681565b6001600160a01b038216600090815260086020526040812054158061067057506001600160a01b0383166000908152600860205260408120805484929061065957fe5b6000918252602090912001546001600160801b0316115b15610733576005546001600160a01b03161561072b576005546006546001600160a01b0390911690634ee2cd7e9085906106ab908690610bcb565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b031681526020018281526020019250505060206040518083038186803b1580156106f857600080fd5b505afa15801561070c573d6000803e3d6000fd5b505050506040513d602081101561072257600080fd5b5051905061056c565b50600061056c565b6001600160a01b03831660009081526008602052604090206107559083610be1565b905061056c565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b95780601f1061048e576101008083540402835291602001916104b9565b600481815481106107c457fe5b6000918252602090912001546001600160a01b0316905081565b60006107ea8243610616565b90505b919050565b6005546001600160a01b031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104b95780601f1061048e576101008083540402835291602001916104b9565b600a54600090158061088c575081600a60008154811061087557fe5b6000918252602090912001546001600160801b0316115b15610934576005546001600160a01b03161561092c576005546006546001600160a01b039091169063981b24d0906108c5908590610bcb565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156108f957600080fd5b505afa15801561090d573d6000803e3d6000fd5b505050506040513d602081101561092357600080fd5b505190506107ed565b5060006107ed565b61093f600a83610be1565b90506107ed565b600b5460009060ff1661095857600080fd5b610606338484610a9d565b600b5460ff1681565b60065481565b600061097e84846104c1565b61098757600080fd5b604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b83811015610a015781810151838201526020016109e9565b50505050905090810190601f168015610a2e5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b506001979650505050505050565b6001600160a01b03918216600090815260096020908152604080832093909416825291909152205490565b600081610aac57506001610606565b4360065410610aba57600080fd5b6001600160a01b03831615801590610adb57506001600160a01b0383163014155b610ae457600080fd5b6000610af08543610616565b905082811015610b04576000915050610606565b6001600160a01b0385166000908152600860205260409020610b2890848303610d11565b6000610b348543610616565b9050808482011015610b4557600080fd5b6001600160a01b0385166000908152600860205260409020610b6990828601610d11565b846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3610bbf868686610dea565b50600195945050505050565b6000818310610bda5781610606565b5090919050565b8154600090610bf25750600061056c565b825483906000198101908110610c0457fe5b6000918252602090912001546001600160801b03168210610c5457825483906000198101908110610c3157fe5b600091825260209091200154600160801b90046001600160801b0316905061056c565b82600081548110610c6157fe5b6000918252602090912001546001600160801b0316821015610c855750600061056c565b8254600090600019015b81811115610ce0576000600260018385010104905084868281548110610cb157fe5b6000918252602090912001546001600160801b031611610cd357809250610cda565b6001810391505b50610c8f565b848281548110610cec57fe5b600091825260209091200154600160801b90046001600160801b031695945050505050565b81541580610d4557508154439083906000198101908110610d2e57fe5b6000918252602090912001546001600160801b0316105b15610dac5781546000908390610d5e8260018301610e95565b81548110610d6857fe5b600091825260209091200180546001600160801b03848116600160801b024382166fffffffffffffffffffffffffffffffff19909316929092171617905550610de6565b815460009083906000198101908110610dc157fe5b600091825260209091200180546001600160801b03808516600160801b029116179055505b5050565b60005b600454811015610e8f57600060048281548110610e0657fe5b600091825260208220015460408051634a39314960e01b81526001600160a01b03898116600483015288811660248301526044820188905291519190921693508392634a393149926064808201939182900301818387803b158015610e6a57600080fd5b505af1158015610e7e573d6000803e3d6000fd5b505060019093019250610ded915050565b50505050565b815481835581811115610eb957600083815260209020610eb9918101908301610ebe565b505050565b61058691905b80821115610ed85760008155600101610ec4565b509056fea265627a7a723058203c13f951cd797d8d2c9b1498f5c53c5c31f4cd7e2c29ce24691137700713e28564736f6c634300050a0032",
  "bytecodeSha1": "dd4d4cef6a2bc83d80b2dc62093c34f86aa05b4f",
  "compiler": {
    "evm_version": "petersburg",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.10+commit.5a6ea5b1"
  },
  "contractName": "ERC20Base",
  "coverageMap": {
    "branches": {
      "14": {
        "ERC20Base.approve": {
          "45": [
            7467,
            7483,
            true
          ]
        },
        "ERC20Base.approveAndCall": {
          "51": [
            9118,
            9153,
            true
          ]
        },
        "ERC20Base.balanceOfAt": {
          "48": [
            10428,
            10462,
            false
          ]
        },
        "ERC20Base.doTransfer": {
          "52": [
            5478,
            5490,
            false
          ],
          "53": [
            5545,
            5579,
            true
          ],
          "54": [
            5920,
            5949,
            false
          ],
          "55": [
            6364,
            6412,
            true
          ]
        },
        "ERC20Base.getValueAt": {
          "57": [
            14599,
            14652,
            false
          ],
          "58": [
            14726,
            14759,
            false
          ],
          "59": [
            14986,
            15020,
            false
          ]
        },
        "ERC20Base.min": {
          "56": [
            16657,
            16662,
            true
          ]
        },
        "ERC20Base.totalSupplyAt": {
          "49": [
            11577,
            11611,
            false
          ]
        },
        "ERC20Base.transfer": {
          "50": [
            4204,
            4220,
            true
          ]
        },
        "ERC20Base.transferFrom": {
          "46": [
            4746,
            4762,
            true
          ],
          "47": [
            4836,
            4872,
            false
          ]
        }
      },
      "19": {}
    },
    "statements": {
      "14": {
        "ERC20Base.allowance": {
          "22": [
            8415,
            8447
          ]
        },
        "ERC20Base.approve": {
          "0": [
            7459,
            7484
          ],
          "1": [
            7798,
            7861
          ],
          "2": [
            7872,
            7911
          ],
          "3": [
            7921,
            7965
          ],
          "4": [
            7975,
            7986
          ]
        },
        "ERC20Base.approveAndCall": {
          "19": [
            9110,
            9154
          ],
          "20": [
            9165,
            9295
          ],
          "21": [
            9306,
            9317
          ]
        },
        "ERC20Base.balanceOf": {
          "13": [
            6921,
            6961
          ]
        },
        "ERC20Base.balanceOfAt": {
          "10": [
            10482,
            10560
          ],
          "11": [
            10632,
            10640
          ],
          "12": [
            10760,
            10809
          ]
        },
        "ERC20Base.doTransfer": {
          "23": [
            5506,
            5517
          ],
          "24": [
            5537,
            5580
          ],
          "25": [
            5659,
            5713
          ],
          "26": [
            5965,
            5977
          ],
          "27": [
            6105,
            6169
          ],
          "28": [
            6356,
            6413
          ],
          "29": [
            6445,
            6505
          ],
          "30": [
            6596,
            6630
          ],
          "31": [
            6640,
            6675
          ],
          "32": [
            6685,
            6696
          ]
        },
        "ERC20Base.getValueAt": {
          "34": [
            14535,
            14543
          ],
          "35": [
            14666,
            14712
          ],
          "36": [
            14773,
            14781
          ],
          "37": [
            15040,
            15049
          ],
          "38": [
            15088,
            15099
          ],
          "39": [
            15133,
            15162
          ]
        },
        "ERC20Base.min": {
          "33": [
            16650,
            16670
          ]
        },
        "ERC20Base.onTransferDone": {
          "43": [
            16170,
            16203
          ],
          "44": [
            16077,
            16080
          ]
        },
        "ERC20Base.totalSupply": {
          "5": [
            9508,
            9542
          ]
        },
        "ERC20Base.totalSupplyAt": {
          "14": [
            11631,
            11703
          ],
          "15": [
            11742,
            11750
          ],
          "16": [
            11874,
            11925
          ]
        },
        "ERC20Base.transfer": {
          "17": [
            4196,
            4221
          ],
          "18": [
            4231,
            4274
          ]
        },
        "ERC20Base.transferFrom": {
          "6": [
            4738,
            4763
          ],
          "7": [
            4886,
            4898
          ],
          "8": [
            4908,
            4945
          ],
          "9": [
            4955,
            4993
          ]
        },
        "ERC20Base.updateValueAtNow": {
          "40": [
            15672,
            15719
          ],
          "41": [
            15733,
            15770
          ],
          "42": [
            15885,
            15922
          ]
        }
      },
      "19": {}
    }
  },
  "dependencies": [
    "AddressArray",
    "ApproveAndCallFallBack",
    "TransferEventCallBack"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a9059cbb11610071578063a9059cbb1461030e578063bef97c871461033a578063c5bcc4f114610342578063cae9ca511461034a578063dd62ed3e1461040557610116565b806370a08231146102bb57806380a54001146102e157806395d89b41146102e9578063981b24d0146102f157610116565b806323b872dd116100e957806323b872dd146101fa578063313ce567146102305780634ee2cd7e1461024e57806354fd4d501461027a5780636aaa6a861461028257610116565b806306fdde031461011b578063095ea7b31461019857806317634514146101d857806318160ddd146101f2575b600080fd5b610123610433565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c4600480360360408110156101ae57600080fd5b506001600160a01b0381351690602001356104c1565b604080519115158252519081900360200190f35b6101e0610572565b60408051918252519081900360200190f35b6101e0610578565b6101c46004803603606081101561021057600080fd5b506001600160a01b03813581169160208101359091169060400135610589565b61023861060d565b6040805160ff9092168252519081900360200190f35b6101e06004803603604081101561026457600080fd5b506001600160a01b038135169060200135610616565b61012361075c565b61029f6004803603602081101561029857600080fd5b50356107b7565b604080516001600160a01b039092168252519081900360200190f35b6101e0600480360360208110156102d157600080fd5b50356001600160a01b03166107de565b61029f6107f2565b610123610801565b6101e06004803603602081101561030757600080fd5b5035610859565b6101c46004803603604081101561032457600080fd5b506001600160a01b038135169060200135610946565b6101c4610963565b6101e061096c565b6101c46004803603606081101561036057600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561039057600080fd5b8201836020820111156103a257600080fd5b803590602001918460018302840111640100000000831117156103c457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610972945050505050565b6101e06004803603604081101561041b57600080fd5b506001600160a01b0381358116916020013516610a72565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b95780601f1061048e576101008083540402835291602001916104b9565b820191906000526020600020905b81548152906001019060200180831161049c57829003601f168201915b505050505081565b600b5460009060ff166104d357600080fd5b81158061050157503360009081526009602090815260408083206001600160a01b0387168452909152902054155b61050a57600080fd5b3360008181526009602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b600061058343610859565b90505b90565b600b5460009060ff1661059b57600080fd5b6001600160a01b03841660009081526009602090815260408083203384529091529020548211156105ce57506000610606565b6001600160a01b0384166000908152600960209081526040808320338452909152902080548390039055610603848484610a9d565b90505b9392505050565b60015460ff1681565b6001600160a01b038216600090815260086020526040812054158061067057506001600160a01b0383166000908152600860205260408120805484929061065957fe5b6000918252602090912001546001600160801b0316115b15610733576005546001600160a01b03161561072b576005546006546001600160a01b0390911690634ee2cd7e9085906106ab908690610bcb565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b031681526020018281526020019250505060206040518083038186803b1580156106f857600080fd5b505afa15801561070c573d6000803e3d6000fd5b505050506040513d602081101561072257600080fd5b5051905061056c565b50600061056c565b6001600160a01b03831660009081526008602052604090206107559083610be1565b905061056c565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156104b95780601f1061048e576101008083540402835291602001916104b9565b600481815481106107c457fe5b6000918252602090912001546001600160a01b0316905081565b60006107ea8243610616565b90505b919050565b6005546001600160a01b031681565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156104b95780601f1061048e576101008083540402835291602001916104b9565b600a54600090158061088c575081600a60008154811061087557fe5b6000918252602090912001546001600160801b0316115b15610934576005546001600160a01b03161561092c576005546006546001600160a01b039091169063981b24d0906108c5908590610bcb565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156108f957600080fd5b505afa15801561090d573d6000803e3d6000fd5b505050506040513d602081101561092357600080fd5b505190506107ed565b5060006107ed565b61093f600a83610be1565b90506107ed565b600b5460009060ff1661095857600080fd5b610606338484610a9d565b600b5460ff1681565b60065481565b600061097e84846104c1565b61098757600080fd5b604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b83811015610a015781810151838201526020016109e9565b50505050905090810190601f168015610a2e5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610a5057600080fd5b505af1158015610a64573d6000803e3d6000fd5b506001979650505050505050565b6001600160a01b03918216600090815260096020908152604080832093909416825291909152205490565b600081610aac57506001610606565b4360065410610aba57600080fd5b6001600160a01b03831615801590610adb57506001600160a01b0383163014155b610ae457600080fd5b6000610af08543610616565b905082811015610b04576000915050610606565b6001600160a01b0385166000908152600860205260409020610b2890848303610d11565b6000610b348543610616565b9050808482011015610b4557600080fd5b6001600160a01b0385166000908152600860205260409020610b6990828601610d11565b846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a3610bbf868686610dea565b50600195945050505050565b6000818310610bda5781610606565b5090919050565b8154600090610bf25750600061056c565b825483906000198101908110610c0457fe5b6000918252602090912001546001600160801b03168210610c5457825483906000198101908110610c3157fe5b600091825260209091200154600160801b90046001600160801b0316905061056c565b82600081548110610c6157fe5b6000918252602090912001546001600160801b0316821015610c855750600061056c565b8254600090600019015b81811115610ce0576000600260018385010104905084868281548110610cb157fe5b6000918252602090912001546001600160801b031611610cd357809250610cda565b6001810391505b50610c8f565b848281548110610cec57fe5b600091825260209091200154600160801b90046001600160801b031695945050505050565b81541580610d4557508154439083906000198101908110610d2e57fe5b6000918252602090912001546001600160801b0316105b15610dac5781546000908390610d5e8260018301610e95565b81548110610d6857fe5b600091825260209091200180546001600160801b03848116600160801b024382166fffffffffffffffffffffffffffffffff19909316929092171617905550610de6565b815460009083906000198101908110610dc157fe5b600091825260209091200180546001600160801b03808516600160801b029116179055505b5050565b60005b600454811015610e8f57600060048281548110610e0657fe5b600091825260208220015460408051634a39314960e01b81526001600160a01b03898116600483015288811660248301526044820188905291519190921693508392634a393149926064808201939182900301818387803b158015610e6a57600080fd5b505af1158015610e7e573d6000803e3d6000fd5b505060019093019250610ded915050565b50505050565b815481835581811115610eb957600083815260209020610eb9918101908301610ebe565b505050565b61058691905b80821115610ed85760008155600101610ec4565b509056fea265627a7a723058203c13f951cd797d8d2c9b1498f5c53c5c31f4cd7e2c29ce24691137700713e28564736f6c634300050a0032",
  "deployedSourceMap": "358:16435:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:16435:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;383:18:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7367:626;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7367:626:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1932:25;;;:::i;:::-;;;;;;;;;;;;;;;;9448:101;;;:::i;4631:369::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4631:369:14;;;;;;;;;;;;;;;;;:::i;455:21::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9903:923;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9903:923:14;;;;;;;;:::i;601:33::-;;;:::i;712:34::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;712:34:14;;:::i;:::-;;;;-1:-1:-1;;;;;712:34:14;;;;;;;;;;;;;;6838:130;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6838:130:14;-1:-1:-1;;;;;6838:130:14;;:::i;1633:28::-;;;:::i;536:20::-;;;:::i;11039:903::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11039:903:14;;:::i;4108:173::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4108:173:14;;;;;;;;:::i;2511:28::-;;;:::i;1818:31::-;;;:::i;8971:353::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;8971:353:14;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8971:353:14;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8971:353:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8971:353:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8971:353:14;;-1:-1:-1;8971:353:14;;-1:-1:-1;;;;;8971:353:14:i;8312:142::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8312:142:14;;;;;;;;;;:::i;383:18::-;;;;;;;;;;;;;;;-1:-1:-1;;383:18:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7367:626::-;7467:16;;7435:12;;7467:16;;7459:25;;;;;;7807:12;;;7806:54;;-1:-1:-1;7833:10:14;7825:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;7825:29:14;;;;;;;;;;:34;7806:54;7798:63;;;;;;7880:10;7872:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;7872:29:14;;;;;;;;;;;;:39;;;7926;;;;;;;7872:29;;7880:10;7926:39;;;;;;;;;;;-1:-1:-1;7982:4:14;7367:626;;;;;:::o;1932:25::-;;;;:::o;9448:101::-;9492:4;9515:27;9529:12;9515:13;:27::i;:::-;9508:34;;9448:101;;:::o;4631:369::-;4746:16;;4714:12;;4746:16;;4738:25;;;;;;-1:-1:-1;;;;;4836:14:14;;;;;;:7;:14;;;;;;;;4851:10;4836:26;;;;;;;;:36;-1:-1:-1;4832:66:14;;;-1:-1:-1;4893:5:14;4886:12;;4832:66;-1:-1:-1;;;;;4908:14:14;;;;;;:7;:14;;;;;;;;4923:10;4908:26;;;;;;;:37;;;;;;;4962:31;4916:5;4980:3;4938:7;4962:10;:31::i;:::-;4955:38;;4631:369;;;;;;:::o;455:21::-;;;;;;:::o;9903:923::-;-1:-1:-1;;;;;10329:16:14;;9980:4;10329:16;;;:8;:16;;;;;:23;:28;;10328:80;;-1:-1:-1;;;;;;10363:16:14;;;;;;:8;:16;;;;;:19;;10395:12;;10363:16;:19;;;;;;;;;;;;;:29;-1:-1:-1;;;;;10363:29:14;:44;10328:80;10324:496;;;10436:11;;-1:-1:-1;;;;;10436:11:14;10428:34;10424:231;;10489:11;;10539:19;;-1:-1:-1;;;;;10489:11:14;;;;:23;;10513:6;;10521:38;;10525:12;;10521:3;:38::i;:::-;10489:71;;;;;;;;;;;;;-1:-1:-1;;;;;10489:71:14;-1:-1:-1;;;;;10489:71:14;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10489:71:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10489:71:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10489:71:14;;-1:-1:-1;10482:78:14;;10424:231;-1:-1:-1;10639:1:14;10632:8;;10324:496;-1:-1:-1;;;;;10778:16:14;;;;;;:8;:16;;;;;10767:42;;10796:12;10767:10;:42::i;:::-;10760:49;;;;601:33;;;;;;;;;;;;;;;-1:-1:-1;;601:33:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;712:34;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;712:34:14;;-1:-1:-1;712:34:14;:::o;6838:130::-;6894:15;6928:33;6940:6;6948:12;6928:11;:33::i;:::-;6921:40;;6838:130;;;;:::o;1633:28::-;;;-1:-1:-1;;;;;1633:28:14;;:::o;536:20::-;;;;;;;;;;;;;;-1:-1:-1;;536:20:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11039:903;11474:18;:25;11101:4;;11474:30;;11473:84;;;11544:12;11510:18;11529:1;11510:21;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;11510:31:14;:46;11473:84;11469:467;;;11585:11;;-1:-1:-1;;;;;11585:11:14;11577:34;11573:192;;11638:11;;11682:19;;-1:-1:-1;;;;;11638:11:14;;;;:25;;11664:38;;11668:12;;11664:3;:38::i;:::-;11638:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11638:65:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11638:65:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11638:65:14;;-1:-1:-1;11631:72:14;;11573:192;-1:-1:-1;11749:1:14;11742:8;;11469:467;11881:44;11892:18;11912:12;11881:10;:44::i;:::-;11874:51;;;;4108:173;4204:16;;4172:12;;4204:16;;4196:25;;;;;;4238:36;4249:10;4261:3;4266:7;4238:10;:36::i;2511:28::-;;;;;;:::o;1818:31::-;;;;:::o;8971:353::-;9086:12;9118:35;9134:8;9145:7;9118;:35::i;:::-;9110:44;;;;;;9165:130;;-1:-1:-1;;;9165:130:14;;9203:10;9165:130;;;;;;;;;;;;9256:4;9165:130;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9165:24:14;;;;;9203:10;9227:7;;9256:4;9275:10;;9165:130;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9165:130:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9165:130:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;9313:4:14;;8971:353;-1:-1:-1;;;;;;;8971:353:14:o;8312:142::-;-1:-1:-1;;;;;8422:15:14;;;8386:17;8422:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;8312:142::o;5379:1324::-;5458:4;5478:12;5474:54;;-1:-1:-1;5513:4:14;5506:11;;5474:54;5567:12;5545:19;;:34;5537:43;;;;;;-1:-1:-1;;;;;5668:17:14;;;;;;5667:45;;-1:-1:-1;;;;;;5691:20:14;;5706:4;5691:20;;5667:45;5659:54;;;;;;5844:27;5874:32;5886:5;5893:12;5874:11;:32::i;:::-;5844:62;;5942:7;5920:19;:29;5916:72;;;5972:5;5965:12;;;;;5916:72;-1:-1:-1;;;;;6122:15:14;;;;;;:8;:15;;;;;6105:64;;6139:29;;;6105:16;:64::i;:::-;6288:25;6316:30;6328:3;6333:12;6316:11;:30::i;:::-;6288:58;;6395:17;6384:7;6364:17;:27;:48;;6356:57;;;;;;-1:-1:-1;;;;;6462:13:14;;;;;;:8;:13;;;;;6445:60;;6477:27;;;6445:16;:60::i;:::-;6617:3;-1:-1:-1;;;;;6601:29:14;6610:5;-1:-1:-1;;;;;6601:29:14;;6622:7;6601:29;;;;;;;;;;;;;;;;;;6640:35;6655:5;6662:3;6667:7;6640:14;:35::i;:::-;-1:-1:-1;6692:4:14;;5379:1324;-1:-1:-1;;;;;5379:1324:14:o;16582:95::-;16634:4;16661:1;16657;:5;:13;;16669:1;16657:13;;;-1:-1:-1;16665:1:14;;16582:95;-1:-1:-1;16582:95:14:o;14388:781::-;14498:18;;14478:4;;14494:49;;-1:-1:-1;14542:1:14;14535:8;;14494:49;14621:18;;14609:11;;-1:-1:-1;;14621:20:14;;;14609:33;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;14609:43:14;14599:53;;14595:117;;14685:18;;14673:11;;-1:-1:-1;;14685:20:14;;;14673:33;;;;;;;;;;;;;;;:39;-1:-1:-1;;;14673:39:14;;-1:-1:-1;;;;;14673:39:14;;-1:-1:-1;14666:46:14;;14595:117;14735:11;14747:1;14735:14;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;14735:24:14;14726:33;;14722:59;;;-1:-1:-1;14780:1:14;14773:8;;14722:59;14876:18;;14843:8;;-1:-1:-1;;14876:20:14;14906:218;14919:3;14913;:9;14906:218;;;14938:8;14967:1;14962;14950:9;;;:13;14949:19;14938:30;;15014:6;14986:11;14998:3;14986:16;;;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;14986:26:14;:34;14982:132;;15046:3;15040:9;;14982:132;;;15098:1;15094:3;:5;15088:11;;14982:132;14906:218;;;;15140:11;15152:3;15140:16;;;;;;;;;;;;;;;;;:22;-1:-1:-1;;;15140:22:14;;-1:-1:-1;;;;;15140:22:14;;14388:781;-1:-1:-1;;;;;14388:781:14:o;15387:552::-;15484:18;;:23;;15483:91;;-1:-1:-1;15525:18:14;;15561:12;;15513:11;;-1:-1:-1;;15525:22:14;;;15513:35;;;;;;;;;;;;;;;:45;-1:-1:-1;;;;;15513:45:14;:60;15483:91;15479:454;;;15637:20;;15590:32;;15625:11;;15637:20;15625:11;15637:20;;;;:::i;:::-;15625:33;;;;;;;;;;;;;;;;;15672:47;;-1:-1:-1;;;;;15733:37:14;;;-1:-1:-1;;;15733:37:14;15706:12;15672:47;;-1:-1:-1;;15672:47:14;;;;;;;15733:37;;;;-1:-1:-1;15479:454:14;;;15848:18;;15801:32;;15836:11;;-1:-1:-1;;15848:22:14;;;15836:35;;;;;;;;;;;;;;;15885:37;;-1:-1:-1;;;;;15885:37:14;;;-1:-1:-1;;;15885:37:14;;;;;;-1:-1:-1;15479:454:14;15387:552;;:::o;15945:273::-;16035:6;16031:181;16051:17;:24;16047:28;;16031:181;;;16091:23;16139:17;16157:1;16139:20;;;;;;;;;;;;;;;;;16170:33;;;-1:-1:-1;;;16170:33:14;;-1:-1:-1;;;;;16170:33:14;;;;;;;;;;;;;;;;;;;;;;16139:20;;;;;-1:-1:-1;16139:20:14;;16170:12;;:33;;;;;;;;;;;16139:20;;16170:33;;;5:2:-1;;;;30:1;27;20:12;5:2;16170:33:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;16077:3:14;;;;;-1:-1:-1;16031:181:14;;-1:-1:-1;;16031:181:14;;;15945:273;;;:::o;358:16435::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "allowance(address,address)": {
        "details": "This function makes it easy to read the `allowed[]` map",
        "params": {
          "_owner": "The address of the account that owns the token",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "Amount of remaining tokens of _owner that _spender is allowed  to spend"
      },
      "approve(address,uint256)": {
        "notice": "`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer",
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "True if the approval was successful"
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two",
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the contract able to transfer the tokens"
        },
        "return": "True if the function call was successful"
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "The address that's balance is being requested"
        },
        "return": "The balance of `_owner` at the current block"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of `_owner` at a specific `_blockNumber`",
        "notice": "/////////////",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_owner": "The address from which the balance will be retrieved"
        },
        "return": "The balance at `_blockNumber`"
      },
      "constructor": {
        "params": {
          "_decimalUnits": "Number of decimals of the new token",
          "_parentSnapShotBlock": "Block of the parent token that will  determine the initial distribution of the clone token, set to 0 if it  is a new token",
          "_parentToken": "Address of the parent token, set to 0x0 if it is a  new token",
          "_tokenName": "Name of the new token",
          "_tokenSymbol": "Token Symbol for the new token",
          "_transfersEnabled": "If true, tokens will be able to be transferred"
        }
      },
      "totalSupply()": {
        "details": "This function makes it easy to get the total number of tokens",
        "return": "The total number of tokens"
      },
      "totalSupplyAt(uint256)": {
        "notice": "Total amount of tokens at a specific `_blockNumber`.",
        "params": {
          "_blockNumber": "The block number when the totalSupply is queried"
        },
        "return": "The total amount of tokens at `_blockNumber`"
      },
      "transfer(address,uint256)": {
        "notice": "////////////////Send `_amount` tokens to `_to` from `msg.sender`",
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_to": "The address of the recipient"
        },
        "return": "Whether the transfer was successful or not"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`",
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_from": "The address holding the tokens being transferred",
          "_to": "The address of the recipient"
        },
        "return": "True if the transfer was successful"
      }
    }
  },
  "offset": [
    358,
    16793
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0xBEF97C87 EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xC5BCC4F1 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x405 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x2F1 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x4EE2CD7E EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x6AAA6A86 EQ PUSH2 0x282 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x17634514 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x589 JUMP JUMPDEST PUSH2 0x238 PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x616 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x29F PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x859 JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x946 JUMP JUMPDEST PUSH2 0x1C4 PUSH2 0x963 JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x96C JUMP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x972 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x501 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO JUMPDEST PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x583 NUMBER PUSH2 0x859 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x5CE JUMPI POP PUSH1 0x0 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x603 DUP5 DUP5 DUP5 PUSH2 0xA9D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO DUP1 PUSH2 0x670 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x659 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x733 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x72B JUMPI PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4EE2CD7E SWAP1 DUP6 SWAP1 PUSH2 0x6AB SWAP1 DUP7 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x56C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x755 SWAP1 DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x56C JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7C4 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 NUMBER PUSH2 0x616 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND DUP5 SWAP1 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x4B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 ISZERO DUP1 PUSH2 0x88C JUMPI POP DUP2 PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x875 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT JUMPDEST ISZERO PUSH2 0x934 JUMPI PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x92C JUMPI PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x981B24D0 SWAP1 PUSH2 0x8C5 SWAP1 DUP6 SWAP1 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x7ED JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x7ED JUMP JUMPDEST PUSH2 0x93F PUSH1 0xA DUP4 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7ED JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x958 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x606 CALLER DUP5 DUP5 PUSH2 0xA9D JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x97E DUP5 DUP5 PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8F4FFCB1 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x24 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x44 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x64 DUP6 ADD SWAP1 DUP2 MSTORE DUP7 MLOAD PUSH1 0x84 DUP7 ADD MSTORE DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP6 PUSH4 0x8F4FFCB1 SWAP6 SWAP5 DUP11 SWAP5 SWAP4 DUP11 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0xA4 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA01 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA2E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xAAC JUMPI POP PUSH1 0x1 PUSH2 0x606 JUMP JUMPDEST NUMBER PUSH1 0x6 SLOAD LT PUSH2 0xABA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xADB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAF0 DUP6 NUMBER PUSH2 0x616 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB28 SWAP1 DUP5 DUP4 SUB PUSH2 0xD11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB34 DUP6 NUMBER PUSH2 0x616 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 DUP3 ADD LT ISZERO PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB69 SWAP1 DUP3 DUP7 ADD PUSH2 0xD11 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBBF DUP7 DUP7 DUP7 PUSH2 0xDEA JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xBDA JUMPI DUP2 PUSH2 0x606 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xBF2 JUMPI POP PUSH1 0x0 PUSH2 0x56C JUMP JUMPDEST DUP3 SLOAD DUP4 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xC04 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 LT PUSH2 0xC54 JUMPI DUP3 SLOAD DUP4 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xC31 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 POP PUSH2 0x56C JUMP JUMPDEST DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xC61 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP3 LT ISZERO PUSH2 0xC85 JUMPI POP PUSH1 0x0 PUSH2 0x56C JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x0 NOT ADD JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 DUP4 DUP6 ADD ADD DIV SWAP1 POP DUP5 DUP7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCB1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT PUSH2 0xCD3 JUMPI DUP1 SWAP3 POP PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x1 DUP2 SUB SWAP2 POP JUMPDEST POP PUSH2 0xC8F JUMP JUMPDEST DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCEC JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 SLOAD ISZERO DUP1 PUSH2 0xD45 JUMPI POP DUP2 SLOAD NUMBER SWAP1 DUP4 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xD2E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT JUMPDEST ISZERO PUSH2 0xDAC JUMPI DUP2 SLOAD PUSH1 0x0 SWAP1 DUP4 SWAP1 PUSH2 0xD5E DUP3 PUSH1 0x1 DUP4 ADD PUSH2 0xE95 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD68 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x80 SHL MUL NUMBER DUP3 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR AND OR SWAP1 SSTORE POP PUSH2 0xDE6 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP4 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0xDC1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP1 DUP6 AND PUSH1 0x1 PUSH1 0x80 SHL MUL SWAP2 AND OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xE8F JUMPI PUSH1 0x0 PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xE06 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x4A393149 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP9 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP4 POP DUP4 SWAP3 PUSH4 0x4A393149 SWAP3 PUSH1 0x64 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0xDED SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0xEB9 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0xEBE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x586 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xED8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xEC4 JUMP JUMPDEST POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 EXTCODECOPY SGT 0xf9 MLOAD 0xcd PUSH26 0x7D8D2C9B1498F5C53C5C31F4CD7E2C29CE24691137700713E285 PUSH5 0x736F6C6343 STOP SDIV EXP STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "5": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "REVERT",
      "path": "14"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        358,
        16793
      ],
      "op": "POP",
      "path": "14"
    },
    "18": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "21": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "LT",
      "path": "14"
    },
    "22": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "26": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "29": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "SHR",
      "path": "14"
    },
    "32": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "33": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "GT",
      "path": "14"
    },
    "39": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "43": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "44": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "GT",
      "path": "14"
    },
    "50": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "54": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "55": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xA9059CBB"
    },
    "60": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "61": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x30E"
    },
    "64": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "65": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "66": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xBEF97C87"
    },
    "71": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "72": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x33A"
    },
    "75": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "76": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "77": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xC5BCC4F1"
    },
    "82": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "83": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x342"
    },
    "86": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "87": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "88": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xCAE9CA51"
    },
    "93": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "94": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x34A"
    },
    "97": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "98": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "99": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "105": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x405"
    },
    "108": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "109": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x116"
    },
    "112": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMP",
      "path": "14"
    },
    "113": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "114": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "115": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "121": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2BB"
    },
    "124": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "125": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "126": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x80A54001"
    },
    "131": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "132": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2E1"
    },
    "135": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "136": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "137": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "143": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2E9"
    },
    "146": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "147": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "148": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x981B24D0"
    },
    "153": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "154": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2F1"
    },
    "157": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "158": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x116"
    },
    "161": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMP",
      "path": "14"
    },
    "162": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "163": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "164": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "GT",
      "path": "14"
    },
    "170": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "174": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "175": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "181": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1FA"
    },
    "184": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "185": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "186": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "192": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x230"
    },
    "195": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "196": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "197": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4EE2CD7E"
    },
    "202": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "203": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x24E"
    },
    "206": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "207": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "208": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x54FD4D50"
    },
    "213": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "214": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x27A"
    },
    "217": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "218": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "219": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6AAA6A86"
    },
    "224": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "225": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x282"
    },
    "228": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "229": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x116"
    },
    "232": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMP",
      "path": "14"
    },
    "233": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "234": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "235": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x6FDDE03"
    },
    "240": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "241": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "245": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "246": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x95EA7B3"
    },
    "251": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "252": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x198"
    },
    "255": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "256": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "257": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x17634514"
    },
    "262": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "263": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1D8"
    },
    "266": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "267": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "268": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x18160DDD"
    },
    "273": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "EQ",
      "path": "14"
    },
    "274": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F2"
    },
    "277": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "278": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "279": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        358,
        16793
      ],
      "op": "REVERT",
      "path": "14"
    },
    "283": {
      "offset": [
        383,
        401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "284": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x123"
    },
    "287": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x433"
    },
    "290": {
      "fn": null,
      "jump": "i",
      "offset": [
        383,
        401
      ],
      "op": "JUMP",
      "path": "14"
    },
    "291": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "292": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "294": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "295": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "296": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "298": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "299": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP3",
      "path": "14"
    },
    "300": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "301": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "302": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "303": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP2",
      "path": "14"
    },
    "304": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "305": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "306": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "307": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "308": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "309": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "310": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "311": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "312": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "313": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "314": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "315": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "316": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "317": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP6",
      "path": "14"
    },
    "318": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "319": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "320": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "321": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "322": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "323": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "325": {
      "op": "JUMPDEST"
    },
    "326": {
      "op": "DUP4"
    },
    "327": {
      "op": "DUP2"
    },
    "328": {
      "op": "LT"
    },
    "329": {
      "op": "ISZERO"
    },
    "330": {
      "op": "PUSH2",
      "value": "0x15D"
    },
    "333": {
      "op": "JUMPI"
    },
    "334": {
      "op": "DUP2"
    },
    "335": {
      "op": "DUP2"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "op": "MLOAD"
    },
    "338": {
      "op": "DUP4"
    },
    "339": {
      "op": "DUP3"
    },
    "340": {
      "op": "ADD"
    },
    "341": {
      "op": "MSTORE"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "344": {
      "op": "ADD"
    },
    "345": {
      "op": "PUSH2",
      "value": "0x145"
    },
    "348": {
      "op": "JUMP"
    },
    "349": {
      "op": "JUMPDEST"
    },
    "350": {
      "op": "POP"
    },
    "351": {
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "352": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "353": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "354": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "355": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "356": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "357": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP2",
      "path": "14"
    },
    "358": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "359": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "360": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "362": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "AND",
      "path": "14"
    },
    "363": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "364": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "365": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x18A"
    },
    "368": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "369": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "370": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP3",
      "path": "14"
    },
    "371": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SUB",
      "path": "14"
    },
    "372": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "373": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "374": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "376": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "377": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "379": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SUB",
      "path": "14"
    },
    "380": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "383": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "EXP",
      "path": "14"
    },
    "384": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SUB",
      "path": "14"
    },
    "385": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "NOT",
      "path": "14"
    },
    "386": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "AND",
      "path": "14"
    },
    "387": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP2",
      "path": "14"
    },
    "388": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "389": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "391": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "392": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "393": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "394": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "395": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "396": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "397": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "398": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "399": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "400": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "402": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "403": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "404": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "405": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SUB",
      "path": "14"
    },
    "406": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "407": {
      "fn": null,
      "offset": [
        383,
        401
      ],
      "op": "RETURN",
      "path": "14"
    },
    "408": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "409": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C4"
    },
    "412": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "414": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "DUP1",
      "path": "14"
    },
    "415": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "416": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "SUB",
      "path": "14"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "419": {
      "op": "DUP2"
    },
    "420": {
      "op": "LT"
    },
    "421": {
      "op": "ISZERO"
    },
    "422": {
      "op": "PUSH2",
      "value": "0x1AE"
    },
    "425": {
      "op": "JUMPI"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "428": {
      "op": "DUP1"
    },
    "429": {
      "op": "REVERT"
    },
    "430": {
      "op": "JUMPDEST"
    },
    "431": {
      "op": "POP"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "438": {
      "op": "SHL"
    },
    "439": {
      "op": "SUB"
    },
    "440": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "DUP2",
      "path": "14"
    },
    "441": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "442": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "AND",
      "path": "14"
    },
    "443": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "444": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "446": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "ADD",
      "path": "14"
    },
    "447": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "448": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4C1"
    },
    "451": {
      "fn": "ERC20Base.approve",
      "jump": "i",
      "offset": [
        7367,
        7993
      ],
      "op": "JUMP",
      "path": "14"
    },
    "452": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "453": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "455": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "DUP1",
      "path": "14"
    },
    "456": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "457": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "458": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "459": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "460": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "DUP3",
      "path": "14"
    },
    "461": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "462": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "463": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "464": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "DUP2",
      "path": "14"
    },
    "465": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "466": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "SUB",
      "path": "14"
    },
    "467": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "469": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "ADD",
      "path": "14"
    },
    "470": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "471": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "RETURN",
      "path": "14"
    },
    "472": {
      "offset": [
        1932,
        1957
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "473": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E0"
    },
    "476": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x572"
    },
    "479": {
      "fn": "ERC20Base.approve",
      "jump": "i",
      "offset": [
        1932,
        1957
      ],
      "op": "JUMP",
      "path": "14"
    },
    "480": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "481": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "483": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "DUP1",
      "path": "14"
    },
    "484": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "485": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "486": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "DUP3",
      "path": "14"
    },
    "487": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "488": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "489": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "490": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "DUP2",
      "path": "14"
    },
    "491": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "492": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "SUB",
      "path": "14"
    },
    "493": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "495": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "ADD",
      "path": "14"
    },
    "496": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "497": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "RETURN",
      "path": "14"
    },
    "498": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9448,
        9549
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "499": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9448,
        9549
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E0"
    },
    "502": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9448,
        9549
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x578"
    },
    "505": {
      "fn": "ERC20Base.totalSupply",
      "jump": "i",
      "offset": [
        9448,
        9549
      ],
      "op": "JUMP",
      "path": "14"
    },
    "506": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "507": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C4"
    },
    "510": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "512": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "DUP1",
      "path": "14"
    },
    "513": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "514": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "SUB",
      "path": "14"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "517": {
      "op": "DUP2"
    },
    "518": {
      "op": "LT"
    },
    "519": {
      "op": "ISZERO"
    },
    "520": {
      "op": "PUSH2",
      "value": "0x210"
    },
    "523": {
      "op": "JUMPI"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "526": {
      "op": "DUP1"
    },
    "527": {
      "op": "REVERT"
    },
    "528": {
      "op": "JUMPDEST"
    },
    "529": {
      "op": "POP"
    },
    "530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "536": {
      "op": "SHL"
    },
    "537": {
      "op": "SUB"
    },
    "538": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "DUP2",
      "path": "14"
    },
    "539": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "540": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "DUP2",
      "path": "14"
    },
    "541": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "AND",
      "path": "14"
    },
    "542": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "543": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "545": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "DUP2",
      "path": "14"
    },
    "546": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "ADD",
      "path": "14"
    },
    "547": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "548": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "549": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "550": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "AND",
      "path": "14"
    },
    "551": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "552": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "554": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "ADD",
      "path": "14"
    },
    "555": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "556": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x589"
    },
    "559": {
      "fn": "ERC20Base.transferFrom",
      "jump": "i",
      "offset": [
        4631,
        5000
      ],
      "op": "JUMP",
      "path": "14"
    },
    "560": {
      "offset": [
        455,
        476
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "561": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x238"
    },
    "564": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x60D"
    },
    "567": {
      "fn": "ERC20Base.transferFrom",
      "jump": "i",
      "offset": [
        455,
        476
      ],
      "op": "JUMP",
      "path": "14"
    },
    "568": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "569": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "571": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "DUP1",
      "path": "14"
    },
    "572": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "573": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "575": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "576": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "577": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "AND",
      "path": "14"
    },
    "578": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "DUP3",
      "path": "14"
    },
    "579": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "580": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "581": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "582": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "DUP2",
      "path": "14"
    },
    "583": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "584": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "SUB",
      "path": "14"
    },
    "585": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "587": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "ADD",
      "path": "14"
    },
    "588": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "589": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "RETURN",
      "path": "14"
    },
    "590": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "591": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E0"
    },
    "594": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "596": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "DUP1",
      "path": "14"
    },
    "597": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "598": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "SUB",
      "path": "14"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "601": {
      "op": "DUP2"
    },
    "602": {
      "op": "LT"
    },
    "603": {
      "op": "ISZERO"
    },
    "604": {
      "op": "PUSH2",
      "value": "0x264"
    },
    "607": {
      "op": "JUMPI"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "610": {
      "op": "DUP1"
    },
    "611": {
      "op": "REVERT"
    },
    "612": {
      "op": "JUMPDEST"
    },
    "613": {
      "op": "POP"
    },
    "614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "620": {
      "op": "SHL"
    },
    "621": {
      "op": "SUB"
    },
    "622": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "DUP2",
      "path": "14"
    },
    "623": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "624": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "AND",
      "path": "14"
    },
    "625": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "626": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "628": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "ADD",
      "path": "14"
    },
    "629": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "630": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x616"
    },
    "633": {
      "fn": "ERC20Base.balanceOfAt",
      "jump": "i",
      "offset": [
        9903,
        10826
      ],
      "op": "JUMP",
      "path": "14"
    },
    "634": {
      "offset": [
        601,
        634
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "635": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x123"
    },
    "638": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x75C"
    },
    "641": {
      "fn": "ERC20Base.balanceOfAt",
      "jump": "i",
      "offset": [
        601,
        634
      ],
      "op": "JUMP",
      "path": "14"
    },
    "642": {
      "offset": [
        712,
        746
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "643": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x29F"
    },
    "646": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "648": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "DUP1",
      "path": "14"
    },
    "649": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "650": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SUB",
      "path": "14"
    },
    "651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "653": {
      "op": "DUP2"
    },
    "654": {
      "op": "LT"
    },
    "655": {
      "op": "ISZERO"
    },
    "656": {
      "op": "PUSH2",
      "value": "0x298"
    },
    "659": {
      "op": "JUMPI"
    },
    "660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "662": {
      "op": "DUP1"
    },
    "663": {
      "op": "REVERT"
    },
    "664": {
      "op": "JUMPDEST"
    },
    "665": {
      "op": "POP"
    },
    "666": {
      "offset": [
        712,
        746
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "667": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7B7"
    },
    "670": {
      "fn": "ERC20Base.balanceOfAt",
      "jump": "i",
      "offset": [
        712,
        746
      ],
      "op": "JUMP",
      "path": "14"
    },
    "671": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "672": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "674": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "DUP1",
      "path": "14"
    },
    "675": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "682": {
      "op": "SHL"
    },
    "683": {
      "op": "SUB"
    },
    "684": {
      "offset": [
        712,
        746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "685": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "686": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "AND",
      "path": "14"
    },
    "687": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "688": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "689": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "690": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "691": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "DUP2",
      "path": "14"
    },
    "692": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "693": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SUB",
      "path": "14"
    },
    "694": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "696": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "ADD",
      "path": "14"
    },
    "697": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "698": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "RETURN",
      "path": "14"
    },
    "699": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "700": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E0"
    },
    "703": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "705": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "DUP1",
      "path": "14"
    },
    "706": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "707": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "SUB",
      "path": "14"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "710": {
      "op": "DUP2"
    },
    "711": {
      "op": "LT"
    },
    "712": {
      "op": "ISZERO"
    },
    "713": {
      "op": "PUSH2",
      "value": "0x2D1"
    },
    "716": {
      "op": "JUMPI"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "719": {
      "op": "DUP1"
    },
    "720": {
      "op": "REVERT"
    },
    "721": {
      "op": "JUMPDEST"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "730": {
      "op": "SHL"
    },
    "731": {
      "op": "SUB"
    },
    "732": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "AND",
      "path": "14"
    },
    "733": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7DE"
    },
    "736": {
      "fn": "ERC20Base.balanceOf",
      "jump": "i",
      "offset": [
        6838,
        6968
      ],
      "op": "JUMP",
      "path": "14"
    },
    "737": {
      "offset": [
        1633,
        1661
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "738": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        1633,
        1661
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x29F"
    },
    "741": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        1633,
        1661
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7F2"
    },
    "744": {
      "fn": "ERC20Base.balanceOf",
      "jump": "i",
      "offset": [
        1633,
        1661
      ],
      "op": "JUMP",
      "path": "14"
    },
    "745": {
      "offset": [
        536,
        556
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "746": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x123"
    },
    "749": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x801"
    },
    "752": {
      "fn": "ERC20Base.balanceOf",
      "jump": "i",
      "offset": [
        536,
        556
      ],
      "op": "JUMP",
      "path": "14"
    },
    "753": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11039,
        11942
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "754": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11039,
        11942
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E0"
    },
    "757": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11039,
        11942
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "759": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11039,
        11942
      ],
      "op": "DUP1",
      "path": "14"
    },
    "760": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11039,
        11942
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "761": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11039,
        11942
      ],
      "op": "SUB",
      "path": "14"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "764": {
      "op": "DUP2"
    },
    "765": {
      "op": "LT"
    },
    "766": {
      "op": "ISZERO"
    },
    "767": {
      "op": "PUSH2",
      "value": "0x307"
    },
    "770": {
      "op": "JUMPI"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "773": {
      "op": "DUP1"
    },
    "774": {
      "op": "REVERT"
    },
    "775": {
      "op": "JUMPDEST"
    },
    "776": {
      "op": "POP"
    },
    "777": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11039,
        11942
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "778": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11039,
        11942
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x859"
    },
    "781": {
      "fn": "ERC20Base.totalSupplyAt",
      "jump": "i",
      "offset": [
        11039,
        11942
      ],
      "op": "JUMP",
      "path": "14"
    },
    "782": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "783": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C4"
    },
    "786": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "788": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "DUP1",
      "path": "14"
    },
    "789": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "790": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "SUB",
      "path": "14"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "793": {
      "op": "DUP2"
    },
    "794": {
      "op": "LT"
    },
    "795": {
      "op": "ISZERO"
    },
    "796": {
      "op": "PUSH2",
      "value": "0x324"
    },
    "799": {
      "op": "JUMPI"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "802": {
      "op": "DUP1"
    },
    "803": {
      "op": "REVERT"
    },
    "804": {
      "op": "JUMPDEST"
    },
    "805": {
      "op": "POP"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "SUB"
    },
    "814": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "DUP2",
      "path": "14"
    },
    "815": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "816": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "AND",
      "path": "14"
    },
    "817": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "818": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "820": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "ADD",
      "path": "14"
    },
    "821": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "822": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x946"
    },
    "825": {
      "fn": "ERC20Base.transfer",
      "jump": "i",
      "offset": [
        4108,
        4281
      ],
      "op": "JUMP",
      "path": "14"
    },
    "826": {
      "offset": [
        2511,
        2539
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "827": {
      "fn": "ERC20Base.transfer",
      "offset": [
        2511,
        2539
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C4"
    },
    "830": {
      "fn": "ERC20Base.transfer",
      "offset": [
        2511,
        2539
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x963"
    },
    "833": {
      "fn": "ERC20Base.transfer",
      "jump": "i",
      "offset": [
        2511,
        2539
      ],
      "op": "JUMP",
      "path": "14"
    },
    "834": {
      "offset": [
        1818,
        1849
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "835": {
      "fn": "ERC20Base.transfer",
      "offset": [
        1818,
        1849
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E0"
    },
    "838": {
      "fn": "ERC20Base.transfer",
      "offset": [
        1818,
        1849
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x96C"
    },
    "841": {
      "fn": "ERC20Base.transfer",
      "jump": "i",
      "offset": [
        1818,
        1849
      ],
      "op": "JUMP",
      "path": "14"
    },
    "842": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "843": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1C4"
    },
    "846": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "848": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP1",
      "path": "14"
    },
    "849": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "850": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SUB",
      "path": "14"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "853": {
      "op": "DUP2"
    },
    "854": {
      "op": "LT"
    },
    "855": {
      "op": "ISZERO"
    },
    "856": {
      "op": "PUSH2",
      "value": "0x360"
    },
    "859": {
      "op": "JUMPI"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "862": {
      "op": "DUP1"
    },
    "863": {
      "op": "REVERT"
    },
    "864": {
      "op": "JUMPDEST"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "871": {
      "op": "SHL"
    },
    "872": {
      "op": "SUB"
    },
    "873": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP3",
      "path": "14"
    },
    "874": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "875": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "AND",
      "path": "14"
    },
    "876": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "877": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "879": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP2",
      "path": "14"
    },
    "880": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "881": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "882": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "883": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP2",
      "path": "14"
    },
    "884": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "885": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "886": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "888": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP2",
      "path": "14"
    },
    "889": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "890": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "892": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP3",
      "path": "14"
    },
    "893": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "894": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "895": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "901": {
      "op": "DUP2"
    },
    "902": {
      "op": "GT"
    },
    "903": {
      "op": "ISZERO"
    },
    "904": {
      "op": "PUSH2",
      "value": "0x390"
    },
    "907": {
      "op": "JUMPI"
    },
    "908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "910": {
      "op": "DUP1"
    },
    "911": {
      "op": "REVERT"
    },
    "912": {
      "op": "JUMPDEST"
    },
    "913": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP3",
      "path": "14"
    },
    "914": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "915": {
      "op": "DUP4"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "918": {
      "op": "DUP3"
    },
    "919": {
      "op": "ADD"
    },
    "920": {
      "op": "GT"
    },
    "921": {
      "op": "ISZERO"
    },
    "922": {
      "op": "PUSH2",
      "value": "0x3A2"
    },
    "925": {
      "op": "JUMPI"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "928": {
      "op": "DUP1"
    },
    "929": {
      "op": "REVERT"
    },
    "930": {
      "op": "JUMPDEST"
    },
    "931": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP1",
      "path": "14"
    },
    "932": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "933": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "934": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "936": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "937": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "938": {
      "op": "DUP5"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "DUP4"
    },
    "942": {
      "op": "MUL"
    },
    "943": {
      "op": "DUP5"
    },
    "944": {
      "op": "ADD"
    },
    "945": {
      "op": "GT"
    },
    "946": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "952": {
      "op": "DUP4"
    },
    "953": {
      "op": "GT"
    },
    "954": {
      "op": "OR"
    },
    "955": {
      "op": "ISZERO"
    },
    "956": {
      "op": "PUSH2",
      "value": "0x3C4"
    },
    "959": {
      "op": "JUMPI"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "962": {
      "op": "DUP1"
    },
    "963": {
      "op": "REVERT"
    },
    "964": {
      "op": "JUMPDEST"
    },
    "965": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "966": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "967": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP1",
      "path": "14"
    },
    "968": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP1",
      "path": "14"
    },
    "969": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "971": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "972": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "974": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP1",
      "path": "14"
    },
    "975": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "976": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DIV",
      "path": "14"
    },
    "977": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "MUL",
      "path": "14"
    },
    "978": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "980": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "981": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "983": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "984": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "985": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP2",
      "path": "14"
    },
    "986": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "987": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "989": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "990": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP1",
      "path": "14"
    },
    "991": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "992": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "993": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "994": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "995": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP2",
      "path": "14"
    },
    "996": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP2",
      "path": "14"
    },
    "997": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "998": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1000": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "ADD",
      "path": "14"
    },
    "1001": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1002": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1003": {
      "op": "DUP1"
    },
    "1004": {
      "op": "DUP3"
    },
    "1005": {
      "op": "DUP5"
    },
    "1006": {
      "op": "CALLDATACOPY"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1009": {
      "op": "SWAP3"
    },
    "1010": {
      "op": "ADD"
    },
    "1011": {
      "op": "SWAP2"
    },
    "1012": {
      "op": "SWAP1"
    },
    "1013": {
      "op": "SWAP2"
    },
    "1014": {
      "op": "MSTORE"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1017": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x972"
    },
    "1022": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "op": "POP"
    },
    "1025": {
      "op": "POP"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "op": "POP"
    },
    "1028": {
      "fn": "ERC20Base.approveAndCall",
      "jump": "i",
      "offset": [
        8971,
        9324
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1029": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1030": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1E0"
    },
    "1033": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1035": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1036": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1037": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "SUB",
      "path": "14"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1040": {
      "op": "DUP2"
    },
    "1041": {
      "op": "LT"
    },
    "1042": {
      "op": "ISZERO"
    },
    "1043": {
      "op": "PUSH2",
      "value": "0x41B"
    },
    "1046": {
      "op": "JUMPI"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1049": {
      "op": "DUP1"
    },
    "1050": {
      "op": "REVERT"
    },
    "1051": {
      "op": "JUMPDEST"
    },
    "1052": {
      "op": "POP"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1059": {
      "op": "SHL"
    },
    "1060": {
      "op": "SUB"
    },
    "1061": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1062": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1063": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1064": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "AND",
      "path": "14"
    },
    "1065": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1066": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1068": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "ADD",
      "path": "14"
    },
    "1069": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "1070": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "AND",
      "path": "14"
    },
    "1071": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA72"
    },
    "1074": {
      "fn": "ERC20Base.allowance",
      "jump": "i",
      "offset": [
        8312,
        8454
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1075": {
      "offset": [
        383,
        401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1076": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1078": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1079": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1080": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1082": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1083": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1084": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1086": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1088": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1090": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1091": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "AND",
      "path": "14"
    },
    "1092": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1093": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1096": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "MUL",
      "path": "14"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1099": {
      "op": "NOT"
    },
    "1100": {
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1101": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1102": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1103": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "AND",
      "path": "14"
    },
    "1104": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1105": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1106": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1107": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DIV",
      "path": "14"
    },
    "1108": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1110": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1111": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1112": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1113": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1114": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DIV",
      "path": "14"
    },
    "1115": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1116": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "MUL",
      "path": "14"
    },
    "1117": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1118": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1119": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1120": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1121": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1122": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1123": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1124": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1125": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1126": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1127": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1128": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1129": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1130": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1131": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1132": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1133": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1134": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1135": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4B9"
    },
    "1138": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1139": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1140": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1142": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "LT",
      "path": "14"
    },
    "1143": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x48E"
    },
    "1146": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1147": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1150": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1151": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1152": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1153": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DIV",
      "path": "14"
    },
    "1154": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "MUL",
      "path": "14"
    },
    "1155": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1156": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1157": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1158": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1160": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1161": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1162": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4B9"
    },
    "1165": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1166": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1167": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1168": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1169": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1170": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1171": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1173": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1174": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1176": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1178": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1179": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1180": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1181": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1182": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1183": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1184": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1185": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1186": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1188": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1189": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1190": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1192": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1193": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1194": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1195": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "GT",
      "path": "14"
    },
    "1196": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x49C"
    },
    "1199": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1200": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1201": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1202": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SUB",
      "path": "14"
    },
    "1203": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1205": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "AND",
      "path": "14"
    },
    "1206": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1207": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "ADD",
      "path": "14"
    },
    "1208": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1209": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1210": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "1211": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "1212": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "1213": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "1214": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "POP",
      "path": "14"
    },
    "1215": {
      "fn": "ERC20Base.allowance",
      "offset": [
        383,
        401
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1216": {
      "fn": "ERC20Base.allowance",
      "jump": "o",
      "offset": [
        383,
        401
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1217": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1218": {
      "fn": "ERC20Base.approve",
      "offset": [
        7467,
        7483
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 0,
      "value": "0xB"
    },
    "1220": {
      "fn": "ERC20Base.approve",
      "offset": [
        7467,
        7483
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1221": {
      "fn": "ERC20Base.approve",
      "offset": [
        7435,
        7447
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1223": {
      "fn": "ERC20Base.approve",
      "offset": [
        7435,
        7447
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1224": {
      "fn": "ERC20Base.approve",
      "offset": [
        7467,
        7483
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1226": {
      "branch": 45,
      "fn": "ERC20Base.approve",
      "offset": [
        7467,
        7483
      ],
      "op": "AND",
      "path": "14"
    },
    "1227": {
      "fn": "ERC20Base.approve",
      "offset": [
        7459,
        7484
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4D3"
    },
    "1230": {
      "branch": 45,
      "fn": "ERC20Base.approve",
      "offset": [
        7459,
        7484
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1231": {
      "fn": "ERC20Base.approve",
      "offset": [
        7459,
        7484
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1233": {
      "fn": "ERC20Base.approve",
      "offset": [
        7459,
        7484
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1234": {
      "fn": "ERC20Base.approve",
      "offset": [
        7459,
        7484
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1235": {
      "fn": "ERC20Base.approve",
      "offset": [
        7459,
        7484
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1236": {
      "fn": "ERC20Base.approve",
      "offset": [
        7807,
        7819
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 1
    },
    "1237": {
      "fn": "ERC20Base.approve",
      "offset": [
        7807,
        7819
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1238": {
      "fn": "ERC20Base.approve",
      "offset": [
        7807,
        7819
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1239": {
      "fn": "ERC20Base.approve",
      "offset": [
        7806,
        7860
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x501"
    },
    "1242": {
      "fn": "ERC20Base.approve",
      "offset": [
        7806,
        7860
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1243": {
      "op": "POP"
    },
    "1244": {
      "fn": "ERC20Base.approve",
      "offset": [
        7833,
        7843
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1245": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1247": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1248": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1249": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1250": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7832
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "1252": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1254": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1255": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1256": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1257": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1259": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1260": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1261": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7844
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1268": {
      "op": "SHL"
    },
    "1269": {
      "op": "SUB"
    },
    "1270": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "DUP8",
      "path": "14"
    },
    "1271": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "AND",
      "path": "14"
    },
    "1272": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1273": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1274": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1275": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1276": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1277": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1278": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1279": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7854
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1280": {
      "fn": "ERC20Base.approve",
      "offset": [
        7825,
        7859
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1281": {
      "fn": "ERC20Base.approve",
      "offset": [
        7806,
        7860
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1282": {
      "fn": "ERC20Base.approve",
      "offset": [
        7798,
        7861
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x50A"
    },
    "1285": {
      "fn": "ERC20Base.approve",
      "offset": [
        7798,
        7861
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1286": {
      "fn": "ERC20Base.approve",
      "offset": [
        7798,
        7861
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1288": {
      "fn": "ERC20Base.approve",
      "offset": [
        7798,
        7861
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1289": {
      "fn": "ERC20Base.approve",
      "offset": [
        7798,
        7861
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1290": {
      "fn": "ERC20Base.approve",
      "offset": [
        7798,
        7861
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1291": {
      "fn": "ERC20Base.approve",
      "offset": [
        7880,
        7890
      ],
      "op": "CALLER",
      "path": "14",
      "statement": 2
    },
    "1292": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1294": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1295": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1296": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1297": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7879
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "1299": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1301": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1302": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1303": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1304": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1306": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1307": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1308": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7891
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1315": {
      "op": "SHL"
    },
    "1316": {
      "op": "SUB"
    },
    "1317": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "DUP9",
      "path": "14"
    },
    "1318": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "AND",
      "path": "14"
    },
    "1319": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1320": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1321": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1322": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1323": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1324": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1325": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1326": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1327": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1328": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1329": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7911
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1330": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7911
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1331": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7911
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1332": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 3
    },
    "1333": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1334": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1335": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1336": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1337": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1338": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1339": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1340": {
      "fn": "ERC20Base.approve",
      "offset": [
        7872,
        7901
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1341": {
      "fn": "ERC20Base.approve",
      "offset": [
        7880,
        7890
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1342": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1375": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1376": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1377": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1378": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1379": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "SUB",
      "path": "14"
    },
    "1380": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1381": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1382": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "ADD",
      "path": "14"
    },
    "1383": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1384": {
      "fn": "ERC20Base.approve",
      "offset": [
        7926,
        7965
      ],
      "op": "LOG3",
      "path": "14"
    },
    "1385": {
      "op": "POP"
    },
    "1386": {
      "fn": "ERC20Base.approve",
      "offset": [
        7982,
        7986
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 4,
      "value": "0x1"
    },
    "1388": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1389": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1390": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1391": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "POP",
      "path": "14"
    },
    "1392": {
      "fn": "ERC20Base.approve",
      "offset": [
        7367,
        7993
      ],
      "op": "POP",
      "path": "14"
    },
    "1393": {
      "fn": "ERC20Base.approve",
      "jump": "o",
      "offset": [
        7367,
        7993
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1394": {
      "offset": [
        1932,
        1957
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1395": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x7"
    },
    "1397": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1398": {
      "fn": "ERC20Base.approve",
      "offset": [
        1932,
        1957
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1399": {
      "fn": "ERC20Base.approve",
      "jump": "o",
      "offset": [
        1932,
        1957
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1400": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9448,
        9549
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1401": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9492,
        9496
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1403": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9515,
        9542
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 5,
      "value": "0x583"
    },
    "1406": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9529,
        9541
      ],
      "op": "NUMBER",
      "path": "14"
    },
    "1407": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9515,
        9528
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x859"
    },
    "1410": {
      "fn": "ERC20Base.totalSupply",
      "jump": "i",
      "offset": [
        9515,
        9542
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1411": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9515,
        9542
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1412": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9508,
        9542
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1413": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9508,
        9542
      ],
      "op": "POP",
      "path": "14"
    },
    "1414": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9448,
        9549
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1415": {
      "fn": "ERC20Base.totalSupply",
      "offset": [
        9448,
        9549
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1416": {
      "fn": "ERC20Base.totalSupply",
      "jump": "o",
      "offset": [
        9448,
        9549
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1417": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1418": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4746,
        4762
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 6,
      "value": "0xB"
    },
    "1420": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4746,
        4762
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1421": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4714,
        4726
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1423": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4714,
        4726
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1424": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4746,
        4762
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1426": {
      "branch": 46,
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4746,
        4762
      ],
      "op": "AND",
      "path": "14"
    },
    "1427": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4738,
        4763
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x59B"
    },
    "1430": {
      "branch": 46,
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4738,
        4763
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1431": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4738,
        4763
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1433": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4738,
        4763
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1434": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4738,
        4763
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1435": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4738,
        4763
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1442": {
      "op": "SHL"
    },
    "1443": {
      "op": "SUB"
    },
    "1444": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1445": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "AND",
      "path": "14"
    },
    "1446": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1448": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1449": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1450": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1451": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4843
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "1453": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1455": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1456": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1457": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1458": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1460": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1461": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1462": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4850
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1463": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4851,
        4861
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1464": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4862
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1465": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4862
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1466": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4862
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1467": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4862
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1468": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4862
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1469": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4862
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1470": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4862
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1471": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4862
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1472": {
      "branch": 47,
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4836,
        4872
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1473": {
      "op": "GT"
    },
    "1474": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4832,
        4898
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1475": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4832,
        4898
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5CE"
    },
    "1478": {
      "branch": 47,
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4832,
        4898
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1479": {
      "op": "POP"
    },
    "1480": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4893,
        4898
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 7,
      "value": "0x0"
    },
    "1482": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4886,
        4898
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x606"
    },
    "1485": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4886,
        4898
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1486": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4832,
        4898
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1493": {
      "op": "SHL"
    },
    "1494": {
      "op": "SUB"
    },
    "1495": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "DUP5",
      "path": "14",
      "statement": 8
    },
    "1496": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "AND",
      "path": "14"
    },
    "1497": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1499": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1500": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1501": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1502": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4915
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "1504": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1506": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1507": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1508": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1509": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1511": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1512": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1513": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4922
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1514": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4923,
        4933
      ],
      "op": "CALLER",
      "path": "14"
    },
    "1515": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4934
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1516": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4934
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1517": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4934
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1518": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4934
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1519": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4934
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1520": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4934
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1521": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4934
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1522": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4945
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1523": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4945
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1524": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4945
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1525": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4945
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1526": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4945
      ],
      "op": "SUB",
      "path": "14"
    },
    "1527": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4945
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1528": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4908,
        4945
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "1529": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4962,
        4993
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 9,
      "value": "0x603"
    },
    "1532": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4916,
        4921
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1533": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4980,
        4983
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1534": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4938,
        4945
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1535": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4962,
        4972
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA9D"
    },
    "1538": {
      "fn": "ERC20Base.transferFrom",
      "jump": "i",
      "offset": [
        4962,
        4993
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1539": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4962,
        4993
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1540": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4955,
        4993
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1541": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4955,
        4993
      ],
      "op": "POP",
      "path": "14"
    },
    "1542": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1543": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1544": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1545": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "POP",
      "path": "14"
    },
    "1546": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "POP",
      "path": "14"
    },
    "1547": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        4631,
        5000
      ],
      "op": "POP",
      "path": "14"
    },
    "1548": {
      "fn": "ERC20Base.transferFrom",
      "jump": "o",
      "offset": [
        4631,
        5000
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1549": {
      "offset": [
        455,
        476
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1550": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1552": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1553": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "1555": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "AND",
      "path": "14"
    },
    "1556": {
      "fn": "ERC20Base.transferFrom",
      "offset": [
        455,
        476
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1557": {
      "fn": "ERC20Base.transferFrom",
      "jump": "o",
      "offset": [
        455,
        476
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1558": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9903,
        10826
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1565": {
      "op": "SHL"
    },
    "1566": {
      "op": "SUB"
    },
    "1567": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1568": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "AND",
      "path": "14"
    },
    "1569": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        9980,
        9984
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1571": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1572": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1573": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1574": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10337
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1576": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1578": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1579": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1581": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1582": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10345
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1583": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10352
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1584": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10357
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1585": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10329,
        10357
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1586": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10328,
        10408
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x670"
    },
    "1589": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10328,
        10408
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1590": {
      "op": "POP"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1597": {
      "op": "SHL"
    },
    "1598": {
      "op": "SUB"
    },
    "1599": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1600": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "AND",
      "path": "14"
    },
    "1601": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1603": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1604": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1605": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1606": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10371
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1608": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1610": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1611": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1613": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1614": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1615": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1616": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1617": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10395,
        10407
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1618": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10395,
        10407
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1619": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10379
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1620": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x659"
    },
    "1623": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1624": {
      "dev": "Index out of range",
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "INVALID",
      "path": "14"
    },
    "1625": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1626": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1628": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1629": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1630": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1631": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1633": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1634": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1635": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1636": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10382
      ],
      "op": "ADD",
      "path": "14"
    },
    "1637": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10392
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1644": {
      "op": "SHL"
    },
    "1645": {
      "op": "SUB"
    },
    "1646": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10392
      ],
      "op": "AND",
      "path": "14"
    },
    "1647": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10363,
        10407
      ],
      "op": "GT",
      "path": "14"
    },
    "1648": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10328,
        10408
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1649": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10324,
        10820
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1650": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10324,
        10820
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x733"
    },
    "1653": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10324,
        10820
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1654": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10436,
        10447
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "1656": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10436,
        10447
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "op": "SUB"
    },
    "1665": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10436,
        10447
      ],
      "op": "AND",
      "path": "14"
    },
    "1666": {
      "branch": 48,
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10428,
        10462
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1667": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10424,
        10655
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x72B"
    },
    "1670": {
      "branch": 48,
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10424,
        10655
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1671": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10500
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 10,
      "value": "0x5"
    },
    "1673": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10500
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1674": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10539,
        10558
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "1676": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10539,
        10558
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1683": {
      "op": "SHL"
    },
    "1684": {
      "op": "SUB"
    },
    "1685": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10500
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1686": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10500
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1687": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10500
      ],
      "op": "AND",
      "path": "14"
    },
    "1688": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10500
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1689": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10512
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4EE2CD7E"
    },
    "1694": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10512
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1695": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10513,
        10519
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1696": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10513,
        10519
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1697": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10521,
        10559
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6AB"
    },
    "1700": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10521,
        10559
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1701": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10525,
        10537
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1702": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10525,
        10537
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1703": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10521,
        10524
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBCB"
    },
    "1706": {
      "fn": "ERC20Base.balanceOfAt",
      "jump": "i",
      "offset": [
        10521,
        10559
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1707": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10521,
        10559
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1708": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1710": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1711": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1712": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "1717": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "AND",
      "path": "14"
    },
    "1718": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "1720": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "SHL",
      "path": "14"
    },
    "1721": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1722": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1723": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1725": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "ADD",
      "path": "14"
    },
    "1726": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1727": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1734": {
      "op": "SHL"
    },
    "1735": {
      "op": "SUB"
    },
    "1736": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "AND",
      "path": "14"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1743": {
      "op": "SHL"
    },
    "1744": {
      "op": "SUB"
    },
    "1745": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "AND",
      "path": "14"
    },
    "1746": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1747": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1748": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1750": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "ADD",
      "path": "14"
    },
    "1751": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1752": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1753": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1754": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1756": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "ADD",
      "path": "14"
    },
    "1757": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1758": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "POP",
      "path": "14"
    },
    "1759": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "POP",
      "path": "14"
    },
    "1760": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "POP",
      "path": "14"
    },
    "1761": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1763": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1765": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1766": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1767": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1768": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "SUB",
      "path": "14"
    },
    "1769": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1770": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP7",
      "path": "14"
    },
    "1771": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1772": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "1773": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1774": {
      "op": "DUP1"
    },
    "1775": {
      "op": "ISZERO"
    },
    "1776": {
      "op": "PUSH2",
      "value": "0x6F8"
    },
    "1779": {
      "op": "JUMPI"
    },
    "1780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1782": {
      "op": "DUP1"
    },
    "1783": {
      "op": "REVERT"
    },
    "1784": {
      "op": "JUMPDEST"
    },
    "1785": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "POP",
      "path": "14"
    },
    "1786": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "GAS",
      "path": "14"
    },
    "1787": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "1788": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1789": {
      "op": "DUP1"
    },
    "1790": {
      "op": "ISZERO"
    },
    "1791": {
      "op": "PUSH2",
      "value": "0x70C"
    },
    "1794": {
      "op": "JUMPI"
    },
    "1795": {
      "op": "RETURNDATASIZE"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1798": {
      "op": "DUP1"
    },
    "1799": {
      "op": "RETURNDATACOPY"
    },
    "1800": {
      "op": "RETURNDATASIZE"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1803": {
      "op": "REVERT"
    },
    "1804": {
      "op": "JUMPDEST"
    },
    "1805": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "POP",
      "path": "14"
    },
    "1806": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "POP",
      "path": "14"
    },
    "1807": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "POP",
      "path": "14"
    },
    "1808": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "POP",
      "path": "14"
    },
    "1809": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1811": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1812": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1815": {
      "op": "DUP2"
    },
    "1816": {
      "op": "LT"
    },
    "1817": {
      "op": "ISZERO"
    },
    "1818": {
      "op": "PUSH2",
      "value": "0x722"
    },
    "1821": {
      "op": "JUMPI"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1824": {
      "op": "DUP1"
    },
    "1825": {
      "op": "REVERT"
    },
    "1826": {
      "op": "JUMPDEST"
    },
    "1827": {
      "op": "POP"
    },
    "1828": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1829": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10489,
        10560
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1830": {
      "op": "POP"
    },
    "1831": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10482,
        10560
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56C"
    },
    "1834": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10482,
        10560
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1835": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10424,
        10655
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10639,
        10640
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 11,
      "value": "0x0"
    },
    "1839": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10632,
        10640
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56C"
    },
    "1842": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10632,
        10640
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1843": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10324,
        10820
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "op": "SUB"
    },
    "1852": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 12
    },
    "1853": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "AND",
      "path": "14"
    },
    "1854": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1856": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1857": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1858": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1859": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10786
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1861": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1863": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1864": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1866": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1867": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10778,
        10794
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1868": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10767,
        10809
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x755"
    },
    "1871": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10767,
        10809
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1872": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10796,
        10808
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1873": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10767,
        10777
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBE1"
    },
    "1876": {
      "fn": "ERC20Base.balanceOfAt",
      "jump": "i",
      "offset": [
        10767,
        10809
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1877": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10767,
        10809
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1878": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10760,
        10809
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1879": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10760,
        10809
      ],
      "op": "POP",
      "path": "14"
    },
    "1880": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10760,
        10809
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56C"
    },
    "1883": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        10760,
        10809
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1884": {
      "offset": [
        601,
        634
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1885": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x3"
    },
    "1887": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1888": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1889": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1891": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1892": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1893": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1895": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "1897": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "1899": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1900": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "AND",
      "path": "14"
    },
    "1901": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1902": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1905": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "MUL",
      "path": "14"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1908": {
      "op": "NOT"
    },
    "1909": {
      "offset": [
        601,
        634
      ],
      "op": "ADD",
      "path": "14"
    },
    "1910": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1911": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1912": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "AND",
      "path": "14"
    },
    "1913": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1914": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1915": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1916": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DIV",
      "path": "14"
    },
    "1917": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1919": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1920": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "ADD",
      "path": "14"
    },
    "1921": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1922": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1923": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DIV",
      "path": "14"
    },
    "1924": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1925": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "MUL",
      "path": "14"
    },
    "1926": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1927": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "ADD",
      "path": "14"
    },
    "1928": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1929": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "ADD",
      "path": "14"
    },
    "1930": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1931": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1932": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1933": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1934": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1935": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1936": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "1937": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1938": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1939": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "ADD",
      "path": "14"
    },
    "1940": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1941": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1942": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1943": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1944": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4B9"
    },
    "1947": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1948": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1949": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "1951": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "LT",
      "path": "14"
    },
    "1952": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x48E"
    },
    "1955": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1956": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1959": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1960": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1961": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1962": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DIV",
      "path": "14"
    },
    "1963": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "MUL",
      "path": "14"
    },
    "1964": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1965": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1966": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1967": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1969": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "ADD",
      "path": "14"
    },
    "1970": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1971": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4B9"
    },
    "1974": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        601,
        634
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1975": {
      "offset": [
        712,
        746
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1976": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1978": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1979": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1980": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1981": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "DUP2",
      "path": "14"
    },
    "1982": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "LT",
      "path": "14"
    },
    "1983": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7C4"
    },
    "1986": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1987": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "INVALID",
      "path": "14"
    },
    "1988": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1989": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1991": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1992": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1993": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1994": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1996": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1997": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "1998": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "1999": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "ADD",
      "path": "14"
    },
    "2000": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "op": "SUB"
    },
    "2009": {
      "offset": [
        712,
        746
      ],
      "op": "AND",
      "path": "14"
    },
    "2010": {
      "fn": "ERC20Base.balanceOfAt",
      "offset": [
        712,
        746
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "offset": [
        712,
        746
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2013": {
      "fn": "ERC20Base.balanceOfAt",
      "jump": "o",
      "offset": [
        712,
        746
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2014": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2015": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6894,
        6909
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2017": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6928,
        6961
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 13,
      "value": "0x7EA"
    },
    "2020": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6940,
        6946
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2021": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6948,
        6960
      ],
      "op": "NUMBER",
      "path": "14"
    },
    "2022": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6928,
        6939
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x616"
    },
    "2025": {
      "fn": "ERC20Base.balanceOf",
      "jump": "i",
      "offset": [
        6928,
        6961
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2026": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6928,
        6961
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2027": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6921,
        6961
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2028": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6921,
        6961
      ],
      "op": "POP",
      "path": "14"
    },
    "2029": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2030": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2031": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2032": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        6838,
        6968
      ],
      "op": "POP",
      "path": "14"
    },
    "2033": {
      "fn": "ERC20Base.balanceOf",
      "jump": "o",
      "offset": [
        6838,
        6968
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2034": {
      "offset": [
        1633,
        1661
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2035": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        1633,
        1661
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2037": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        1633,
        1661
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2044": {
      "op": "SHL"
    },
    "2045": {
      "op": "SUB"
    },
    "2046": {
      "offset": [
        1633,
        1661
      ],
      "op": "AND",
      "path": "14"
    },
    "2047": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        1633,
        1661
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2048": {
      "fn": "ERC20Base.balanceOf",
      "jump": "o",
      "offset": [
        1633,
        1661
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2049": {
      "offset": [
        536,
        556
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2050": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "2052": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2053": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2054": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2056": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2057": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2058": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2060": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2062": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2063": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "AND",
      "path": "14"
    },
    "2064": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2065": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "2068": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "MUL",
      "path": "14"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2071": {
      "op": "NOT"
    },
    "2072": {
      "offset": [
        536,
        556
      ],
      "op": "ADD",
      "path": "14"
    },
    "2073": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2074": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2075": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "AND",
      "path": "14"
    },
    "2076": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2077": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2078": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DIV",
      "path": "14"
    },
    "2079": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2081": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2082": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "ADD",
      "path": "14"
    },
    "2083": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2084": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2085": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DIV",
      "path": "14"
    },
    "2086": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2087": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "MUL",
      "path": "14"
    },
    "2088": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2089": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "ADD",
      "path": "14"
    },
    "2090": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2091": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "ADD",
      "path": "14"
    },
    "2092": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2093": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2094": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2095": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2096": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2097": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2098": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2099": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2100": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2101": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "ADD",
      "path": "14"
    },
    "2102": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2103": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2104": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2105": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2106": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4B9"
    },
    "2109": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2110": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2111": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2113": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "LT",
      "path": "14"
    },
    "2114": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x48E"
    },
    "2117": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2118": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "2121": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2122": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2123": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2124": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DIV",
      "path": "14"
    },
    "2125": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "MUL",
      "path": "14"
    },
    "2126": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2127": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2128": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2129": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2131": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "ADD",
      "path": "14"
    },
    "2132": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2133": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4B9"
    },
    "2136": {
      "fn": "ERC20Base.balanceOf",
      "offset": [
        536,
        556
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2137": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11039,
        11942
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2138": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11474,
        11492
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "2140": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11474,
        11499
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2141": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11101,
        11105
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2143": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11101,
        11105
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2144": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11474,
        11504
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2145": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11474,
        11504
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2146": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11473,
        11557
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x88C"
    },
    "2149": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11473,
        11557
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2150": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11473,
        11557
      ],
      "op": "POP",
      "path": "14"
    },
    "2151": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11544,
        11556
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2152": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11528
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "2154": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11529,
        11530
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2156": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2157": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2158": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2159": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "LT",
      "path": "14"
    },
    "2160": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x875"
    },
    "2163": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2164": {
      "dev": "Index out of range",
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "INVALID",
      "path": "14"
    },
    "2165": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2166": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2168": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2169": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2170": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2171": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2173": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2174": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2175": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2176": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11531
      ],
      "op": "ADD",
      "path": "14"
    },
    "2177": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11541
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2184": {
      "op": "SHL"
    },
    "2185": {
      "op": "SUB"
    },
    "2186": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11541
      ],
      "op": "AND",
      "path": "14"
    },
    "2187": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11510,
        11556
      ],
      "op": "GT",
      "path": "14"
    },
    "2188": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11473,
        11557
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2189": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11469,
        11936
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2190": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11469,
        11936
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x934"
    },
    "2193": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11469,
        11936
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2194": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11585,
        11596
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x5"
    },
    "2196": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11585,
        11596
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2203": {
      "op": "SHL"
    },
    "2204": {
      "op": "SUB"
    },
    "2205": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11585,
        11596
      ],
      "op": "AND",
      "path": "14"
    },
    "2206": {
      "branch": 49,
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11577,
        11611
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2207": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11573,
        11765
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x92C"
    },
    "2210": {
      "branch": 49,
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11573,
        11765
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2211": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11649
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 14,
      "value": "0x5"
    },
    "2213": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11649
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2214": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11682,
        11701
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "2216": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11682,
        11701
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2223": {
      "op": "SHL"
    },
    "2224": {
      "op": "SUB"
    },
    "2225": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11649
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2226": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11649
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2227": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11649
      ],
      "op": "AND",
      "path": "14"
    },
    "2228": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11649
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2229": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11663
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x981B24D0"
    },
    "2234": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11663
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2235": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11664,
        11702
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C5"
    },
    "2238": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11664,
        11702
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2239": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11668,
        11680
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2240": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11668,
        11680
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2241": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11664,
        11667
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBCB"
    },
    "2244": {
      "fn": "ERC20Base.totalSupplyAt",
      "jump": "i",
      "offset": [
        11664,
        11702
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2245": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11664,
        11702
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2246": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2248": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2249": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2250": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0xFFFFFFFF"
    },
    "2255": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "AND",
      "path": "14"
    },
    "2256": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xE0"
    },
    "2258": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "SHL",
      "path": "14"
    },
    "2259": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2260": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2261": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2263": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "ADD",
      "path": "14"
    },
    "2264": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2265": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2266": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2267": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2268": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2270": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "ADD",
      "path": "14"
    },
    "2271": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2272": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "POP",
      "path": "14"
    },
    "2273": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "POP",
      "path": "14"
    },
    "2274": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2276": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2278": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2279": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2280": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2281": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "SUB",
      "path": "14"
    },
    "2282": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2283": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2284": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2285": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2286": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2287": {
      "op": "DUP1"
    },
    "2288": {
      "op": "ISZERO"
    },
    "2289": {
      "op": "PUSH2",
      "value": "0x8F9"
    },
    "2292": {
      "op": "JUMPI"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2295": {
      "op": "DUP1"
    },
    "2296": {
      "op": "REVERT"
    },
    "2297": {
      "op": "JUMPDEST"
    },
    "2298": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "POP",
      "path": "14"
    },
    "2299": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "GAS",
      "path": "14"
    },
    "2300": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "2301": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2302": {
      "op": "DUP1"
    },
    "2303": {
      "op": "ISZERO"
    },
    "2304": {
      "op": "PUSH2",
      "value": "0x90D"
    },
    "2307": {
      "op": "JUMPI"
    },
    "2308": {
      "op": "RETURNDATASIZE"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2311": {
      "op": "DUP1"
    },
    "2312": {
      "op": "RETURNDATACOPY"
    },
    "2313": {
      "op": "RETURNDATASIZE"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2316": {
      "op": "REVERT"
    },
    "2317": {
      "op": "JUMPDEST"
    },
    "2318": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "POP",
      "path": "14"
    },
    "2319": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "POP",
      "path": "14"
    },
    "2320": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "POP",
      "path": "14"
    },
    "2321": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "POP",
      "path": "14"
    },
    "2322": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2324": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2325": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2328": {
      "op": "DUP2"
    },
    "2329": {
      "op": "LT"
    },
    "2330": {
      "op": "ISZERO"
    },
    "2331": {
      "op": "PUSH2",
      "value": "0x923"
    },
    "2334": {
      "op": "JUMPI"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2337": {
      "op": "DUP1"
    },
    "2338": {
      "op": "REVERT"
    },
    "2339": {
      "op": "JUMPDEST"
    },
    "2340": {
      "op": "POP"
    },
    "2341": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2342": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11638,
        11703
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11631,
        11703
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7ED"
    },
    "2347": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11631,
        11703
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2348": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11573,
        11765
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2349": {
      "op": "POP"
    },
    "2350": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11749,
        11750
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 15,
      "value": "0x0"
    },
    "2352": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11742,
        11750
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7ED"
    },
    "2355": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11742,
        11750
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2356": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11469,
        11936
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2357": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11881,
        11925
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 16,
      "value": "0x93F"
    },
    "2360": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11892,
        11910
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "2362": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11912,
        11924
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2363": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11881,
        11891
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBE1"
    },
    "2366": {
      "fn": "ERC20Base.totalSupplyAt",
      "jump": "i",
      "offset": [
        11881,
        11925
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2367": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11881,
        11925
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2368": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11874,
        11925
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2369": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11874,
        11925
      ],
      "op": "POP",
      "path": "14"
    },
    "2370": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11874,
        11925
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7ED"
    },
    "2373": {
      "fn": "ERC20Base.totalSupplyAt",
      "offset": [
        11874,
        11925
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2374": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4108,
        4281
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2375": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4204,
        4220
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 17,
      "value": "0xB"
    },
    "2377": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4204,
        4220
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2378": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4172,
        4184
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2380": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4172,
        4184
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2381": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4204,
        4220
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2383": {
      "branch": 50,
      "fn": "ERC20Base.transfer",
      "offset": [
        4204,
        4220
      ],
      "op": "AND",
      "path": "14"
    },
    "2384": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4196,
        4221
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x958"
    },
    "2387": {
      "branch": 50,
      "fn": "ERC20Base.transfer",
      "offset": [
        4196,
        4221
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2388": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4196,
        4221
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2390": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4196,
        4221
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2391": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4196,
        4221
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2392": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4196,
        4221
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2393": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4238,
        4274
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 18,
      "value": "0x606"
    },
    "2396": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4249,
        4259
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2397": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4261,
        4264
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2398": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4266,
        4273
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2399": {
      "fn": "ERC20Base.transfer",
      "offset": [
        4238,
        4248
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA9D"
    },
    "2402": {
      "fn": "ERC20Base.transfer",
      "jump": "i",
      "offset": [
        4238,
        4274
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2403": {
      "offset": [
        2511,
        2539
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2404": {
      "fn": "ERC20Base.transfer",
      "offset": [
        2511,
        2539
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xB"
    },
    "2406": {
      "fn": "ERC20Base.transfer",
      "offset": [
        2511,
        2539
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2407": {
      "fn": "ERC20Base.transfer",
      "offset": [
        2511,
        2539
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xFF"
    },
    "2409": {
      "fn": "ERC20Base.transfer",
      "offset": [
        2511,
        2539
      ],
      "op": "AND",
      "path": "14"
    },
    "2410": {
      "fn": "ERC20Base.transfer",
      "offset": [
        2511,
        2539
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2411": {
      "fn": "ERC20Base.transfer",
      "jump": "o",
      "offset": [
        2511,
        2539
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2412": {
      "offset": [
        1818,
        1849
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2413": {
      "fn": "ERC20Base.transfer",
      "offset": [
        1818,
        1849
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "2415": {
      "fn": "ERC20Base.transfer",
      "offset": [
        1818,
        1849
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2416": {
      "fn": "ERC20Base.transfer",
      "offset": [
        1818,
        1849
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2417": {
      "fn": "ERC20Base.transfer",
      "jump": "o",
      "offset": [
        1818,
        1849
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2418": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2419": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9086,
        9098
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2421": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9118,
        9153
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 19,
      "value": "0x97E"
    },
    "2424": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9134,
        9142
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2425": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9145,
        9152
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2426": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9118,
        9125
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4C1"
    },
    "2429": {
      "fn": "ERC20Base.approveAndCall",
      "jump": "i",
      "offset": [
        9118,
        9153
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2430": {
      "branch": 51,
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9118,
        9153
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2431": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9110,
        9154
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x987"
    },
    "2434": {
      "branch": 51,
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9110,
        9154
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2435": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9110,
        9154
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2437": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9110,
        9154
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2438": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9110,
        9154
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2439": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9110,
        9154
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2440": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 20,
      "value": "0x40"
    },
    "2442": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2443": {
      "op": "PUSH4",
      "value": "0x8F4FFCB1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2450": {
      "op": "SHL"
    },
    "2451": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2452": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2453": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9203,
        9213
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2454": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "2456": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2457": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ADD",
      "path": "14"
    },
    "2458": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2459": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2460": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2461": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "2463": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2464": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ADD",
      "path": "14"
    },
    "2465": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2466": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2467": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2468": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9256,
        9260
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "2469": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "2471": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2472": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ADD",
      "path": "14"
    },
    "2473": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2474": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2475": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2476": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "2478": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "2480": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2481": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ADD",
      "path": "14"
    },
    "2482": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2483": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2484": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2485": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2486": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2487": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x84"
    },
    "2489": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2490": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ADD",
      "path": "14"
    },
    "2491": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2492": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2493": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2500": {
      "op": "SHL"
    },
    "2501": {
      "op": "SUB"
    },
    "2502": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9189
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2503": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9189
      ],
      "op": "AND",
      "path": "14"
    },
    "2504": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9189
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2505": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9189
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x8F4FFCB1"
    },
    "2510": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9189
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2511": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9203,
        9213
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2512": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9227,
        9234
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2513": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9227,
        9234
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2514": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9256,
        9260
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2515": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9275,
        9285
      ],
      "op": "DUP11",
      "path": "14"
    },
    "2516": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9275,
        9285
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2517": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2518": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2519": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2520": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2521": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA4"
    },
    "2523": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2524": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2525": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ADD",
      "path": "14"
    },
    "2526": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2527": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2529": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2530": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ADD",
      "path": "14"
    },
    "2531": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2532": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2533": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2534": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2537": {
      "op": "JUMPDEST"
    },
    "2538": {
      "op": "DUP4"
    },
    "2539": {
      "op": "DUP2"
    },
    "2540": {
      "op": "LT"
    },
    "2541": {
      "op": "ISZERO"
    },
    "2542": {
      "op": "PUSH2",
      "value": "0xA01"
    },
    "2545": {
      "op": "JUMPI"
    },
    "2546": {
      "op": "DUP2"
    },
    "2547": {
      "op": "DUP2"
    },
    "2548": {
      "op": "ADD"
    },
    "2549": {
      "op": "MLOAD"
    },
    "2550": {
      "op": "DUP4"
    },
    "2551": {
      "op": "DUP3"
    },
    "2552": {
      "op": "ADD"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2556": {
      "op": "ADD"
    },
    "2557": {
      "op": "PUSH2",
      "value": "0x9E9"
    },
    "2560": {
      "op": "JUMP"
    },
    "2561": {
      "op": "JUMPDEST"
    },
    "2562": {
      "op": "POP"
    },
    "2563": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2564": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2565": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2566": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2567": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2568": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2569": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2570": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ADD",
      "path": "14"
    },
    "2571": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2572": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "2574": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "AND",
      "path": "14"
    },
    "2575": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2576": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2577": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA2E"
    },
    "2580": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2581": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2582": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2583": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SUB",
      "path": "14"
    },
    "2584": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2585": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2586": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2588": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2589": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2591": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SUB",
      "path": "14"
    },
    "2592": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "2595": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "EXP",
      "path": "14"
    },
    "2596": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SUB",
      "path": "14"
    },
    "2597": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "NOT",
      "path": "14"
    },
    "2598": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "AND",
      "path": "14"
    },
    "2599": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2600": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2601": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2603": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ADD",
      "path": "14"
    },
    "2604": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2605": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2606": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2607": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2608": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2609": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2610": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2611": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2612": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2613": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2614": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2615": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2617": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2619": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2620": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2621": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2622": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "SUB",
      "path": "14"
    },
    "2623": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2624": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2626": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2627": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2628": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "2629": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2630": {
      "op": "DUP1"
    },
    "2631": {
      "op": "ISZERO"
    },
    "2632": {
      "op": "PUSH2",
      "value": "0xA50"
    },
    "2635": {
      "op": "JUMPI"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2638": {
      "op": "DUP1"
    },
    "2639": {
      "op": "REVERT"
    },
    "2640": {
      "op": "JUMPDEST"
    },
    "2641": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "POP",
      "path": "14"
    },
    "2642": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "GAS",
      "path": "14"
    },
    "2643": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "CALL",
      "path": "14"
    },
    "2644": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9165,
        9295
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2645": {
      "op": "DUP1"
    },
    "2646": {
      "op": "ISZERO"
    },
    "2647": {
      "op": "PUSH2",
      "value": "0xA64"
    },
    "2650": {
      "op": "JUMPI"
    },
    "2651": {
      "op": "RETURNDATASIZE"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2654": {
      "op": "DUP1"
    },
    "2655": {
      "op": "RETURNDATACOPY"
    },
    "2656": {
      "op": "RETURNDATASIZE"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2659": {
      "op": "REVERT"
    },
    "2660": {
      "op": "JUMPDEST"
    },
    "2661": {
      "op": "POP"
    },
    "2662": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9313,
        9317
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 21,
      "value": "0x1"
    },
    "2664": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        9313,
        9317
      ],
      "op": "SWAP8",
      "path": "14"
    },
    "2665": {
      "fn": "ERC20Base.approveAndCall",
      "offset": [
        8971,
        9324
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "2666": {
      "op": "POP"
    },
    "2667": {
      "op": "POP"
    },
    "2668": {
      "op": "POP"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "op": "POP"
    },
    "2673": {
      "fn": "ERC20Base.approveAndCall",
      "jump": "o",
      "offset": [
        8971,
        9324
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2674": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8312,
        8454
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "op": "SUB"
    },
    "2683": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "SWAP2",
      "path": "14",
      "statement": 22
    },
    "2684": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2685": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "AND",
      "path": "14"
    },
    "2686": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8386,
        8403
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2688": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2689": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2690": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2691": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8429
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "2693": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2695": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2696": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2697": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2698": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2700": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2701": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2702": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8437
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2703": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2704": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2705": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "2706": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "AND",
      "path": "14"
    },
    "2707": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2708": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2709": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2710": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2711": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2712": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2713": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2714": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2715": {
      "fn": "ERC20Base.allowance",
      "offset": [
        8422,
        8447
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2716": {
      "fn": "ERC20Base.allowance",
      "jump": "o",
      "offset": [
        8312,
        8454
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2717": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5379,
        6703
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2718": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5458,
        5462
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2720": {
      "branch": 52,
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5478,
        5490
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2721": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5474,
        5528
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAAC"
    },
    "2724": {
      "branch": 52,
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5474,
        5528
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2725": {
      "op": "POP"
    },
    "2726": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5513,
        5517
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 23,
      "value": "0x1"
    },
    "2728": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5506,
        5517
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x606"
    },
    "2731": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5506,
        5517
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2732": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5474,
        5528
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2733": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5567,
        5579
      ],
      "op": "NUMBER",
      "path": "14",
      "statement": 24
    },
    "2734": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5545,
        5564
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x6"
    },
    "2736": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5545,
        5564
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2737": {
      "branch": 53,
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5545,
        5579
      ],
      "op": "LT",
      "path": "14"
    },
    "2738": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5537,
        5580
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xABA"
    },
    "2741": {
      "branch": 53,
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5537,
        5580
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2742": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5537,
        5580
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2744": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5537,
        5580
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2745": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5537,
        5580
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2746": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5537,
        5580
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "SUB"
    },
    "2755": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5668,
        5685
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 25
    },
    "2756": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5668,
        5685
      ],
      "op": "AND",
      "path": "14"
    },
    "2757": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5668,
        5685
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2758": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5668,
        5685
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2759": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5668,
        5685
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2760": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5668,
        5685
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2761": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5667,
        5712
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xADB"
    },
    "2764": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5667,
        5712
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2765": {
      "op": "POP"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2772": {
      "op": "SHL"
    },
    "2773": {
      "op": "SUB"
    },
    "2774": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5691,
        5711
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2775": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5691,
        5711
      ],
      "op": "AND",
      "path": "14"
    },
    "2776": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5706,
        5710
      ],
      "op": "ADDRESS",
      "path": "14"
    },
    "2777": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5691,
        5711
      ],
      "op": "EQ",
      "path": "14"
    },
    "2778": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5691,
        5711
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2779": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5667,
        5712
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2780": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5659,
        5713
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAE4"
    },
    "2783": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5659,
        5713
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2784": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5659,
        5713
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2786": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5659,
        5713
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2787": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5659,
        5713
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2788": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5659,
        5713
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2789": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5844,
        5871
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2791": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5874,
        5906
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAF0"
    },
    "2794": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5886,
        5891
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2795": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5893,
        5905
      ],
      "op": "NUMBER",
      "path": "14"
    },
    "2796": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5874,
        5885
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x616"
    },
    "2799": {
      "fn": "ERC20Base.doTransfer",
      "jump": "i",
      "offset": [
        5874,
        5906
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2800": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5874,
        5906
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2801": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5844,
        5906
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2802": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5844,
        5906
      ],
      "op": "POP",
      "path": "14"
    },
    "2803": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5942,
        5949
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2804": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5920,
        5939
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2805": {
      "branch": 54,
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5920,
        5949
      ],
      "op": "LT",
      "path": "14"
    },
    "2806": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5916,
        5988
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2807": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5916,
        5988
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB04"
    },
    "2810": {
      "branch": 54,
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5916,
        5988
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2811": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5972,
        5977
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 26,
      "value": "0x0"
    },
    "2813": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5965,
        5977
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2814": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5965,
        5977
      ],
      "op": "POP",
      "path": "14"
    },
    "2815": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5965,
        5977
      ],
      "op": "POP",
      "path": "14"
    },
    "2816": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5965,
        5977
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x606"
    },
    "2819": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5965,
        5977
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2820": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5916,
        5988
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2827": {
      "op": "SHL"
    },
    "2828": {
      "op": "SUB"
    },
    "2829": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "DUP6",
      "path": "14",
      "statement": 27
    },
    "2830": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "AND",
      "path": "14"
    },
    "2831": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2833": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2834": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2835": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2836": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6130
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2838": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2840": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2841": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2843": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2844": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6122,
        6137
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2845": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6105,
        6169
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB28"
    },
    "2848": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6105,
        6169
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2849": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6139,
        6168
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2850": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6139,
        6168
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2851": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6139,
        6168
      ],
      "op": "SUB",
      "path": "14"
    },
    "2852": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6105,
        6121
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD11"
    },
    "2855": {
      "fn": "ERC20Base.doTransfer",
      "jump": "i",
      "offset": [
        6105,
        6169
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2856": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6105,
        6169
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2857": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6288,
        6313
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2859": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6316,
        6346
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB34"
    },
    "2862": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6328,
        6331
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2863": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6333,
        6345
      ],
      "op": "NUMBER",
      "path": "14"
    },
    "2864": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6316,
        6327
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x616"
    },
    "2867": {
      "fn": "ERC20Base.doTransfer",
      "jump": "i",
      "offset": [
        6316,
        6346
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2868": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6316,
        6346
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2869": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6288,
        6346
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2870": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6288,
        6346
      ],
      "op": "POP",
      "path": "14"
    },
    "2871": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6395,
        6412
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 28
    },
    "2872": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6384,
        6391
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2873": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6364,
        6381
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2874": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6364,
        6391
      ],
      "op": "ADD",
      "path": "14"
    },
    "2875": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6364,
        6412
      ],
      "op": "LT",
      "path": "14"
    },
    "2876": {
      "branch": 55,
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6364,
        6412
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2877": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6356,
        6413
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB45"
    },
    "2880": {
      "branch": 55,
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6356,
        6413
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2881": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6356,
        6413
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2883": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6356,
        6413
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2884": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6356,
        6413
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2885": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6356,
        6413
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "SUB"
    },
    "2894": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "DUP6",
      "path": "14",
      "statement": 29
    },
    "2895": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "AND",
      "path": "14"
    },
    "2896": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2898": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2899": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2900": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2901": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6470
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "2903": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2905": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2906": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2908": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2909": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6462,
        6475
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "2910": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6445,
        6505
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB69"
    },
    "2913": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6445,
        6505
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2914": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6477,
        6504
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2915": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6477,
        6504
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2916": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6477,
        6504
      ],
      "op": "ADD",
      "path": "14"
    },
    "2917": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6445,
        6461
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD11"
    },
    "2920": {
      "fn": "ERC20Base.doTransfer",
      "jump": "i",
      "offset": [
        6445,
        6505
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2921": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6445,
        6505
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2922": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6617,
        6620
      ],
      "op": "DUP5",
      "path": "14",
      "statement": 30
    },
    "2923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "op": "SUB"
    },
    "2931": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "AND",
      "path": "14"
    },
    "2932": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6610,
        6615
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2939": {
      "op": "SHL"
    },
    "2940": {
      "op": "SUB"
    },
    "2941": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "AND",
      "path": "14"
    },
    "2942": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2975": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6622,
        6629
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2976": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2978": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2979": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2980": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2981": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2982": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2983": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2985": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "ADD",
      "path": "14"
    },
    "2986": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2987": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "POP",
      "path": "14"
    },
    "2988": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "POP",
      "path": "14"
    },
    "2989": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2991": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2992": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2993": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2994": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "SUB",
      "path": "14"
    },
    "2995": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2996": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6601,
        6630
      ],
      "op": "LOG3",
      "path": "14"
    },
    "2997": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6640,
        6675
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 31,
      "value": "0xBBF"
    },
    "3000": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6655,
        6660
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3001": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6662,
        6665
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3002": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6667,
        6674
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3003": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6640,
        6654
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDEA"
    },
    "3006": {
      "fn": "ERC20Base.doTransfer",
      "jump": "i",
      "offset": [
        6640,
        6675
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3007": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6640,
        6675
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3008": {
      "op": "POP"
    },
    "3009": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6692,
        6696
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 32,
      "value": "0x1"
    },
    "3011": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        6692,
        6696
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3012": {
      "fn": "ERC20Base.doTransfer",
      "offset": [
        5379,
        6703
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3013": {
      "op": "POP"
    },
    "3014": {
      "op": "POP"
    },
    "3015": {
      "op": "POP"
    },
    "3016": {
      "op": "POP"
    },
    "3017": {
      "op": "POP"
    },
    "3018": {
      "fn": "ERC20Base.doTransfer",
      "jump": "o",
      "offset": [
        5379,
        6703
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3019": {
      "fn": "ERC20Base.min",
      "offset": [
        16582,
        16677
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3020": {
      "fn": "ERC20Base.min",
      "offset": [
        16634,
        16638
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3022": {
      "fn": "ERC20Base.min",
      "offset": [
        16661,
        16662
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 33
    },
    "3023": {
      "fn": "ERC20Base.min",
      "offset": [
        16657,
        16658
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3024": {
      "branch": 56,
      "fn": "ERC20Base.min",
      "offset": [
        16657,
        16662
      ],
      "op": "LT",
      "path": "14"
    },
    "3025": {
      "fn": "ERC20Base.min",
      "offset": [
        16657,
        16670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBDA"
    },
    "3028": {
      "branch": 56,
      "fn": "ERC20Base.min",
      "offset": [
        16657,
        16670
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3029": {
      "fn": "ERC20Base.min",
      "offset": [
        16669,
        16670
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3030": {
      "fn": "ERC20Base.min",
      "offset": [
        16657,
        16670
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x606"
    },
    "3033": {
      "fn": "ERC20Base.min",
      "offset": [
        16657,
        16670
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3034": {
      "fn": "ERC20Base.min",
      "offset": [
        16657,
        16670
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3035": {
      "op": "POP"
    },
    "3036": {
      "fn": "ERC20Base.min",
      "offset": [
        16665,
        16666
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3037": {
      "fn": "ERC20Base.min",
      "offset": [
        16665,
        16666
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3038": {
      "fn": "ERC20Base.min",
      "offset": [
        16582,
        16677
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3039": {
      "op": "POP"
    },
    "3040": {
      "fn": "ERC20Base.min",
      "jump": "o",
      "offset": [
        16582,
        16677
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3041": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14388,
        15169
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3042": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14498,
        14516
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3043": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14498,
        14516
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3044": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14478,
        14482
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3046": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14478,
        14482
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3047": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14494,
        14543
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xBF2"
    },
    "3050": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14494,
        14543
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3051": {
      "op": "POP"
    },
    "3052": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14542,
        14543
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 34,
      "value": "0x0"
    },
    "3054": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14535,
        14543
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56C"
    },
    "3057": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14535,
        14543
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3058": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14494,
        14543
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3059": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14621,
        14639
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3060": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14621,
        14639
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3061": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14620
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3062": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14620
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3065": {
      "op": "NOT"
    },
    "3066": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14621,
        14641
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3067": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14621,
        14641
      ],
      "op": "ADD",
      "path": "14"
    },
    "3068": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14621,
        14641
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3069": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3070": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "LT",
      "path": "14"
    },
    "3071": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC04"
    },
    "3074": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3075": {
      "dev": "Index out of range",
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3076": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3077": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3079": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3080": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3081": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3082": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3084": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3085": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3086": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3087": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14642
      ],
      "op": "ADD",
      "path": "14"
    },
    "3088": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14652
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3093": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3095": {
      "op": "SHL"
    },
    "3096": {
      "op": "SUB"
    },
    "3097": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14609,
        14652
      ],
      "op": "AND",
      "path": "14"
    },
    "3098": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14599,
        14652
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3099": {
      "branch": 57,
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14599,
        14652
      ],
      "op": "LT",
      "path": "14"
    },
    "3100": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14595,
        14712
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC54"
    },
    "3103": {
      "branch": 57,
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14595,
        14712
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3104": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14685,
        14703
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 35
    },
    "3105": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14685,
        14703
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3106": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14684
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3107": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14684
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3110": {
      "op": "NOT"
    },
    "3111": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14685,
        14705
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3112": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14685,
        14705
      ],
      "op": "ADD",
      "path": "14"
    },
    "3113": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14685,
        14705
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3114": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3115": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "LT",
      "path": "14"
    },
    "3116": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC31"
    },
    "3119": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3120": {
      "dev": "Index out of range",
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3121": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3122": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3124": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3125": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3126": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3127": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3129": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3130": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3131": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3132": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14706
      ],
      "op": "ADD",
      "path": "14"
    },
    "3133": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14712
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3138": {
      "op": "SHL"
    },
    "3139": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14712
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3140": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14712
      ],
      "op": "DIV",
      "path": "14"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3147": {
      "op": "SHL"
    },
    "3148": {
      "op": "SUB"
    },
    "3149": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14712
      ],
      "op": "AND",
      "path": "14"
    },
    "3150": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14673,
        14712
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3151": {
      "op": "POP"
    },
    "3152": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14666,
        14712
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56C"
    },
    "3155": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14666,
        14712
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3156": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14595,
        14712
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3157": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14746
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3158": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14747,
        14748
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3160": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3161": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3162": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3163": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "LT",
      "path": "14"
    },
    "3164": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC61"
    },
    "3167": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3168": {
      "dev": "Index out of range",
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3169": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3170": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3172": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3173": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3174": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3175": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3177": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3178": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3179": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3180": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14749
      ],
      "op": "ADD",
      "path": "14"
    },
    "3181": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14759
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3188": {
      "op": "SHL"
    },
    "3189": {
      "op": "SUB"
    },
    "3190": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14735,
        14759
      ],
      "op": "AND",
      "path": "14"
    },
    "3191": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14726,
        14759
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3192": {
      "branch": 58,
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14726,
        14759
      ],
      "op": "LT",
      "path": "14"
    },
    "3193": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14722,
        14781
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3194": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14722,
        14781
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC85"
    },
    "3197": {
      "branch": 58,
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14722,
        14781
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3198": {
      "op": "POP"
    },
    "3199": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14780,
        14781
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 36,
      "value": "0x0"
    },
    "3201": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14773,
        14781
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x56C"
    },
    "3204": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14773,
        14781
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3205": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14722,
        14781
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3206": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14876,
        14894
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3207": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14876,
        14894
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3208": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14843,
        14851
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3210": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14843,
        14851
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3213": {
      "op": "NOT"
    },
    "3214": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14876,
        14896
      ],
      "op": "ADD",
      "path": "14"
    },
    "3215": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14906,
        15124
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3216": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14919,
        14922
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3217": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14913,
        14916
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3218": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14913,
        14922
      ],
      "op": "GT",
      "path": "14"
    },
    "3219": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14906,
        15124
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3220": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14906,
        15124
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCE0"
    },
    "3223": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14906,
        15124
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3224": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14938,
        14946
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3226": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14967,
        14968
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x2"
    },
    "3228": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14962,
        14963
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3230": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14950,
        14959
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3231": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14950,
        14959
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3232": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14950,
        14959
      ],
      "op": "ADD",
      "path": "14"
    },
    "3233": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14950,
        14963
      ],
      "op": "ADD",
      "path": "14"
    },
    "3234": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14949,
        14968
      ],
      "op": "DIV",
      "path": "14"
    },
    "3235": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14938,
        14968
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3236": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14938,
        14968
      ],
      "op": "POP",
      "path": "14"
    },
    "3237": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15014,
        15020
      ],
      "op": "DUP5",
      "path": "14"
    },
    "3238": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        14997
      ],
      "op": "DUP7",
      "path": "14"
    },
    "3239": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14998,
        15001
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3240": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3241": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3242": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3243": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "LT",
      "path": "14"
    },
    "3244": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCB1"
    },
    "3247": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3248": {
      "dev": "Index out of range",
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3249": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3250": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3252": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3253": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3254": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3255": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3257": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3258": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3259": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3260": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15002
      ],
      "op": "ADD",
      "path": "14"
    },
    "3261": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15012
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3268": {
      "op": "SHL"
    },
    "3269": {
      "op": "SUB"
    },
    "3270": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15012
      ],
      "op": "AND",
      "path": "14"
    },
    "3271": {
      "branch": 59,
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14986,
        15020
      ],
      "op": "GT",
      "path": "14"
    },
    "3272": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14982,
        15114
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCD3"
    },
    "3275": {
      "branch": 59,
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14982,
        15114
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3276": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15046,
        15049
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 37
    },
    "3277": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15040,
        15049
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3278": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15040,
        15049
      ],
      "op": "POP",
      "path": "14"
    },
    "3279": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14982,
        15114
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCDA"
    },
    "3282": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14982,
        15114
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3283": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14982,
        15114
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3284": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15098,
        15099
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 38,
      "value": "0x1"
    },
    "3286": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15094,
        15097
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3287": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15094,
        15099
      ],
      "op": "SUB",
      "path": "14"
    },
    "3288": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15088,
        15099
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3289": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15088,
        15099
      ],
      "op": "POP",
      "path": "14"
    },
    "3290": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14982,
        15114
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3291": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14906,
        15124
      ],
      "op": "POP",
      "path": "14"
    },
    "3292": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14906,
        15124
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xC8F"
    },
    "3295": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14906,
        15124
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3296": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14906,
        15124
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3297": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15151
      ],
      "op": "DUP5",
      "path": "14",
      "statement": 39
    },
    "3298": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15152,
        15155
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3299": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3300": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3301": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3302": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "LT",
      "path": "14"
    },
    "3303": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xCEC"
    },
    "3306": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3307": {
      "dev": "Index out of range",
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3308": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3309": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3311": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3312": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3313": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3314": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3316": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3317": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3318": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3319": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15156
      ],
      "op": "ADD",
      "path": "14"
    },
    "3320": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15162
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3323": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3325": {
      "op": "SHL"
    },
    "3326": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15162
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3327": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15162
      ],
      "op": "DIV",
      "path": "14"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "op": "SUB"
    },
    "3336": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15162
      ],
      "op": "AND",
      "path": "14"
    },
    "3337": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        15140,
        15162
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "3338": {
      "fn": "ERC20Base.getValueAt",
      "offset": [
        14388,
        15169
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "3339": {
      "op": "POP"
    },
    "3340": {
      "op": "POP"
    },
    "3341": {
      "op": "POP"
    },
    "3342": {
      "op": "POP"
    },
    "3343": {
      "op": "POP"
    },
    "3344": {
      "fn": "ERC20Base.getValueAt",
      "jump": "o",
      "offset": [
        14388,
        15169
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3345": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15387,
        15939
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3346": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15484,
        15502
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3347": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15484,
        15502
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3348": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15484,
        15507
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3349": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15484,
        15507
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3350": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15483,
        15574
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD45"
    },
    "3353": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15483,
        15574
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15525,
        15543
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3356": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15525,
        15543
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3357": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15561,
        15573
      ],
      "op": "NUMBER",
      "path": "14"
    },
    "3358": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15561,
        15573
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3359": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15524
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3360": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15524
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3363": {
      "op": "NOT"
    },
    "3364": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15525,
        15547
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3365": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15525,
        15547
      ],
      "op": "ADD",
      "path": "14"
    },
    "3366": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15525,
        15547
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3367": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3368": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "LT",
      "path": "14"
    },
    "3369": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD2E"
    },
    "3372": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3373": {
      "dev": "Index out of range",
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3374": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3375": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3377": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3378": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3379": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3380": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3382": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3383": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3384": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3385": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15548
      ],
      "op": "ADD",
      "path": "14"
    },
    "3386": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15558
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15558
      ],
      "op": "AND",
      "path": "14"
    },
    "3396": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15513,
        15573
      ],
      "op": "LT",
      "path": "14"
    },
    "3397": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15483,
        15574
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3398": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15479,
        15933
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3399": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15479,
        15933
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDAC"
    },
    "3402": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15479,
        15933
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3403": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15637,
        15657
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3404": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15637,
        15657
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3405": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15590,
        15622
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3407": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15590,
        15622
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3408": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15636
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3409": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15636
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3410": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15637,
        15657
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD5E"
    },
    "3413": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15636
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3414": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15637,
        15657
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3416": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15637,
        15657
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3417": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15637,
        15657
      ],
      "op": "ADD",
      "path": "14"
    },
    "3418": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15637,
        15657
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE95"
    },
    "3421": {
      "fn": "ERC20Base.updateValueAtNow",
      "jump": "i",
      "offset": [
        15637,
        15657
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3422": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15637,
        15657
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3423": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3424": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3425": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3426": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "LT",
      "path": "14"
    },
    "3427": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD68"
    },
    "3430": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3431": {
      "dev": "Index out of range",
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3432": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3433": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3435": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3436": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3437": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3438": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3440": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3441": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3442": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3443": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15625,
        15658
      ],
      "op": "ADD",
      "path": "14"
    },
    "3444": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 40
    },
    "3445": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3452": {
      "op": "SHL"
    },
    "3453": {
      "op": "SUB"
    },
    "3454": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15733,
        15770
      ],
      "op": "DUP5",
      "path": "14",
      "statement": 41
    },
    "3455": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15733,
        15770
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3456": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15733,
        15770
      ],
      "op": "AND",
      "path": "14"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3461": {
      "op": "SHL"
    },
    "3462": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15733,
        15770
      ],
      "op": "MUL",
      "path": "14"
    },
    "3463": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15706,
        15718
      ],
      "op": "NUMBER",
      "path": "14"
    },
    "3464": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3465": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "AND",
      "path": "14"
    },
    "3466": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3483": {
      "op": "NOT"
    },
    "3484": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3485": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3486": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "AND",
      "path": "14"
    },
    "3487": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3488": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3489": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3490": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15672,
        15719
      ],
      "op": "OR",
      "path": "14"
    },
    "3491": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15733,
        15770
      ],
      "op": "AND",
      "path": "14"
    },
    "3492": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15733,
        15770
      ],
      "op": "OR",
      "path": "14"
    },
    "3493": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15733,
        15770
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3494": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15733,
        15770
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15479,
        15933
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDE6"
    },
    "3499": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15479,
        15933
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3500": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15479,
        15933
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3501": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15848,
        15866
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3502": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15848,
        15866
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3503": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15801,
        15833
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3505": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15801,
        15833
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3506": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15847
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3507": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15847
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3510": {
      "op": "NOT"
    },
    "3511": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15848,
        15870
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3512": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15848,
        15870
      ],
      "op": "ADD",
      "path": "14"
    },
    "3513": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15848,
        15870
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3514": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3515": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "LT",
      "path": "14"
    },
    "3516": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDC1"
    },
    "3519": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3520": {
      "dev": "Index out of range",
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3521": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3522": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3524": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3525": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3526": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3527": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3529": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3530": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3531": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3532": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15836,
        15871
      ],
      "op": "ADD",
      "path": "14"
    },
    "3533": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 42
    },
    "3534": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3541": {
      "op": "SHL"
    },
    "3542": {
      "op": "SUB"
    },
    "3543": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3544": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3545": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "AND",
      "path": "14"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3550": {
      "op": "SHL"
    },
    "3551": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "MUL",
      "path": "14"
    },
    "3552": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3553": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "AND",
      "path": "14"
    },
    "3554": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "OR",
      "path": "14"
    },
    "3555": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3556": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15885,
        15922
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3557": {
      "op": "POP"
    },
    "3558": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15479,
        15933
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3559": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15387,
        15939
      ],
      "op": "POP",
      "path": "14"
    },
    "3560": {
      "fn": "ERC20Base.updateValueAtNow",
      "offset": [
        15387,
        15939
      ],
      "op": "POP",
      "path": "14"
    },
    "3561": {
      "fn": "ERC20Base.updateValueAtNow",
      "jump": "o",
      "offset": [
        15387,
        15939
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3562": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        15945,
        16218
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3563": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16035,
        16041
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3565": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16031,
        16212
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3566": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16051,
        16068
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3568": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16051,
        16075
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3569": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16047,
        16075
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3570": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16047,
        16075
      ],
      "op": "LT",
      "path": "14"
    },
    "3571": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16031,
        16212
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3572": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16031,
        16212
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE8F"
    },
    "3575": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16031,
        16212
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3576": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16091,
        16114
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3578": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16156
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3580": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16157,
        16158
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3581": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3582": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3583": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3584": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "LT",
      "path": "14"
    },
    "3585": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xE06"
    },
    "3588": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3589": {
      "dev": "Index out of range",
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "INVALID",
      "path": "14"
    },
    "3590": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3591": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3593": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3594": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3595": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3596": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3598": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3599": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3600": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "ADD",
      "path": "14"
    },
    "3601": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3602": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 43,
      "value": "0x40"
    },
    "3604": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3605": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3606": {
      "op": "PUSH4",
      "value": "0x4A393149"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3613": {
      "op": "SHL"
    },
    "3614": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3615": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3622": {
      "op": "SHL"
    },
    "3623": {
      "op": "SUB"
    },
    "3624": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP10",
      "path": "14"
    },
    "3625": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3626": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "AND",
      "path": "14"
    },
    "3627": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "3629": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3630": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "ADD",
      "path": "14"
    },
    "3631": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3632": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3633": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3634": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "AND",
      "path": "14"
    },
    "3635": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x24"
    },
    "3637": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3638": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "ADD",
      "path": "14"
    },
    "3639": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3640": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x44"
    },
    "3642": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3643": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "ADD",
      "path": "14"
    },
    "3644": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP9",
      "path": "14"
    },
    "3645": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3646": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3647": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3648": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3649": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3650": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3651": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3652": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "AND",
      "path": "14"
    },
    "3653": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3656": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3657": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16182
      ],
      "op": "PUSH4",
      "path": "14",
      "value": "0x4A393149"
    },
    "3662": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16182
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3663": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x64"
    },
    "3665": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3666": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3667": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "ADD",
      "path": "14"
    },
    "3668": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3669": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3670": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3671": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3672": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "SUB",
      "path": "14"
    },
    "3673": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "ADD",
      "path": "14"
    },
    "3674": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3675": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3676": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16139,
        16159
      ],
      "op": "DUP8",
      "path": "14"
    },
    "3677": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3678": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "EXTCODESIZE",
      "path": "14"
    },
    "3679": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3680": {
      "op": "DUP1"
    },
    "3681": {
      "op": "ISZERO"
    },
    "3682": {
      "op": "PUSH2",
      "value": "0xE6A"
    },
    "3685": {
      "op": "JUMPI"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3688": {
      "op": "DUP1"
    },
    "3689": {
      "op": "REVERT"
    },
    "3690": {
      "op": "JUMPDEST"
    },
    "3691": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "POP",
      "path": "14"
    },
    "3692": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "GAS",
      "path": "14"
    },
    "3693": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "CALL",
      "path": "14"
    },
    "3694": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16170,
        16203
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3695": {
      "op": "DUP1"
    },
    "3696": {
      "op": "ISZERO"
    },
    "3697": {
      "op": "PUSH2",
      "value": "0xE7E"
    },
    "3700": {
      "op": "JUMPI"
    },
    "3701": {
      "op": "RETURNDATASIZE"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3704": {
      "op": "DUP1"
    },
    "3705": {
      "op": "RETURNDATACOPY"
    },
    "3706": {
      "op": "RETURNDATASIZE"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3709": {
      "op": "REVERT"
    },
    "3710": {
      "op": "JUMPDEST"
    },
    "3711": {
      "op": "POP"
    },
    "3712": {
      "op": "POP"
    },
    "3713": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16077,
        16080
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 44,
      "value": "0x1"
    },
    "3715": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16077,
        16080
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3716": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16077,
        16080
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3717": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16077,
        16080
      ],
      "op": "ADD",
      "path": "14"
    },
    "3718": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16077,
        16080
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3719": {
      "op": "POP"
    },
    "3720": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16031,
        16212
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xDED"
    },
    "3723": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16031,
        16212
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3724": {
      "op": "POP"
    },
    "3725": {
      "op": "POP"
    },
    "3726": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16031,
        16212
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3727": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16031,
        16212
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3728": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        16031,
        16212
      ],
      "op": "POP",
      "path": "14"
    },
    "3729": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        15945,
        16218
      ],
      "op": "POP",
      "path": "14"
    },
    "3730": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        15945,
        16218
      ],
      "op": "POP",
      "path": "14"
    },
    "3731": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        15945,
        16218
      ],
      "op": "POP",
      "path": "14"
    },
    "3732": {
      "fn": "ERC20Base.onTransferDone",
      "jump": "o",
      "offset": [
        15945,
        16218
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3733": {
      "offset": [
        358,
        16793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3734": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3735": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3736": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3737": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3738": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3739": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3740": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3741": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "GT",
      "path": "14"
    },
    "3742": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3743": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEB9"
    },
    "3746": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3747": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3749": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3750": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3751": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3752": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3754": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3755": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "KECCAK256",
      "path": "14"
    },
    "3756": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEB9"
    },
    "3759": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3760": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3761": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "ADD",
      "path": "14"
    },
    "3762": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3763": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3764": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "ADD",
      "path": "14"
    },
    "3765": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEBE"
    },
    "3768": {
      "fn": "ERC20Base.onTransferDone",
      "jump": "i",
      "offset": [
        358,
        16793
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3769": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3770": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "POP",
      "path": "14"
    },
    "3771": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "POP",
      "path": "14"
    },
    "3772": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "POP",
      "path": "14"
    },
    "3773": {
      "fn": "ERC20Base.onTransferDone",
      "jump": "o",
      "offset": [
        358,
        16793
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3774": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3775": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x586"
    },
    "3778": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3779": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3780": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3781": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3782": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3783": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "GT",
      "path": "14"
    },
    "3784": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3785": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xED8"
    },
    "3788": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3789": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3791": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3792": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3793": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3795": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "ADD",
      "path": "14"
    },
    "3796": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xEC4"
    },
    "3799": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3800": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3801": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "POP",
      "path": "14"
    },
    "3802": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3803": {
      "fn": "ERC20Base.onTransferDone",
      "offset": [
        358,
        16793
      ],
      "op": "JUMP",
      "path": "14"
    }
  },
  "sha1": "0e542626109c2380c8c7be19ad95b7baaf8bafd3",
  "source": "pragma solidity >=0.4.21 <0.6.0;\nimport \"../utils/AddressArray.sol\";\n\ncontract ApproveAndCallFallBack {\n    function receiveApproval(\n        address from,\n        uint256 _amount,\n        address _token,\n        bytes memory _data\n    ) public;\n}\ncontract TransferEventCallBack{\n  function onTransfer(address _from, address _to, uint256 _amount) public;\n}\n\ncontract ERC20Base {\n    string public name;                //The Token's name: e.g. GTToken\n    uint8 public decimals;             //Number of decimals of the smallest unit\n    string public symbol;              //An identifier: e.g. REP\n    string public version = \"GTT_0.1\"; //An arbitrary versioning scheme\n\n    using AddressArray for address[];\n    address[] public transferListeners;\n\n////////////////\n// Events\n////////////////\n    event Transfer(address indexed _from, address indexed _to, uint256 _amount);\n    event Approval(\n        address indexed _owner,\n        address indexed _spender,\n        uint256 _amount\n        );\n\n    event NewTransferListener(address _addr);\n    event RemoveTransferListener(address _addr);\n\n    /// @dev `Checkpoint` is the structure that attaches a block number to a\n    ///  given value, the block number attached is the one that last changed the\n    ///  value\n    struct Checkpoint {\n        // `fromBlock` is the block number that the value was generated from\n        uint128 fromBlock;\n        // `value` is the amount of tokens at a specific block number\n        uint128 value;\n    }\n\n    // `parentToken` is the Token address that was cloned to produce this token;\n    //  it will be 0x0 for a token that was not cloned\n    ERC20Base public parentToken;\n\n    // `parentSnapShotBlock` is the block number from the Parent Token that was\n    //  used to determine the initial distribution of the Clone Token\n    uint public parentSnapShotBlock;\n\n    // `creationBlock` is the block number that the Clone Token was created\n    uint public creationBlock;\n\n    // `balances` is the map that tracks the balance of each address, in this\n    //  contract when the balance changes the block number that the change\n    //  occurred is also included in the map\n    mapping (address => Checkpoint[]) balances;\n\n    // `allowed` tracks any extra transfer rights as in all ERC20 tokens\n    mapping (address => mapping (address => uint256)) allowed;\n\n    // Tracks the history of the `totalSupply` of the token\n    Checkpoint[] totalSupplyHistory;\n\n    // Flag that determines if the token is transferable or not.\n    bool public transfersEnabled;\n\n////////////////\n// Constructor\n////////////////\n\n    /// @notice Constructor to create a ERC20Base\n    /// @param _parentToken Address of the parent token, set to 0x0 if it is a\n    ///  new token\n    /// @param _parentSnapShotBlock Block of the parent token that will\n    ///  determine the initial distribution of the clone token, set to 0 if it\n    ///  is a new token\n    /// @param _tokenName Name of the new token\n    /// @param _decimalUnits Number of decimals of the new token\n    /// @param _tokenSymbol Token Symbol for the new token\n    /// @param _transfersEnabled If true, tokens will be able to be transferred\n    constructor(\n        ERC20Base _parentToken,\n        uint _parentSnapShotBlock,\n        string memory _tokenName,\n        uint8 _decimalUnits,\n        string memory _tokenSymbol,\n        bool _transfersEnabled\n    )  public\n    {\n        name = _tokenName;                                 // Set the name\n        decimals = _decimalUnits;                          // Set the decimals\n        symbol = _tokenSymbol;                             // Set the symbol\n        parentToken = _parentToken;\n        parentSnapShotBlock = _parentSnapShotBlock;\n        transfersEnabled = _transfersEnabled;\n        creationBlock = block.number;\n    }\n\n\n///////////////////\n// ERC20 Methods\n///////////////////\n\n    /// @notice Send `_amount` tokens to `_to` from `msg.sender`\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return Whether the transfer was successful or not\n    function transfer(address _to, uint256 _amount) public returns (bool success) {\n        require(transfersEnabled);\n        return doTransfer(msg.sender, _to, _amount);\n    }\n\n    /// @notice Send `_amount` tokens to `_to` from `_from` on the condition it\n    ///  is approved by `_from`\n    /// @param _from The address holding the tokens being transferred\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return True if the transfer was successful\n    function transferFrom(address _from, address _to, uint256 _amount) public returns (bool success) {\n        require(transfersEnabled);\n\n        // The standard ERC 20 transferFrom functionality\n        if (allowed[_from][msg.sender] < _amount)\n            return false;\n        allowed[_from][msg.sender] -= _amount;\n        return doTransfer(_from, _to, _amount);\n    }\n\n    /// @dev This is the actual transfer function in the token contract, it can\n    ///  only be called by other functions in this contract.\n    /// @param _from The address holding the tokens being transferred\n    /// @param _to The address of the recipient\n    /// @param _amount The amount of tokens to be transferred\n    /// @return True if the transfer was successful\n    function doTransfer(address _from, address _to, uint _amount) internal returns(bool) {\n        if (_amount == 0) {\n            return true;\n        }\n        require(parentSnapShotBlock < block.number);\n        // Do not allow transfer to 0x0 or the token contract itself\n        require((_to != address(0)) && (_to != address(this)));\n        // If the amount being transfered is more than the balance of the\n        //  account the transfer returns false\n        uint256 previousBalanceFrom = balanceOfAt(_from, block.number);\n        if (previousBalanceFrom < _amount) {\n            return false;\n        }\n        // First update the balance array with the new value for the address\n        //  sending the tokens\n        updateValueAtNow(balances[_from], previousBalanceFrom - _amount);\n        // Then update the balance array with the new value for the address\n        //  receiving the tokens\n        uint256 previousBalanceTo = balanceOfAt(_to, block.number);\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\n        updateValueAtNow(balances[_to], previousBalanceTo + _amount);\n        // An event to make the transfer easy to find on the blockchain\n        \n        emit Transfer(_from, _to, _amount);\n        onTransferDone(_from, _to, _amount);\n        return true;\n    }\n\n    /// @param _owner The address that's balance is being requested\n    /// @return The balance of `_owner` at the current block\n    function balanceOf(address _owner) public view returns (uint256 balance) {\n        return balanceOfAt(_owner, block.number);\n    }\n\n    /// @notice `msg.sender` approves `_spender` to spend `_amount` tokens on\n    ///  its behalf. This is a modified version of the ERC20 approve function\n    ///  to be a little bit safer\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @param _amount The amount of tokens to be approved for transfer\n    /// @return True if the approval was successful\n    function approve(address _spender, uint256 _amount) public returns (bool success) {\n        require(transfersEnabled);\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender,0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require((_amount == 0) || (allowed[msg.sender][_spender] == 0));\n\n        allowed[msg.sender][_spender] = _amount;\n        emit Approval(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    /// @dev This function makes it easy to read the `allowed[]` map\n    /// @param _owner The address of the account that owns the token\n    /// @param _spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens of _owner that _spender is allowed\n    ///  to spend\n    function allowance(address _owner, address _spender) public view returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    /// @notice `msg.sender` approves `_spender` to send `_amount` tokens on\n    ///  its behalf, and then a function is triggered in the contract that is\n    ///  being approved, `_spender`. This allows users to use their tokens to\n    ///  interact with contracts in one function call instead of two\n    /// @param _spender The address of the contract able to transfer the tokens\n    /// @param _amount The amount of tokens to be approved for transfer\n    /// @return True if the function call was successful\n    function approveAndCall(ApproveAndCallFallBack _spender, uint256 _amount, bytes memory _extraData) public returns (bool success) {\n        require(approve(address(_spender), _amount));\n\n        _spender.receiveApproval(\n            msg.sender,\n            _amount,\n            address(this),\n            _extraData\n        );\n\n        return true;\n    }\n\n    /// @dev This function makes it easy to get the total number of tokens\n    /// @return The total number of tokens\n    function totalSupply() public view returns (uint) {\n        return totalSupplyAt(block.number);\n    }\n\n\n////////////////\n// Query balance and totalSupply in History\n////////////////\n\n    /// @dev Queries the balance of `_owner` at a specific `_blockNumber`\n    /// @param _owner The address from which the balance will be retrieved\n    /// @param _blockNumber The block number when the balance is queried\n    /// @return The balance at `_blockNumber`\n    function balanceOfAt(address _owner, uint _blockNumber) public view returns (uint) {\n\n        // These next few lines are used when the balance of the token is\n        //  requested before a check point was ever created for this token, it\n        //  requires that the `parentToken.balanceOfAt` be queried at the\n        //  genesis block for that token as this contains initial balance of\n        //  this token\n        if ((balances[_owner].length == 0) || (balances[_owner][0].fromBlock > _blockNumber)) {\n            if (address(parentToken) != address(0)) {\n                return parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock));\n            } else {\n                // Has no parent\n                return 0;\n            }\n\n        // This will return the expected balance during normal situations\n        } else {\n            return getValueAt(balances[_owner], _blockNumber);\n        }\n    }\n\n    /// @notice Total amount of tokens at a specific `_blockNumber`.\n    /// @param _blockNumber The block number when the totalSupply is queried\n    /// @return The total amount of tokens at `_blockNumber`\n    function totalSupplyAt(uint _blockNumber) public view returns(uint) {\n\n        // These next few lines are used when the totalSupply of the token is\n        //  requested before a check point was ever created for this token, it\n        //  requires that the `parentToken.totalSupplyAt` be queried at the\n        //  genesis block for this token as that contains totalSupply of this\n        //  token at this block number.\n        if ((totalSupplyHistory.length == 0) || (totalSupplyHistory[0].fromBlock > _blockNumber)) {\n            if (address(parentToken) != address(0)) {\n                return parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock));\n            } else {\n                return 0;\n            }\n\n        // This will return the expected totalSupply during normal situations\n        } else {\n            return getValueAt(totalSupplyHistory, _blockNumber);\n        }\n    }\n\n////////////////\n// Generate and destroy tokens\n////////////////\n\n    /// @notice Generates `_amount` tokens that are assigned to `_owner`\n    /// @param _owner The address that will be assigned the new tokens\n    /// @param _amount The quantity of tokens generated\n    /// @return True if the tokens are generated correctly\n    function _generateTokens(address _owner, uint _amount) internal returns (bool) {\n        uint curTotalSupply = totalSupply();\n        require(curTotalSupply + _amount >= curTotalSupply); // Check for overflow\n        uint previousBalanceTo = balanceOf(_owner);\n        require(previousBalanceTo + _amount >= previousBalanceTo); // Check for overflow\n        updateValueAtNow(totalSupplyHistory, curTotalSupply + _amount);\n        updateValueAtNow(balances[_owner], previousBalanceTo + _amount);\n        emit Transfer(address(0), _owner, _amount);\n        onTransferDone(address(0), _owner, _amount);\n        return true;\n    }\n\n\n    /// @notice Burns `_amount` tokens from `_owner`\n    /// @param _owner The address that will lose the tokens\n    /// @param _amount The quantity of tokens to burn\n    /// @return True if the tokens are burned correctly\n    function _destroyTokens(address _owner, uint _amount) internal returns (bool) {\n        uint curTotalSupply = totalSupply();\n        require(curTotalSupply >= _amount);\n        uint previousBalanceFrom = balanceOf(_owner);\n        require(previousBalanceFrom >= _amount);\n        updateValueAtNow(totalSupplyHistory, curTotalSupply - _amount);\n        updateValueAtNow(balances[_owner], previousBalanceFrom - _amount);\n        emit Transfer(_owner, address(0), _amount);\n        onTransferDone(_owner, address(0), _amount);\n        return true;\n    }\n\n////////////////\n// Enable tokens transfers\n////////////////\n\n\n    /// @notice Enables token holders to transfer their tokens freely if true\n    /// @param _transfersEnabled True if transfers are allowed in the clone\n    function _enableTransfers(bool _transfersEnabled) internal {\n        transfersEnabled = _transfersEnabled;\n    }\n\n////////////////\n// Internal helper functions to query and set a value in a snapshot array\n////////////////\n\n    /// @dev `getValueAt` retrieves the number of tokens at a given block number\n    /// @param checkpoints The history of values being queried\n    /// @param _block The block number to retrieve the value at\n    /// @return The number of tokens being queried\n    function getValueAt(Checkpoint[] storage checkpoints, uint _block) internal view returns (uint) {\n        if (checkpoints.length == 0)\n            return 0;\n\n        // Shortcut for the actual value\n        if (_block >= checkpoints[checkpoints.length-1].fromBlock)\n            return checkpoints[checkpoints.length-1].value;\n        if (_block < checkpoints[0].fromBlock)\n            return 0;\n\n        // Binary search of the value in the array\n        uint min = 0;\n        uint max = checkpoints.length-1;\n        while (max > min) {\n            uint mid = (max + min + 1) / 2;\n            if (checkpoints[mid].fromBlock<=_block) {\n                min = mid;\n            } else {\n                max = mid-1;\n            }\n        }\n        return checkpoints[min].value;\n    }\n\n    /// @dev `updateValueAtNow` used to update the `balances` map and the\n    ///  `totalSupplyHistory`\n    /// @param checkpoints The history of data being updated\n    /// @param _value The new number of tokens\n    function updateValueAtNow(Checkpoint[] storage checkpoints, uint _value) internal {\n        if ((checkpoints.length == 0) || (checkpoints[checkpoints.length - 1].fromBlock < block.number)) {\n            Checkpoint storage newCheckPoint = checkpoints[checkpoints.length++];\n            newCheckPoint.fromBlock = uint128(block.number);\n            newCheckPoint.value = uint128(_value);\n        } else {\n            Checkpoint storage oldCheckPoint = checkpoints[checkpoints.length - 1];\n            oldCheckPoint.value = uint128(_value);\n        }\n    }\n\n    function onTransferDone(address _from, address _to, uint256 _amount) internal {\n      for(uint i = 0; i < transferListeners.length; i++){\n        TransferEventCallBack t = TransferEventCallBack(transferListeners[i]);\n        t.onTransfer(_from, _to, _amount);\n      }\n    }\n\n    function _addTransferListener(address _addr) internal {\n      transferListeners.push(_addr);\n      emit NewTransferListener(_addr);\n    }\n    function _removeTransferListener(address _addr) internal{\n      transferListeners.remove(_addr);\n      emit RemoveTransferListener(_addr);\n    }\n\n    /// @dev Helper function to return a min betwen the two uints\n    function min(uint a, uint b) pure internal returns (uint) {\n        return a < b ? a : b;\n    }\n\n    //function () external payable {\n        //require(false, \"cannot transfer ether to this contract\");\n    //}\n}\n",
  "sourceMap": "601:33:14:-;358:16435;601:33;;358:16435;601:33;;;;;;;;;;;;;;:::i;:::-;;3171:638;8:9:-1;5:2;;;30:1;27;20:12;5:2;3171:638:14;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3171:638:14;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;3171:638:14;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;3171:638:14;;;;;3409:17;;3171:638;;-1:-1:-1;3171:638:14;-1:-1:-1;3409:17:14;;:4;;:17;;;;;:::i;:::-;-1:-1:-1;3484:8:14;:24;;-1:-1:-1;;3484:24:14;;;;;;;3563:21;;;;:6;;:21;;;;;:::i;:::-;-1:-1:-1;3640:11:14;:26;;-1:-1:-1;;;;;;3640:26:14;-1:-1:-1;;;;;3640:26:14;;;;;;;;;;;-1:-1:-1;;;3676:19:14;:42;3728:16;:36;;-1:-1:-1;;3728:36:14;;;;;;;;;;3790:12;3774:13;:28;358:16435;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;358:16435:14;;;-1:-1:-1;358:16435:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/erc20/ERC20Impl.sol",
  "type": "contract"
}